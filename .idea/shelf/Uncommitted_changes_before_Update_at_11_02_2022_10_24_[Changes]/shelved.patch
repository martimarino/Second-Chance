Index: src/main/java/it/unipi/dii/largescale/secondchance/connection/ConnectionNeo4jDB.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package main.java.it.unipi.dii.largescale.secondchance.connection;\r\n\r\nimport main.java.it.unipi.dii.largescale.secondchance.entity.Insertion;\r\nimport main.java.it.unipi.dii.largescale.secondchance.entity.User;\r\nimport main.java.it.unipi.dii.largescale.secondchance.utils.Utility;\r\nimport org.bson.Document;\r\nimport org.neo4j.driver.*;\r\nimport org.neo4j.driver.Record;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport static org.neo4j.driver.Values.parameters;\r\n\r\npublic class ConnectionNeo4jDB implements AutoCloseable\r\n{\r\n    private Driver driver;\r\n    String uri = \"neo4j://127.0.0.1:7687\";\r\n    String user = \"neo4j\";\r\n    String password = \"2nd-chance\";\r\n    public static ConnectionNeo4jDB connNeo;\r\n\r\n    public void open()\r\n    {\r\n        driver = GraphDatabase.driver( uri, AuthTokens.basic( user, password ) );\r\n    }\r\n\r\n    @Override\r\n    public void close()\r\n    {\r\n        driver.close();\r\n    }\r\n\r\n    public boolean addUser(final User u)\r\n    {\r\n        this.open();\r\n        try ( Session session = driver.session() )\r\n        {\r\n            session.writeTransaction((TransactionWork<Void>) tx -> {\r\n                tx.run(\"MERGE (u:User {username: $username, country: $country})\",\r\n                        parameters(\"username\", u.getUsername(),\r\n                                \"country\", u.getCountry()));\r\n                return null;\r\n            });\r\n            return true;\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }finally{\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    public boolean addInsertion(final Insertion i)\r\n    {\r\n        this.open();\r\n        try ( Session session = driver.session() )\r\n        {\r\n            session.writeTransaction((TransactionWork<Void>) tx -> {\r\n                tx.run( \"MERGE (i:Insertion {uniq_id: $uniq_id, category: $category,\" +\r\n                                \"gender: $gender})\",\r\n                        parameters( \"uniq_id\", i.getId(), \"category\", i.getCategory(),\r\n                                \"gender\", i.getGender()));\r\n                return null;\r\n            });\r\n            this.close();\r\n            return true;\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            Utility.printTerminal(\"Cannot create new insertion node\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public void followUser(String follower, String followed) {\r\n        this.open();\r\n        System.out.println(\"USER_FOLLOWER: \" + follower + \"USER_FOLLOWED : \" + followed);\r\n        try ( Session session = driver.session() )\r\n        {\r\n            session.writeTransaction((TransactionWork<Void>) tx -> {\r\n                tx.run( \"MATCH (u:User),(v) \" +\r\n                                \"WHERE u.username = $username1 AND v.username = $username2 \" +\r\n                                \"CREATE (u)-[:FOLLOWS]->(v)\",\r\n                        parameters( \"username1\", follower, \"username2\", followed));\r\n                return null;\r\n            });\r\n            this.close();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void unfollowUser(String unfollower, String unfollowed) {\r\n        this.open();\r\n        try ( Session session = driver.session() )\r\n        {\r\n            session.writeTransaction((TransactionWork<Void>) tx -> {\r\n                tx.run( \"MATCH (u:User)-[rel:FOLLOWS]->(v)  \" +\r\n                                \"WHERE u.username = $username1 AND v.username = $username2 \" +\r\n                                \"DELETE rel\",\r\n                        parameters( \"username1\", unfollower, \"username2\", unfollowed));\r\n                return null;\r\n            });\r\n            this.close();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public ArrayList<String> getSuggestedUsers(String username, String country, int k) {\r\n        this.open();\r\n        ArrayList<String> suggestions = new ArrayList<>();\r\n        try (Session session = driver.session()) {\r\n\r\n            List<String> similar = session.readTransaction((TransactionWork<List<String>>) tx -> {\r\n\r\n                Result result = tx.run( \"MATCH (u:User)-[:FOLLOWS]->(m)-[:FOLLOWS]->(others) \" +\r\n\r\n                                \"WHERE u.username = $username AND u.country = $country AND others.country = $country \" +\r\n                                \"AND NOT (u)-[:FOLLOWS]->(others) \" +\r\n                                \"RETURN others.username as SuggUsers \" +\r\n                                \"LIMIT $k\",\r\n                        parameters(\"username\", username,\r\n                                \"country\", country,\r\n                                \"k\", k));\r\n                while (result.hasNext()) {\r\n                    Record r = result.next();\r\n                    suggestions.add(r.get(\"SuggUsers\").asString());\r\n                }\r\n                return suggestions;\r\n            });\r\n            Utility.printTerminal(\"NEO4j\\n\" + similar);\r\n            this.close();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return suggestions;\r\n    }\r\n\r\n\r\n    public ArrayList<String> getFollowedInsertions(String username, int k) {\r\n\r\n        this.open();\r\n        ArrayList<String> followed = new ArrayList<>();\r\n        try (Session session = driver.session()) {\r\n\r\n            List<String> insertions = session.readTransaction((TransactionWork<List<String>>) tx -> {\r\n\r\n                Result result = tx.run( \"MATCH (u:User)-[:FOLLOWS]->(m)-[:POSTED]->(i:Insertion) \" +\r\n                                \"WHERE u.username = $username \" +\r\n                                \"RETURN i.uniq_id as SuggIns \" +\r\n                                \"LIMIT $k\",\r\n                        parameters(\"username\", username,\r\n                                \"k\", k));\r\n\r\n                while (result.hasNext()) {\r\n                    Record r = result.next();\r\n                    System.out.println(\"SUGGINS: \" + r.get(\"SuggIns\").asString());\r\n                    followed.add(r.get(\"SuggIns\").asString());\r\n                }\r\n                return followed;\r\n            });\r\n            Utility.printTerminal(\"NEO4j\\n\" + insertions);\r\n            this.close();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return followed;\r\n\r\n    }\r\n\r\n    public boolean likeInsertion(String username, String insertion_id) {\r\n\r\n        this.open();\r\n        System.out.println(\"INSERTION NEO : \" + insertion_id);\r\n\r\n        try (Session session = driver.session()) {\r\n            session.writeTransaction((TransactionWork<Void>) tx -> {\r\n                tx.run(\r\n                        \"MATCH (u:User {username: $username})\" +\r\n                                \"CREATE (u)-[rel:INTERESTED]->(i: Insertion {uniq_id: $id})\", parameters(\"username\", username,\r\n                                \"id\", insertion_id));\r\n                return null;\r\n            });\r\n            return true;\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }finally{\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    public boolean dislikeInsertion(String username, String insertion_id) {\r\n\r\n        this.open();\r\n\r\n        try (Session session = driver.session()) {\r\n            session.writeTransaction((TransactionWork<Void>) tx -> {\r\n                tx.run(\r\n                        \"MATCH (u:User { username: $username})-[r:INTERESTED]->(i :Insertion { uniq_id: $id})\\n\" +\r\n                                \"DELETE r\", parameters(\"username\", username,\r\n                                \"id\", insertion_id));\r\n                return null;\r\n            });\r\n            return true;\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }finally {\r\n            this.close();\r\n        }\r\n    }\r\n\r\n\r\n    public boolean showIfInterested(String username, String insertion_id) {\r\n\r\n        this.open();\r\n\r\n        try (Session session = driver.session()) {\r\n            Boolean relation = session.readTransaction((TransactionWork<Boolean>) tx -> {\r\n                Result result = tx.run(\"MATCH (u:User { username: $username})-[r:INTERESTED]->(i :Insertion { uniq_id: $id})\\n\" +\r\n                        \"RETURN r\", parameters(\"username\", username,\r\n                        \"id\", insertion_id));\r\n\r\n                return result.hasNext();\r\n            });\r\n            System.out.println(relation);\r\n            this.close();\r\n            return relation;\r\n        }\r\n    }\r\n\r\n    public boolean deleteInsertion(String uniq_id) {\r\n        this.open();\r\n\r\n        try (Session session = driver.session()) {\r\n            session.writeTransaction((TransactionWork<Void>) tx -> {\r\n                tx.run(\"MATCH (i:Insertion{uniq_id : $uniq_id}) DETACH DELETE i;\",\r\n                        parameters(\"uniq_id\", uniq_id));\r\n                return null;\r\n            });\r\n            return true;\r\n        }catch(Exception e)\r\n        {\r\n            return false;\r\n        }finally{\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    public boolean checkIfFollows(String us1, String us2) {\r\n\r\n        this.open();\r\n        Boolean check;\r\n\r\n        try(Session session = driver.session()) {\r\n            check = session.readTransaction((TransactionWork<Boolean>) tx -> {\r\n                Result result = tx.run(\r\n                        \"MATCH (a:User {username: $username1})-[r:FOLLOWS]->(b:User {username: $username2}) \" +\r\n                                \"RETURN r\",\r\n                        parameters( \"username1\", us1,\r\n                                \"username2\", us2));\r\n\r\n                return result.hasNext();\r\n            });\r\n            this.close();\r\n            return check;\r\n        }\r\n    }\r\n\r\n    public void followUnfollowButton(String text, String us1, String us2) {\r\n\r\n        switch (text) {\r\n            case \"Follow\":\r\n                followUser(us1, us2);\r\n                break;\r\n\r\n            case \"Unfollow\":\r\n                unfollowUser(us1, us2);\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    public boolean createPostedRelationship(String node1, String node2) {\r\n\r\n        this.open();\r\n        try(Session session = driver.session()) {\r\n                session.writeTransaction((TransactionWork<Void>) tx -> {\r\n                tx.run(\r\n                        \"MATCH (u:User),(i:Insertion) \" +\r\n                                \"WHERE u.username = $username AND i.uniq_id = $id \" +\r\n                                \"CREATE (u)-[:POSTED]->(i)\",\r\n                        parameters( \"username\", node1,\r\n                                \"id\", node2));\r\n                return null;\r\n            });\r\n            this.close();\r\n            return true;\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        Utility.printTerminal(\"Cannot create POSTED relationship\");\r\n        return false;\r\n\r\n    }\r\n\r\n    /* ********** USER SOCIAL FUNCTIONALITIES ********** */\r\n\r\n    public ArrayList<String> retrieveFollowersByUser(String user) {\r\n\r\n        this.open();\r\n        ArrayList<String> followers = new ArrayList<>();\r\n\r\n        try (Session session = driver.session()) {\r\n\r\n            List<String> follow = session.readTransaction((TransactionWork<List<String>>) tx -> {\r\n                Result result = tx.run( \"MATCH (u:User) <- [r:FOLLOWS] - (u1:User) \" +\r\n                                \"WHERE u.username = $username \" +\r\n                                \"RETURN u1.username as name \",\r\n                        parameters( \"username\", user));\r\n\r\n                while(result.hasNext())\r\n                {\r\n                    Record r = result.next();\r\n                    followers.add(r.get(\"name\").asString());\r\n                }\r\n                return followers;\r\n            });\r\n            if(!follow.isEmpty())\r\n                Utility.printTerminal(follow.get(0));\r\n            this.close();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return followers;\r\n    }\r\n\r\n    public ArrayList<String> retrieveFollowingByUser(String user) {\r\n\r\n        this.open();\r\n        ArrayList<String> following = new ArrayList<>();\r\n\r\n        try (Session session = driver.session()) {\r\n\r\n            List<String> follow = session.readTransaction((TransactionWork<List<String>>) tx -> {\r\n                Result result = tx.run( \"MATCH (u:User) - [r:FOLLOWS] -> (u1:User) \" +\r\n                                \"WHERE u.username = $username \" +\r\n                                \"RETURN u1.username as name \",\r\n                        parameters( \"username\", user));\r\n\r\n                while(result.hasNext())\r\n                {\r\n                    Record r = result.next();\r\n                    following.add(r.get(\"name\").asString());\r\n                }\r\n                return following;\r\n            });\r\n            if(!follow.isEmpty())\r\n                Utility.printTerminal(follow.get(0));\r\n            this.close();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return following;\r\n    }\r\n\r\n    public ArrayList<String> retrieveFollowedInsertionByUser(String user) {\r\n\r\n        this.open();\r\n        ArrayList<String> followed_ins = new ArrayList<>();\r\n\r\n        try (Session session = driver.session()) {\r\n\r\n            List<String> follow = session.readTransaction((TransactionWork<List<String>>) tx -> {\r\n                Result result = tx.run( \"MATCH (u:User) - [r:INTERESTED] -> (i:Insertion)\" +\r\n                                \"WHERE u.username = $username \" +\r\n                                \"RETURN i.uniq_id as uniq_id\",\r\n                        parameters( \"username\", user));\r\n\r\n                while(result.hasNext())\r\n                {\r\n                    Record r = result.next();\r\n                    followed_ins.add(r.get(\"uniq_id\").asString());\r\n                }\r\n                return followed_ins;\r\n            });\r\n            if(!followed_ins.isEmpty())\r\n                Utility.printTerminal(\"*************** NEO4j FOLLOWED INSERTIONS ***************\\n\"\r\n                                        + followed_ins.get(0));\r\n            this.close();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return followed_ins;\r\n    }\r\n\r\n    public boolean deleteInsertionNeo4J(String id) {\r\n        this.open();\r\n\r\n        try (Session session = driver.session()) {\r\n            session.writeTransaction((TransactionWork<Void>) tx -> {\r\n                tx.run(\r\n                        \"MATCH (u:Insertion {uniq_id: $id})\" +\r\n                                \"DETACH DELETE u\", parameters(\"id\", id));\r\n                return null;\r\n            });\r\n            return true;\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }finally{\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    public ArrayList<String> findMostFollowedUsers(int k) {\r\n\r\n        this.open();\r\n        ArrayList<String> followedUsers = new ArrayList<>();\r\n\r\n        try (Session session = driver.session()) {\r\n\r\n            session.readTransaction((TransactionWork<List<String>>) tx -> {\r\n                Result result = tx.run(\"match(u:User)-[r:FOLLOWS]->(u1:User) \" +\r\n                                \"RETURN u1.username as user, COUNT(r) as counter order by counter DESC limit $k\",\r\n                        parameters(\"k\", k));\r\n\r\n                while (result.hasNext()) {\r\n                    Record r = result.next();\r\n                    String user = r.get(\"user\").asString();\r\n                    int count = r.get(\"counter\").asInt();\r\n                    String us = user + \":\" + count;\r\n                    followedUsers.add(us);\r\n                }\r\n\r\n                return followedUsers;\r\n\r\n            });\r\n        } catch (Exception e)\r\n        {\r\n            e.printStackTrace();\r\n        }\r\n        return followedUsers;\r\n    }\r\n\r\n    public ArrayList<String> findNumberInterestingForCategory() {\r\n\r\n        this.open();\r\n        ArrayList<String> interesting = new ArrayList<>();\r\n\r\n        try (Session session = driver.session()) {\r\n\r\n            session.readTransaction((TransactionWork<List<String>>) tx -> {\r\n                Result result = tx.run(\"match(u:User)-[r:INTERESTED]->(i:Insertion) \" +\r\n                        \"RETURN DISTINCT i.category as category, count(r) AS counter\" +\r\n                        \" ORDER BY counter DESC\");\r\n\r\n                while (result.hasNext()) {\r\n                    Record r = result.next();\r\n                    String category = r.get(\"category\").asString();\r\n                    int count = r.get(\"counter\").asInt();\r\n                    String ins = category + \":\" + count;\r\n                    interesting.add(ins);\r\n                }\r\n\r\n                return interesting;\r\n\r\n            });\r\n        } catch (Exception e)\r\n        {\r\n            e.printStackTrace();\r\n        }\r\n        return interesting;\r\n\r\n    }\r\n\r\n    public ArrayList<String> findNumberPostedInsertionForCountry() {\r\n\r\n        this.open();\r\n        ArrayList<String> posted = new ArrayList<>();\r\n\r\n        try (Session session = driver.session()) {\r\n\r\n            session.readTransaction((TransactionWork<List<String>>) tx -> {\r\n                Result result = tx.run(\"match(u:User)-[r:POSTED]->(i:Insertion) \" +\r\n                        \"RETURN DISTINCT u.country as country, count(r) AS counter\" +\r\n                        \" ORDER BY counter DESC\");\r\n\r\n                while (result.hasNext()) {\r\n                    Record r = result.next();\r\n                    String country = r.get(\"country\").asString();\r\n                    int count = r.get(\"counter\").asInt();\r\n                    String ins = country + \":\" + count;\r\n                    posted.add(ins);\r\n                }\r\n\r\n                return posted;\r\n\r\n            });\r\n        } catch (Exception e)\r\n        {\r\n            e.printStackTrace();\r\n        }\r\n        return posted;\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/it/unipi/dii/largescale/secondchance/connection/ConnectionNeo4jDB.java b/src/main/java/it/unipi/dii/largescale/secondchance/connection/ConnectionNeo4jDB.java
--- a/src/main/java/it/unipi/dii/largescale/secondchance/connection/ConnectionNeo4jDB.java	(revision 8102505a1414fcdf006a0a88c1e7681c7b90e21e)
+++ b/src/main/java/it/unipi/dii/largescale/secondchance/connection/ConnectionNeo4jDB.java	(date 1644504235159)
@@ -59,8 +59,7 @@
             session.writeTransaction((TransactionWork<Void>) tx -> {
                 tx.run( "MERGE (i:Insertion {uniq_id: $uniq_id, category: $category," +
                                 "gender: $gender})",
-                        parameters( "uniq_id", i.getId(), "category", i.getCategory(),
-                                "gender", i.getGender()));
+                        parameters( "uniq_id", i.getId(), "category", i.getCategory()));
                 return null;
             });
             this.close();
Index: src/main/java/it/unipi/dii/largescale/secondchance/controller/NewInsertionController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package main.java.it.unipi.dii.largescale.secondchance.controller;\r\n\r\nimport com.mongodb.MongoException;\r\nimport javafx.fxml.*;\r\nimport javafx.scene.control.*;\r\nimport main.java.it.unipi.dii.largescale.secondchance.connection.ConnectionMongoDB;\r\nimport main.java.it.unipi.dii.largescale.secondchance.connection.ConnectionNeo4jDB;\r\nimport main.java.it.unipi.dii.largescale.secondchance.entity.Insertion;\r\nimport main.java.it.unipi.dii.largescale.secondchance.utils.Session;\r\nimport main.java.it.unipi.dii.largescale.secondchance.utils.Utility;\r\nimport org.bson.types.ObjectId;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.util.Random;\r\n\r\npublic class NewInsertionController {\r\n\r\n    @FXML private ComboBox<String> categ;\r\n    @FXML private ToggleGroup myToggleGroup;\r\n    @FXML private TextField price;\r\n    @FXML private ComboBox<String> status;\r\n    @FXML private TextField color;\r\n    @FXML private ComboBox<String> size;\r\n    @FXML private TextField brand;\r\n    @FXML private ComboBox<String> country;\r\n    @FXML private TextArea desc;\r\n    @FXML private TextField link;\r\n    int upperbound = 9999999;\r\n\r\n    public void AddNewInsertion() {\r\n        if((categ.getValue().equals(\"-\")) || (status.getValue().equals(\"-\"))\r\n            || (size.getValue().equals(\"-\")) || country.getValue().equals(\"-\")\r\n            || (price.getText().isEmpty()) || link.getText().isEmpty()) {\r\n\r\n            Utility.infoBox(\"You have to fill all the fields\", \"Error\", \"Missing values\");\r\n            return;\r\n        }\r\n\r\n        //check price type\r\n        double p;\r\n        if(!price.getText().matches(\"[0-9]{1,13}(\\\\.[0-9]*)?\")) {\r\n            Utility.infoBox(\"Please insert a correct value for price (e.g. 10.99)\", \"Format error\", \"Price format is not correct\");\r\n            return;\r\n        }\r\n        p = Double.parseDouble(price.getText());\r\n\r\n        //generate id;\r\n        ObjectId id = new ObjectId();\r\n        RadioButton chk = (RadioButton)myToggleGroup.getSelectedToggle(); // Cast object to radio button\r\n        String gender = chk.getText();\r\n\r\n        //generate timestamp\r\n        Date date = new Date();\r\n        String formattedDate = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").format(date);\r\n\r\n        Insertion i = new Insertion(id.toString(), categ.getValue(), desc.getText(), gender, p, 0, 0, status.getValue(), color.getText(), size.getValue(),\r\n                brand.getText(), country.getValue(), link.getText(), formattedDate, Session.getLoggedUser().getUsername());\r\n        Utility.printTerminal(i.toString());\r\n\r\n        //MongoDB failure\r\n        try {\r\n            ConnectionMongoDB.connMongo.addInsertion(i);\r\n        } catch (Exception e) {\r\n            Utility.infoBox(\"Insertion not published, retry.\", \"Error\", \"Something went wrong on MongoDB\");\r\n            return;\r\n        }\r\n        //Neo4j failure\r\n        if(!ConnectionNeo4jDB.connNeo.addInsertion(i)) {\r\n            Utility.infoBox(\"Insertion not published, retry.\", \"Error\", \"Something went wrong on Neo4j\");\r\n            ConnectionMongoDB.connMongo.deleteInsertionMongo(i.getId());\r\n            return;\r\n        }\r\n        if((!ConnectionNeo4jDB.connNeo.createPostedRelationship(Session.getLoggedUser().getUsername(), i.getId()))){\r\n            Utility.infoBox(\"Insertion not published, retry.\", \"Error\", \"Something went wrong on Neo4j\");\r\n            ConnectionMongoDB.connMongo.deleteInsertionMongo(i.getId());\r\n            ConnectionNeo4jDB.connNeo.deleteInsertionNeo4J(i.getId());\r\n            return;\r\n        }\r\n\r\n        //clear fields\r\n        categ.setValue(\"-\");\r\n        price.setText(\"\");\r\n        status.setValue(\"-\");\r\n        color.setText(\"\");\r\n        size.setValue(\"-\");\r\n        brand.setText(\"\");\r\n        country.setValue(\"-\");\r\n        desc.setText(\"\");\r\n        link.setText(\"\");\r\n\r\n        Utility.infoBox(\"Your insertion has been correctly published!\", \"Success\", \"Correctly published.\");\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/it/unipi/dii/largescale/secondchance/controller/NewInsertionController.java b/src/main/java/it/unipi/dii/largescale/secondchance/controller/NewInsertionController.java
--- a/src/main/java/it/unipi/dii/largescale/secondchance/controller/NewInsertionController.java	(revision 8102505a1414fcdf006a0a88c1e7681c7b90e21e)
+++ b/src/main/java/it/unipi/dii/largescale/secondchance/controller/NewInsertionController.java	(date 1644504352220)
@@ -30,6 +30,7 @@
 
     public void AddNewInsertion() {
         if((categ.getValue().equals("-")) || (status.getValue().equals("-"))
+                ||(color.getText().isEmpty()) || (brand.getText().isEmpty())
             || (size.getValue().equals("-")) || country.getValue().equals("-")
             || (price.getText().isEmpty()) || link.getText().isEmpty()) {
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"78096fe8-9952-45af-bf90-4f98cdf0dd02\" name=\"Changes\" comment=\"add new functions admin page\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/unipi/dii/largescale/secondchance/connection/ConnectionNeo4jDB.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/unipi/dii/largescale/secondchance/connection/ConnectionNeo4jDB.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/unipi/dii/largescale/secondchance/controller/FollowController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/unipi/dii/largescale/secondchance/controller/FollowController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/unipi/dii/largescale/secondchance/controller/MyOrderController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/unipi/dii/largescale/secondchance/controller/MyOrderController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/unipi/dii/largescale/secondchance/controller/ProfileController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/unipi/dii/largescale/secondchance/controller/ProfileController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/unipi/dii/largescale/secondchance/controller/SearchInsertionController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/unipi/dii/largescale/secondchance/controller/SearchInsertionController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/FXML/FollowPage.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/FXML/FollowPage.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/FXML/Profile.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/FXML/Profile.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/FXML/Profile.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/FXML/Profile.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/FXML/Stats.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/FXML/Stats.fxml\" afterDir=\"false\" />\r\n    </list>\r\n    <list id=\"03123c90-a928-4e0a-bf69-e1d59086bd15\" name=\"Changes by adelmobrunelli\" comment=\"Changes by adelmobrunelli\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"24cGP07hMuydzouSsyqELUKrZS4\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"codeWithMe.voiceChat.enabledByDefault\" value=\"false\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/target/classes/FXML\" />\r\n    <property name=\"node.js.detected.package.eslint\" value=\"true\" />\r\n    <property name=\"node.js.selected.package.eslint\" value=\"(autodetect)\" />\r\n    <property name=\"node.js.selected.package.tslint\" value=\"(autodetect)\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Project\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.0\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.0\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\matre\\Desktop\\Large-Scale-Project\\target\\classes\\FXML\" />\r\n      <recent name=\"C:\\Users\\matre\\Desktop\\Large-Scale-Project\\target\\classes\" />\r\n      <recent name=\"C:\\Users\\matre\\Desktop\\Large-Scale-Project\\target\\classes\\img\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"SecondChanceGUI\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"main.java.it.unipi.dii.largescale.secondchance.SecondChanceGUI\" />\r\n      <module name=\"Large-Scale-Project\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"main.java.it.unipi.dii.largescale.secondchance.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.SecondChanceGUI\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"78096fe8-9952-45af-bf90-4f98cdf0dd02\" name=\"Changes\" comment=\"\" />\r\n      <created>1643922440258</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1643922440258</updated>\r\n      <workItem from=\"1643922443095\" duration=\"3073000\" />\r\n      <workItem from=\"1643983831619\" duration=\"15905000\" />\r\n      <workItem from=\"1644075264558\" duration=\"7403000\" />\r\n      <workItem from=\"1644146357420\" duration=\"406000\" />\r\n      <workItem from=\"1644147960802\" duration=\"711000\" />\r\n      <workItem from=\"1644152757678\" duration=\"123000\" />\r\n      <workItem from=\"1644162541952\" duration=\"6928000\" />\r\n      <workItem from=\"1644170803249\" duration=\"461000\" />\r\n      <workItem from=\"1644310037703\" duration=\"6467000\" />\r\n      <workItem from=\"1644347340303\" duration=\"8090000\" />\r\n      <workItem from=\"1644395849334\" duration=\"7625000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Fix admin function, fix other problems\">\r\n      <created>1643993961652</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1643993961652</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Changes by adelmobrunelli\">\r\n      <created>1643993973632</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1643993973632</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Fix img_profile, fix followers and following show from profile page, fix registration user\">\r\n      <created>1644003160796</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1644003160796</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Fix do orders and update and put review, error message on clicking insertion after purchase, fix sign up\">\r\n      <created>1644082904622</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1644082904623</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"upadte commit\">\r\n      <created>1644152843260</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1644152843260</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"fix most active user into admin, fix searchinsertion arrows\">\r\n      <created>1644170714400</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1644170714400</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"New insertion with ObjectId\">\r\n      <created>1644228305719</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1644228305719</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Changes regarding new collection balance.\">\r\n      <created>1644255846996</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1644255846996</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"SearchInsertionController arrows fixed.\">\r\n      <created>1644272830774</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1644272830774</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"add new functions admin page\">\r\n      <created>1644334461819</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1644334461819</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"11\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"fix\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Fix admin function, fix other problems\" />\r\n    <MESSAGE value=\"Changes by adelmobrunelli\" />\r\n    <MESSAGE value=\"Fix img_profile, fix followers and following show from profile page, fix registration user\" />\r\n    <MESSAGE value=\"Fix do orders and update and put review, error message on clicking insertion after purchase, fix sign up\" />\r\n    <MESSAGE value=\"upadte commit\" />\r\n    <MESSAGE value=\"fix most active user into admin, fix searchinsertion arrows\" />\r\n    <MESSAGE value=\"Merged the two files FollowersController.java and FollowingController.java. &#10;&#10;Merged the two files FollowersPage.fxml and FollowingPage.fxml.\" />\r\n    <MESSAGE value=\"add new functions admin page\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"add new functions admin page\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/it/unipi/dii/largescale/secondchance/connection/ConnectionMongoDB.java</url>\r\n          <line>182</line>\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 8102505a1414fcdf006a0a88c1e7681c7b90e21e)
+++ b/.idea/workspace.xml	(date 1644505440531)
@@ -4,17 +4,10 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="78096fe8-9952-45af-bf90-4f98cdf0dd02" name="Changes" comment="add new functions admin page">
+    <list default="true" id="78096fe8-9952-45af-bf90-4f98cdf0dd02" name="Changes" comment="fix FollowController and add follow/unfollow button and open user page follow">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/it/unipi/dii/largescale/secondchance/connection/ConnectionNeo4jDB.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/unipi/dii/largescale/secondchance/connection/ConnectionNeo4jDB.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/it/unipi/dii/largescale/secondchance/controller/FollowController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/unipi/dii/largescale/secondchance/controller/FollowController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/it/unipi/dii/largescale/secondchance/controller/MyOrderController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/unipi/dii/largescale/secondchance/controller/MyOrderController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/it/unipi/dii/largescale/secondchance/controller/ProfileController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/unipi/dii/largescale/secondchance/controller/ProfileController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/it/unipi/dii/largescale/secondchance/controller/SearchInsertionController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/unipi/dii/largescale/secondchance/controller/SearchInsertionController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/FXML/FollowPage.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/FXML/FollowPage.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/FXML/Profile.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/FXML/Profile.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/FXML/Profile.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/FXML/Profile.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/FXML/Stats.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/FXML/Stats.fxml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/it/unipi/dii/largescale/secondchance/controller/NewInsertionController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/unipi/dii/largescale/secondchance/controller/NewInsertionController.java" afterDir="false" />
     </list>
     <list id="03123c90-a928-4e0a-bf69-e1d59086bd15" name="Changes by adelmobrunelli" comment="Changes by adelmobrunelli" />
     <option name="SHOW_DIALOG" value="false" />
@@ -101,7 +94,8 @@
       <workItem from="1644170803249" duration="461000" />
       <workItem from="1644310037703" duration="6467000" />
       <workItem from="1644347340303" duration="8090000" />
-      <workItem from="1644395849334" duration="7625000" />
+      <workItem from="1644395849334" duration="7883000" />
+      <workItem from="1644503014172" duration="1927000" />
     </task>
     <task id="LOCAL-00001" summary="Fix admin function, fix other problems">
       <created>1643993961652</created>
@@ -173,7 +167,14 @@
       <option name="project" value="LOCAL" />
       <updated>1644334461819</updated>
     </task>
-    <option name="localTasksCounter" value="11" />
+    <task id="LOCAL-00011" summary="fix FollowController and add follow/unfollow button and open user page follow">
+      <created>1644403777951</created>
+      <option name="number" value="00011" />
+      <option name="presentableId" value="LOCAL-00011" />
+      <option name="project" value="LOCAL" />
+      <updated>1644403777951</updated>
+    </task>
+    <option name="localTasksCounter" value="12" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -212,7 +213,8 @@
     <MESSAGE value="fix most active user into admin, fix searchinsertion arrows" />
     <MESSAGE value="Merged the two files FollowersController.java and FollowingController.java. &#10;&#10;Merged the two files FollowersPage.fxml and FollowingPage.fxml." />
     <MESSAGE value="add new functions admin page" />
-    <option name="LAST_COMMIT_MESSAGE" value="add new functions admin page" />
+    <MESSAGE value="fix FollowController and add follow/unfollow button and open user page follow" />
+    <option name="LAST_COMMIT_MESSAGE" value="fix FollowController and add follow/unfollow button and open user page follow" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>

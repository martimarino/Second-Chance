Index: src/main/java/controller/MyProfileController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package main.java.controller;\r\n\r\nimport javafx.fxml.FXMLLoader;\r\n\r\nimport javafx.geometry.HPos;\r\nimport javafx.geometry.Insets;\r\nimport javafx.scene.*;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.image.*;\r\nimport javafx.scene.layout.*;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.text.Text;\r\n\r\nimport javafx.stage.Stage;\r\nimport main.java.connection.*;\r\nimport main.java.entity.*;\r\nimport main.java.utils.*;\r\nimport org.bson.*;\r\nimport javafx.stage.StageStyle;\r\nimport javax.imageio.ImageIO;\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\n\r\nimport java.net.URL;\r\n\r\nimport java.net.URLConnection;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class MyProfileController extends MainController {\r\n\r\n    public GridPane userInfo;\r\n    public GridPane reviews;\r\n\r\n    public BorderPane review;\r\n\r\n    @FXML public Pane nextReviews, prevReviews;\r\n\r\n    private List<Document> listReviews;\r\n\r\n    @FXML public Button btnLogout;\r\n    @FXML public Button btnAddFunds;\r\n    @FXML private Text balanceValue;\r\n\r\n    public Button btnLogout;\r\n    public Button followersButton, followingButton;\r\n    public Button interestedInsertionsButton, insertionsButton;\r\n\r\n    private User user;\r\n    private Session session;\r\n\r\n    int scrollPage2;\r\n\r\n    public void initialize() {\r\n\r\n        Session session = Session.getInstance();\r\n        user  = session.getLogUser();\r\n\r\n        ConnectionMongoDB conn = new ConnectionMongoDB();\r\n\r\n        Label username = new Label(user.getUsername());\r\n        Label name = new Label(user.getName());\r\n        Label email = new Label(user.getEmail());\r\n        Label country = new Label(user.getCountry());\r\n        Label city = new Label(user.getCity());\r\n        Label address = new Label(user.getAddress());\r\n        Label rating = new Label(Double.toString(user.getRating()));\r\n      \r\n        System.out.println(username + \" \" + name +  \" \" + email +  \" \" + country +  \" \" + city +  \" \" + address);\r\n\r\n        userInfo.add(username, 1,0);\r\n        userInfo.add(name, 1, 1);\r\n        userInfo.add(email, 1, 2);\r\n        userInfo.add(country, 1, 3);\r\n        userInfo.add(city, 1, 4);\r\n        userInfo.add(address, 1, 5);\r\n        userInfo.add(rating, 1, 6);\r\n\r\n        updateUserBalance();\r\n\r\n        listReviews = conn.getReviewsByUser(user.getUsername());\r\n        showReviews();\r\n\r\n    }\r\n\r\n    public void showInsertions(){}\r\n\r\n    public void getReviews() {\r\n\r\n        ConnectionMongoDB conn = new ConnectionMongoDB();\r\n\r\n        listReviews = conn.getReviewsByUser(user.getUsername());\r\n\r\n        System.out.println(listReviews.get(0));\r\n    }\r\n\r\n    /* ********** FOLLOWERS/ING STATS SECTION ********** */\r\n\r\n    public void showUserFollowers() {\r\n\r\n        ConnectionNeo4jDB conn = new ConnectionNeo4jDB();\r\n        ArrayList<String> follower = conn.retrieveFollowersByUser(user.getUsername());\r\n        StackPane secondaryLayout = new StackPane();\r\n\r\n        for (int i = 0; i < 10; i++) {\r\n\r\n            Label x = new Label(follower.get(i));\r\n            x.setTranslateX(10);\r\n            x.setTranslateY(-100 + i*50);\r\n            secondaryLayout.getChildren().add(x);\r\n        }\r\n\r\n        Scene secondScene = new Scene(secondaryLayout, 920, 400);\r\n\r\n        // New window (Stage)\r\n        Stage newWindow = new Stage();\r\n        newWindow.setTitle(\"Followers\");\r\n        newWindow.setScene(secondScene);\r\n        newWindow.show();\r\n    }\r\n\r\n    public void showUserFollowing() {\r\n\r\n        ConnectionNeo4jDB conn = new ConnectionNeo4jDB();\r\n        ArrayList<String> following = conn.retrieveFollowingByUser(user.getUsername());\r\n\r\n        StackPane secondaryLayout = new StackPane();\r\n\r\n        for (int i = 0; i < 10; i++) {\r\n\r\n            Label x = new Label(following.get(i));\r\n            x.setTranslateX(10);\r\n            x.setTranslateY(-100 + i*50);\r\n            secondaryLayout.getChildren().add(x);\r\n        }\r\n\r\n        Scene secondScene = new Scene(secondaryLayout, 920, 400);\r\n\r\n        // New window (Stage)\r\n        Stage newWindow = new Stage();\r\n        newWindow.setTitle(\"Following\");\r\n        newWindow.setScene(secondScene);\r\n        newWindow.show();\r\n    }\r\n\r\n    public void showInterestedInsertions() {\r\n\r\n        ConnectionNeo4jDB conn = new ConnectionNeo4jDB();\r\n        ArrayList<String> followed_post = conn.retrieveFollowersByUser(user.getUsername());\r\n        StackPane secondaryLayout = new StackPane();\r\n\r\n        for (int i = 0; i < 10; i++) {\r\n\r\n            Label x = new Label(followed_post.get(i));\r\n            x.setTranslateX(10);\r\n            x.setTranslateY(-100 + i*50);\r\n            secondaryLayout.getChildren().add(x);\r\n        }\r\n\r\n        Scene secondScene = new Scene(secondaryLayout, 920, 400);\r\n\r\n        // New window (Stage)\r\n        Stage newWindow = new Stage();\r\n        newWindow.setTitle(\"Followed post\");\r\n        newWindow.setScene(secondScene);\r\n        newWindow.show();\r\n    }\r\n\r\n    /* ********** BALANCE SECTION ********** */\r\n\r\n    public void updateUserBalance() {\r\n\r\n        ConnectionMongoDB conn = new ConnectionMongoDB();\r\n\r\n        double new_balance = conn.updateBalance(user.getUsername());\r\n        System.out.println(\"NEW BALANCE HERE: \" + new_balance);\r\n        balanceValue.setText(new_balance + \"â‚¬\");\r\n    }\r\n\r\n    public void addFundsShow() throws IOException {\r\n\r\n        URL url = new File(\"src/main/resources/FXML/AddFunds.fxml\").toURI().toURL();\r\n        Parent root = FXMLLoader.load(url);\r\n\r\n        Stage stage = new Stage();\r\n        stage.setScene(new Scene(root));\r\n        stage.setResizable(false);\r\n        stage.show();\r\n    }\r\n  \r\n  \r\n    public void showInsertions(MouseEvent mouseEvent) throws IOException {\r\n        FXMLLoader loader = new FXMLLoader();\r\n        loader.setLocation(getClass().getResource(\"/FXML/InsertionList.fxml\"));\r\n        Stage stage = new Stage(StageStyle.DECORATED);\r\n\r\n        stage.setScene(new Scene(loader.load()));\r\n\r\n        InsertionListController controller = loader.getController();\r\n        controller.initialize();\r\n\r\n        stage.show();\r\n    }\r\n  \r\n    public void logout() throws IOException {\r\n\r\n        session = Session.getInstance();\r\n        session.getLogoutUser();\r\n\r\n        // Closing current window\r\n        Stage stage = (Stage) btnLogout.getScene().getWindow();\r\n        stage.close();\r\n\r\n        // Open sign-in window\r\n        Stage primaryStage = new Stage();\r\n\r\n        URL url = new File(\"src/main/resources/FXML/SignIn.fxml\").toURI().toURL();\r\n        Parent root = FXMLLoader.load(url);\r\n\r\n        primaryStage.setTitle(\"SecondChance\");\r\n        primaryStage.setScene(new Scene(root));\r\n        primaryStage.setResizable(false);\r\n        primaryStage.show();\r\n    }\r\n\r\n    public void showReviews() {\r\n\r\n        reviews = new GridPane();\r\n        reviews.gridLinesVisibleProperty().set(true); //DEBUG\r\n\r\n        ColumnConstraints column1 = new ColumnConstraints(200);\r\n        column1.setPercentWidth(50);\r\n        reviews.getColumnConstraints().addAll(column1);\r\n        scrollPage2 = 0;\r\n\r\n        for (int i = 0; i < scrollPage2 + 2; i++) {\r\n\r\n            addReviews(i, i);\r\n            review.setCenter(reviews);\r\n        }\r\n        scrollPage2 += 2;\r\n    }\r\n\r\n    private void addReviews(int index, int i) {\r\n\r\n        Label reviewer = new Label(listReviews.get(index).getString(\"reviewer\"));\r\n        Label title = new Label(\"Title: \" + listReviews.get(index).getString(\"title\"));\r\n        Label text = new Label(listReviews.get(index).getString(\"text\"));\r\n        text.setWrapText(true);\r\n        reviews.add(reviewer, i, 0);\r\n        reviews.add(title, i, 1);\r\n        reviews.add(text, i, 2);\r\n\r\n        System.out.println(\"index:\" + index);\r\n        GridPane.setHalignment(reviewer, HPos.CENTER);\r\n        GridPane.setHalignment(title, HPos.CENTER);\r\n        GridPane.setHalignment(text, HPos.CENTER);\r\n\r\n        reviews.setHgap(10);\r\n        reviews.setVgap(10);\r\n        reviews.setPadding(new Insets(0, 0, 5, 5));\r\n    }\r\n\r\n    public void prevReviews() {\r\n\r\n        reviews.getChildren().clear();\r\n        int row = 0;\r\n\r\n        scrollPage2 -= 4;\r\n\r\n        nextReviews.setDisable(false);\r\n        nextReviews.setVisible(true);\r\n\r\n        if (scrollPage2 == 0) {\r\n            prevReviews.setDisable(true);\r\n            prevReviews.setVisible(false);\r\n        }\r\n\r\n        System.out.println(\"scrollPage2 in prev: \" + scrollPage2);\r\n        for (int i = scrollPage2; row < 2; i++) {\r\n            addReviews(i, row);\r\n            row++;\r\n        }\r\n        review.setCenter(reviews);\r\n        scrollPage2 += 2;\r\n\r\n\r\n    }\r\n\r\n    public void nextReviews() {\r\n\r\n        reviews.getChildren().clear();\r\n        int row = 0;\r\n\r\n        prevReviews.setDisable(false);\r\n        prevReviews.setVisible(true);\r\n\r\n        System.out.println(\"scrollPage2 in next: \" + scrollPage2);\r\n        System.out.println(\"size of list: \" + listReviews.size());\r\n\r\n        for (int i = scrollPage2; i < scrollPage2 + 2 && row < 2; i++) {\r\n            if (i == listReviews.size()) {\r\n                nextReviews.setDisable(true);\r\n                nextReviews.setVisible(false);\r\n                return;\r\n            }\r\n            addReviews(i, row);\r\n            row++;\r\n            review.setCenter(reviews);\r\n        }\r\n\r\n        scrollPage2 += 2;\r\n\r\n        if (scrollPage2 >= listReviews.size() - 1) {\r\n            nextReviews.setDisable(true);\r\n            nextReviews.setVisible(false);\r\n        }\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/controller/MyProfileController.java b/src/main/java/controller/MyProfileController.java
--- a/src/main/java/controller/MyProfileController.java	
+++ b/src/main/java/controller/MyProfileController.java	
@@ -1,5 +1,6 @@
 package main.java.controller;
 
+import javafx.fxml.FXML;
 import javafx.fxml.FXMLLoader;
 
 import javafx.geometry.HPos;
@@ -35,7 +36,8 @@
 
     public BorderPane review;
 
-    @FXML public Pane nextReviews, prevReviews;
+    @FXML
+    public Pane nextReviews, prevReviews;
 
     private List<Document> listReviews;
 
@@ -43,7 +45,6 @@
     @FXML public Button btnAddFunds;
     @FXML private Text balanceValue;
 
-    public Button btnLogout;
     public Button followersButton, followingButton;
     public Button interestedInsertionsButton, insertionsButton;
 
@@ -84,8 +85,6 @@
 
     }
 
-    public void showInsertions(){}
-
     public void getReviews() {
 
         ConnectionMongoDB conn = new ConnectionMongoDB();
@@ -190,7 +189,7 @@
     }
   
   
-    public void showInsertions(MouseEvent mouseEvent) throws IOException {
+    public void showInsertions() throws IOException {
         FXMLLoader loader = new FXMLLoader();
         loader.setLocation(getClass().getResource("/FXML/InsertionList.fxml"));
         Stage stage = new Stage(StageStyle.DECORATED);

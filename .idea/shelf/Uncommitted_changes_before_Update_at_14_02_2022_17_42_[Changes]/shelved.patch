Index: src/main/java/it/unipi/dii/largescale/secondchance/controller/ProfileController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package main.java.it.unipi.dii.largescale.secondchance.controller;\r\n\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.geometry.Insets;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.*;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.layout.*;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.text.Text;\r\nimport javafx.stage.Stage;\r\nimport main.java.it.unipi.dii.largescale.secondchance.connection.ConnectionMongoDB;\r\nimport main.java.it.unipi.dii.largescale.secondchance.connection.ConnectionNeo4jDB;\r\nimport main.java.it.unipi.dii.largescale.secondchance.entity.Balance;\r\nimport main.java.it.unipi.dii.largescale.secondchance.entity.User;\r\nimport main.java.it.unipi.dii.largescale.secondchance.utils.Session;\r\nimport main.java.it.unipi.dii.largescale.secondchance.utils.Utility;\r\nimport org.bson.*;\r\nimport javafx.stage.StageStyle;\r\nimport java.io.FileInputStream;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.IOException;\r\n\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Objects;\r\n\r\n\r\npublic class ProfileController extends MainController {\r\n\r\n    public GridPane userInfo;\r\n\r\n    public BorderPane review;\r\n    public Pane profileImage;\r\n    public AnchorPane anchorPane;\r\n    HBox reviewsBox;\r\n\r\n    @FXML public Pane nextReviews, prevReviews;\r\n    public Button refreshBtn;\r\n    public Label balanceText;\r\n    public ImageView imageProfile;\r\n\r\n    public ArrayList<String> follower;\r\n    public ArrayList<String> following;\r\n\r\n    private List<Document> listReviews;\r\n\r\n    @FXML public Button btnLogout;\r\n    @FXML public Button btnAddFunds;\r\n    @FXML private Text balanceValue, titleProfile;\r\n\r\n    public Button followersButton, followingButton;\r\n    public Button interestedInsertionsButton, insertionButton;\r\n\r\n    private User user;\r\n\r\n    int scrollPage;\r\n    int scrollPage2;\r\n    int nPage = 2;\r\n    String type_img;\r\n    boolean choice;\r\n\r\n    public void initialize(){\r\n\r\n        user  = Session.getLoggedUser();\r\n        double bal = Balance.balance.getCredit();\r\n        balanceValue.setText(String.format(\"%.2f\", bal) + \"â‚¬\");\r\n        type_img = \"user\";\r\n        followersButton.setOnMouseClicked(event ->  {choice = true; showUsersList(true);});\r\n        followingButton.setOnMouseClicked(event ->  {choice = false; showUsersList(false);});\r\n\r\n        insertionButton.setOnMouseClicked(event -> {showInsertions(\"insertionList\", user.getUsername());});\r\n        interestedInsertionsButton.setOnMouseClicked(event -> {showInsertions(\"insertionListLiked\", user.getUsername());});\r\n\r\n        setProfile();\r\n\r\n        System.out.println(\"USERNAME init: \" + user.getUsername());\r\n    }\r\n\r\n    public void initialize(String us) {\r\n\r\n        user = Session.getLoggedUser();\r\n\r\n        scrollPage = 0;\r\n        scrollPage2 = 0;\r\n\r\n        insertionButton.setOnMouseClicked(event -> {showInsertions(\"insertionList\", us);});\r\n        interestedInsertionsButton.setOnMouseClicked(event -> {showInsertions(\"insertionListLiked\", us);});\r\n\r\n        if(!us.equals(user.getUsername())) {\r\n\r\n            balanceValue.setVisible(false);\r\n            btnAddFunds.setDisable(true);\r\n            btnAddFunds.setVisible(false);\r\n            refreshBtn.setVisible(false);\r\n            refreshBtn.setDisable(true);\r\n            btnLogout.setDisable(true);\r\n            btnLogout.setVisible(false);\r\n            balanceText.setVisible(false);\r\n            interestedInsertionsButton.setDisable(true);\r\n            interestedInsertionsButton.setVisible(false);\r\n            insertionButton.setLayoutY(240);\r\n            insertionButton.setText(\"View insertion published\");\r\n            titleProfile.setText(\"Profile of \" + us);\r\n            titleProfile.setLayoutX(270);\r\n            titleProfile.setLayoutY(70);\r\n            profileImage.setLayoutY(20);\r\n            profileImage.setLayoutX(70);\r\n            Button commonLikes = new Button();\r\n            commonLikes.setText(\"Common Likes\");\r\n            commonLikes.setOnMouseClicked(event -> {showInsertions(\"insertionListCommon\", us); });\r\n            commonLikes.setLayoutY(280);\r\n            commonLikes.setLayoutX(400);\r\n            commonLikes.setStyle(\"-fx-background-color: rgb(197, 197, 237)rgb(197, 197, 237); -fx-background-radius: 20; -fx-pref-height: 25; -fx-pref-width: 270; -fx-text-fill: #65626b\");\r\n            anchorPane.getChildren().add(commonLikes);\r\n            Document userSearched = ConnectionMongoDB.connMongo.findUserByUsername(us);\r\n            user = User.fromDocument(userSearched);\r\n\r\n            setProfile();\r\n        }\r\n        System.out.println(\"USERNAME INIT: \" + user.getUsername());\r\n    }\r\n\r\n    public void setProfile(){\r\n\r\n        prevReviews.setDisable(true);\r\n        prevReviews.setVisible(false);\r\n\r\n        reviewsBox = new HBox();\r\n        reviewsBox.setSpacing(100);\r\n        review.setCenter(reviewsBox);\r\n\r\n        scrollPage = 0;\r\n\r\n        userInfo.getChildren().clear();\r\n        profileImage.getChildren().clear();\r\n\r\n        String rate = (Double.isNaN(user.getRating()))? \"No reviews\" : Double.toString(user.getRating());\r\n\r\n        Label username = new Label(user.getUsername());\r\n        Label name = new Label(user.getName());\r\n        Label email = new Label(user.getEmail());\r\n        Label country = new Label(user.getCountry());\r\n        Label city = new Label(user.getCity());\r\n        Label address = new Label(user.getAddress());\r\n        Label rating = new Label(rate);\r\n        Label usernameText = new Label(\"Username:\");\r\n        Label nameText = new Label(\"Name:\");\r\n        Label emailText = new Label(\"Email:\");\r\n        Label countryText = new Label(\"Country:\");\r\n        Label cityText = new Label(\"City:\");\r\n        Label addressText = new Label(\"Address:\");\r\n        Label ratingText = new Label(\"Rating:\");\r\n\r\n        setProfileImage();\r\n\r\n        System.out.println(\"USER:\" + username + \" \" + name +  \" \" + email +  \" \" + country +  \" \" + city +  \" \" + address + \" \"+ user.getImage());\r\n\r\n        userInfo.add(usernameText, 0, 0);\r\n        userInfo.add(nameText, 0, 1);\r\n        userInfo.add(emailText, 0, 2);\r\n        userInfo.add(countryText, 0, 3);\r\n        userInfo.add(cityText, 0, 4);\r\n        userInfo.add(addressText, 0, 5);\r\n        userInfo.add(ratingText, 0, 6);\r\n\r\n        userInfo.add(username, 1,0);\r\n        userInfo.add(name, 1, 1);\r\n        userInfo.add(email, 1, 2);\r\n        userInfo.add(country, 1, 3);\r\n        userInfo.add(city, 1, 4);\r\n        userInfo.add(address, 1, 5);\r\n        userInfo.add(rating, 1, 6);\r\n\r\n        updateUserBalance();\r\n        listReviews = user.getReviews();\r\n\r\n        if (listReviews == null) {\r\n            nextReviews.setDisable(true);\r\n            nextReviews.setVisible(false);\r\n        } else {\r\n            if (listReviews.size() < 3) {\r\n                System.out.println(\"Reviews nulle, disattivo i bottoni\");\r\n                nextReviews.setDisable(true);\r\n                nextReviews.setVisible(false);\r\n            }\r\n            showReviews();\r\n        }\r\n    }\r\n\r\n    public void setProfileImage() {\r\n\r\n        Label label = new Label(\"Change image!\");\r\n        label.setVisible(false);\r\n\r\n        if (user.getImage().equals(\"user.png\")) {\r\n\r\n            try {\r\n                FileInputStream imageStream = new FileInputStream(\"target/classes/img/user.png\");\r\n                Image img = new Image(imageStream);\r\n                imageProfile = new ImageView();\r\n                imageProfile.setImage(img);\r\n\r\n            } catch (FileNotFoundException e) {\r\n                e.printStackTrace();\r\n            }\r\n        } else {\r\n            imageProfile = Utility.getGoodImage(user.getImage(), 100, type_img);\r\n        }\r\n\r\n        label.setTranslateX(0);\r\n        label.setTranslateY(40);\r\n        label.setTextFill(Color.BLUEVIOLET);\r\n        label.setStyle(\"-fx-background-radius: 20px; -fx-background-color: white;\");\r\n        profileImage.getChildren().add(imageProfile);\r\n        profileImage.getChildren().add(label);\r\n\r\n        profileImage.setOnMouseClicked(event->{\r\n                    try {\r\n                        showAddImgProfile();\r\n                    } catch (Exception e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n        );\r\n\r\n        profileImage.hoverProperty().addListener((observable, oldValue, newValue) -> label.setVisible(newValue));\r\n    }\r\n\r\n    /* ********** FOLLOWERS/ING STATS SECTION ********** */\r\n\r\n    public void showUsersList(boolean choice) {\r\n\r\n        try( FileInputStream imageStream = new FileInputStream(\"target/classes/img/secondchance.png\") ) {\r\n\r\n            Image image = new Image(imageStream);\r\n            FXMLLoader loader = new FXMLLoader();\r\n            loader.setLocation(FollowController.class.getResource(\"/FXML/FollowPage.fxml\"));\r\n            Stage stage = new Stage(StageStyle.DECORATED);\r\n            stage.getIcons().add(image);\r\n            Scene scene = new Scene(loader.load());\r\n            scene.getStylesheets().add(Objects.requireNonNull(getClass().getResource(\"/CSS/FollowStyle.css\")).toExternalForm());\r\n            stage.setScene(scene);\r\n            stage.setTitle(\"Your insertions\");\r\n            FollowController controller = loader.getController();\r\n            if(choice) //followers page\r\n            {\r\n                follower = ConnectionNeo4jDB.connNeo.retrieveFollowersByUser(user.getUsername());\r\n\r\n                if (follower.size() == 0) {\r\n                    Utility.infoBox(\"You have not followers.\", \"Information\", \"No followers!\");\r\n                    return;\r\n                }\r\n                controller.initialize(follower);\r\n            }\r\n            else {\r\n                following = ConnectionNeo4jDB.connNeo.retrieveFollowingByUser(user.getUsername());\r\n\r\n                if (following.size() == 0) {\r\n                    Utility.infoBox(\"You have not following.\", \"Information\", \"No following!\");\r\n                    return;\r\n                }\r\n                controller.initialize(following);\r\n            }\r\n            stage.show();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    /* ********** BALANCE SECTION ********** */\r\n\r\n    public void updateUserBalance() {\r\n\r\n        double new_balance = Balance.balance.getCredit();\r\n        System.out.println(\"NEW BALANCE HERE: \" + String.format(\"%.2f\",new_balance));\r\n        balanceValue.setText(String.format(\"%.2f\",new_balance) + \"â‚¬\");\r\n\r\n    }\r\n\r\n    public void addFundsShow() throws IOException {\r\n        Stage stage = new Stage();\r\n        Utility.changePage(stage, \"AddFunds\");\r\n    }\r\n\r\n    public void showInsertions(String typePage, String username){\r\n\r\n        ArrayList<Document> list = new ArrayList<>();\r\n\r\n        try( FileInputStream imageStream = new FileInputStream(\"target/classes/img/secondchance.png\") ) {\r\n            Image image = new Image(imageStream);\r\n            FXMLLoader loader = new FXMLLoader();\r\n            loader.setLocation(InsertionListController.class.getResource(\"/FXML/InsertionList.fxml\"));\r\n            Stage stage = new Stage(StageStyle.DECORATED);\r\n            stage.getIcons().add(image);\r\n            Scene scene = new Scene(loader.load());\r\n            scene.getStylesheets().add(Objects.requireNonNull(getClass().getResource(\"/CSS/InsertionListStyle.css\")).toExternalForm());\r\n            stage.setScene(scene);\r\n            stage.setTitle(\"Your insertions\");\r\n            InsertionListController controller = loader.getController();\r\n\r\n            switch(typePage){\r\n                case \"insertionList\":   //insertion published by user\r\n                    System.out.println(\"insertionList\");\r\n                    list = ConnectionMongoDB.connMongo.findInsertionBySeller(username);\r\n                    break;\r\n                case \"insertionListLiked\":  //insertion user likes\r\n                    System.out.println(\"insertionListLiked\");\r\n                    ArrayList<String> followed_ins = ConnectionNeo4jDB.connNeo.retrieveFollowedInsertionByUser(username);\r\n                    list = ConnectionMongoDB.connMongo.findInsertionDetailsNeo4J(followed_ins);\r\n                    break;\r\n                case \"insertionListCommon\":  //insertion in common between logged user and current user\r\n                    System.out.println(\"insertionListCommon\");\r\n                    ArrayList<String> listCommon = ConnectionNeo4jDB.connNeo.findCommonLikes(Session.getLoggedUser().getUsername(), username);\r\n                    list = ConnectionMongoDB.connMongo.findInsertionDetailsNeo4J(listCommon);\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n\r\n            if(list.size() == 0)\r\n            {\r\n                Utility.infoBox(\"There are no insertions\", \"Advise\", \"No insertions\");\r\n                return;\r\n            }\r\n            controller.initialize(list, username);\r\n            stage.show();\r\n\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void logout() throws IOException {\r\n\r\n        Session session = Session.getInstance();\r\n        session.getLogoutUser();\r\n\r\n        // Closing current window\r\n        Stage stage = (Stage) btnLogout.getScene().getWindow();\r\n        stage.close();\r\n\r\n        // Open sign-in window\r\n        Stage primaryStage = new Stage();\r\n        primaryStage.setTitle(\"SecondChance\");\r\n        Utility.changePage(primaryStage, \"SignIn\");\r\n    }\r\n\r\n    public void showReviews() {\r\n        System.out.println(\"SCROLL OUT REVIEWS: \" + scrollPage);\r\n\r\n        for (int i = 0; i < nPage && scrollPage < listReviews.size(); i++) {\r\n            System.out.println(\"SCROLL IN REVIEWS: \" + scrollPage + \"i: \" + i);\r\n            addReviews();\r\n        }\r\n    }\r\n\r\n    private void addReviews() {\r\n\r\n        Label user = new Label(\"User: \" + listReviews.get(scrollPage).getString(\"reviewer\"));\r\n        user.setTextFill(Color.WHITE);\r\n        Utility.printTerminal(listReviews.toString());\r\n\r\n        Label text = new Label(listReviews.get(scrollPage).getString(\"text\"));\r\n        text.setTextFill(Color.WHITE);\r\n        Label title = new Label(\"Title: \" + listReviews.get(scrollPage).getString(\"title\"));\r\n        title.setTextFill(Color.WHITE);\r\n        Label rating = new Label(\"Rating: \" + listReviews.get(scrollPage).getInteger(\"rating\"));\r\n        rating.setTextFill(Color.WHITE);\r\n        text.setWrapText(true);\r\n\r\n        VBox feed = new VBox(user, text, title, rating);\r\n        feed.setStyle(\"-fx-background-color: white; -fx-padding: 8\");\r\n        feed.setSpacing(10);\r\n        feed.setPadding(new Insets(5, 5, 5, 5));\r\n        feed.setPrefHeight(100);\r\n        feed.setPrefWidth(300);\r\n        feed.setAlignment(Pos.CENTER);\r\n\r\n        String cssLayout =\r\n                \"-fx-border-color: rgb(102, 153, 255);\\n\" +\r\n                        \"-fx-background-color: rgb(230, 179, 255);\\n\" +\r\n                        \"-fx-background-radius: 50;\\n\" +\r\n                        \"-fx-border-radius: 50;\\n\";\r\n        feed.setStyle(cssLayout);\r\n\r\n        reviewsBox.getChildren().add(feed);\r\n\r\n        scrollPage++;\r\n    }\r\n\r\n    public void prevReviews() {\r\n        reviewsBox.getChildren().clear();\r\n        scrollPage = Utility.prevPageReviews(scrollPage, nPage, prevReviews);\r\n\r\n        if (scrollPage == 0) {\r\n            nextReviews.setDisable(false);\r\n            nextReviews.setVisible(true);\r\n        }\r\n\r\n        showReviews();\r\n    }\r\n\r\n    public void nextReviews() {\r\n        reviewsBox.getChildren().clear();\r\n        Utility.nextPage(scrollPage + nPage, (ArrayList<Document>) listReviews, nextReviews, prevReviews);\r\n\r\n        if (scrollPage == listReviews.size() - 1) {\r\n            nextReviews.setVisible(false);\r\n            nextReviews.setDisable(true);\r\n        }\r\n\r\n        showReviews();\r\n    }\r\n\r\n    public void showAddImgProfile() {\r\n\r\n        try (FileInputStream imageStream = new FileInputStream(\"target/classes/img/secondchance.png\")) {\r\n\r\n            Image image = new Image(imageStream);\r\n            FXMLLoader loader = new FXMLLoader();\r\n            loader.setLocation(SearchInsertionController.class.getResource(\"/FXML/UpdateProfileImage.fxml\"));\r\n            Stage stage = new Stage(StageStyle.DECORATED);\r\n            stage.getIcons().add(image);\r\n            stage.setTitle(\"Update Profile Image\");\r\n            stage.setScene(new Scene(loader.load()));\r\n            AddProfileImageController controller = loader.getController();\r\n            controller.initialize();\r\n            stage.show();\r\n\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/it/unipi/dii/largescale/secondchance/controller/ProfileController.java b/src/main/java/it/unipi/dii/largescale/secondchance/controller/ProfileController.java
--- a/src/main/java/it/unipi/dii/largescale/secondchance/controller/ProfileController.java	(revision a55fe6903047323a13ce66a8f8b4011972add4cd)
+++ b/src/main/java/it/unipi/dii/largescale/secondchance/controller/ProfileController.java	(date 1644853409683)
@@ -310,7 +310,7 @@
                     break;
                 case "insertionListLiked":  //insertion user likes
                     System.out.println("insertionListLiked");
-                    ArrayList<String> followed_ins = ConnectionNeo4jDB.connNeo.retrieveFollowedInsertionByUser(username);
+                    ArrayList<String> followed_ins = ConnectionNeo4jDB.connNeo.retrieveInterestedInsertionByUser(username);
                     list = ConnectionMongoDB.connMongo.findInsertionDetailsNeo4J(followed_ins);
                     break;
                 case "insertionListCommon":  //insertion in common between logged user and current user
Index: src/main/java/it/unipi/dii/largescale/secondchance/connection/ConnectionNeo4jDB.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package main.java.it.unipi.dii.largescale.secondchance.connection;\r\n\r\nimport main.java.it.unipi.dii.largescale.secondchance.entity.Insertion;\r\nimport main.java.it.unipi.dii.largescale.secondchance.entity.User;\r\nimport main.java.it.unipi.dii.largescale.secondchance.utils.Utility;\r\nimport org.neo4j.driver.*;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport static org.neo4j.driver.Values.parameters;\r\n\r\npublic class ConnectionNeo4jDB implements AutoCloseable {\r\n    private Driver driver;\r\n    String uri = \"neo4j://127.0.0.1:7687\";\r\n    String user = \"neo4j\";\r\n    String password = \"2nd-chance\";\r\n    public static ConnectionNeo4jDB connNeo;\r\n\r\n    public void open() {\r\n        driver = GraphDatabase.driver(uri, AuthTokens.basic(user, password));\r\n    }\r\n\r\n    @Override\r\n    public void close() {\r\n        driver.close();\r\n    }\r\n\r\n    public boolean addUser(final User u) {\r\n        this.open();\r\n        try (Session session = driver.session()) {\r\n            session.writeTransaction((TransactionWork<Void>) tx -> {\r\n                tx.run(\"MERGE (u:User {username: $username, country: $country})\",\r\n                        parameters(\"username\", u.getUsername(),\r\n                                \"country\", u.getCountry()));\r\n                return null;\r\n            });\r\n            return true;\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        } finally {\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    public boolean addInsertion(final Insertion i) {\r\n        this.open();\r\n        try (Session session = driver.session()) {\r\n            session.writeTransaction((TransactionWork<Void>) tx -> {\r\n                tx.run(\"MERGE (i:Insertion {uniq_id: $uniq_id, category: $category,\" +\r\n                                \"gender: $gender})\",\r\n                        parameters(\"uniq_id\", i.getId(), \"category\", i.getCategory()));\r\n                return null;\r\n            });\r\n            this.close();\r\n            return true;\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            Utility.printTerminal(\"Cannot create new insertion node\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public void followUser(String follower, String followed) {\r\n        this.open();\r\n        System.out.println(\"USER_FOLLOWER: \" + follower + \"USER_FOLLOWED : \" + followed);\r\n        try (Session session = driver.session()) {\r\n            session.writeTransaction((TransactionWork<Void>) tx -> {\r\n                tx.run(\"MATCH (u:User),(v) \" +\r\n                                \"WHERE u.username = $username1 AND v.username = $username2 \" +\r\n                                \"CREATE (u)-[:FOLLOWS]->(v)\",\r\n                        parameters(\"username1\", follower, \"username2\", followed));\r\n                return null;\r\n            });\r\n            this.close();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void unfollowUser(String unfollower, String unfollowed) {\r\n        this.open();\r\n        try (Session session = driver.session()) {\r\n            session.writeTransaction((TransactionWork<Void>) tx -> {\r\n                tx.run(\"MATCH (u:User)-[rel:FOLLOWS]->(v)  \" +\r\n                                \"WHERE u.username = $username1 AND v.username = $username2 \" +\r\n                                \"DELETE rel\",\r\n                        parameters(\"username1\", unfollower, \"username2\", unfollowed));\r\n                return null;\r\n            });\r\n            this.close();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public ArrayList<String> getSuggestedUsers(String username, String country, int k) {\r\n        this.open();\r\n        ArrayList<String> suggestions = new ArrayList<>();\r\n        try (Session session = driver.session()) {\r\n\r\n            List<String> similar = session.readTransaction((TransactionWork<List<String>>) tx -> {\r\n\r\n                Result result = tx.run(\"MATCH (u:User)-[:FOLLOWS]->(m)-[:FOLLOWS]->(others) \" +\r\n\r\n                                \"WHERE u.username = $username AND u.country = $country AND others.country = $country \" +\r\n                                \"AND NOT (u)-[:FOLLOWS]->(others) \" +\r\n                                \"RETURN others.username as SuggUsers \" +\r\n                                \"LIMIT $k\",\r\n                        parameters(\"username\", username,\r\n                                \"country\", country,\r\n                                \"k\", k));\r\n                while (result.hasNext()) {\r\n                    Record r = result.next();\r\n                    suggestions.add(r.get(\"SuggUsers\").asString());\r\n                }\r\n                return suggestions;\r\n            });\r\n            Utility.printTerminal(\"NEO4j\\n\" + similar);\r\n            this.close();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return suggestions;\r\n    }\r\n\r\n\r\n    public ArrayList<String> getFollowedInsertions(String username, int k) {\r\n\r\n        this.open();\r\n        ArrayList<String> followed = new ArrayList<>();\r\n        try (Session session = driver.session()) {\r\n\r\n            List<String> insertions = session.readTransaction((TransactionWork<List<String>>) tx -> {\r\n\r\n                Result result = tx.run(\"MATCH (u:User)-[:FOLLOWS]->(m)-[:POSTED]->(i:Insertion) \" +\r\n                                \"WHERE u.username = $username \" +\r\n                                \"RETURN i.uniq_id as SuggIns \" +\r\n                                \"LIMIT $k\",\r\n                        parameters(\"username\", username,\r\n                                \"k\", k));\r\n\r\n                while (result.hasNext()) {\r\n                    Record r = result.next();\r\n                    followed.add(r.get(\"SuggIns\").asString());\r\n                }\r\n                return followed;\r\n            });\r\n            Utility.printTerminal(\"NEO4j\\n\" + insertions);\r\n            this.close();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return followed;\r\n\r\n    }\r\n\r\n    public boolean likeInsertion(String username, String insertion_id) {\r\n\r\n        this.open();\r\n        System.out.println(\"INSERTION NEO : \" + insertion_id);\r\n\r\n        try (Session session = driver.session()) {\r\n            session.writeTransaction((TransactionWork<Void>) tx -> {\r\n                tx.run(\r\n                        \"MATCH (u:User {username: $username})\" +\r\n                                \"CREATE (u)-[rel:INTERESTED]->(i: Insertion {uniq_id: $id})\", parameters(\"username\", username,\r\n                                \"id\", insertion_id));\r\n                return null;\r\n            });\r\n            return true;\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        } finally {\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    public boolean dislikeInsertion(String username, String insertion_id) {\r\n\r\n        this.open();\r\n\r\n        try (Session session = driver.session()) {\r\n            session.writeTransaction((TransactionWork<Void>) tx -> {\r\n                tx.run(\r\n                        \"MATCH (u:User { username: $username})-[r:INTERESTED]->(i :Insertion { uniq_id: $id})\\n\" +\r\n                                \"DELETE r\", parameters(\"username\", username,\r\n                                \"id\", insertion_id));\r\n                return null;\r\n            });\r\n            return true;\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        } finally {\r\n            this.close();\r\n        }\r\n    }\r\n\r\n\r\n    public boolean showIfInterested(String username, String insertion_id) {\r\n\r\n        this.open();\r\n\r\n        try (Session session = driver.session()) {\r\n            Boolean relation = session.readTransaction((TransactionWork<Boolean>) tx -> {\r\n                Result result = tx.run(\"MATCH (u:User { username: $username})-[r:INTERESTED]->(i :Insertion { uniq_id: $id})\\n\" +\r\n                        \"RETURN r\", parameters(\"username\", username,\r\n                        \"id\", insertion_id));\r\n\r\n                return result.hasNext();\r\n            });\r\n            System.out.println(relation);\r\n            this.close();\r\n            return relation;\r\n        }\r\n    }\r\n\r\n    public boolean deleteInsertion(String uniq_id) {\r\n        this.open();\r\n\r\n        try (Session session = driver.session()) {\r\n            session.writeTransaction((TransactionWork<Void>) tx -> {\r\n                tx.run(\"MATCH (i:Insertion{uniq_id : $uniq_id}) DETACH DELETE i;\",\r\n                        parameters(\"uniq_id\", uniq_id));\r\n                return null;\r\n            });\r\n            return true;\r\n        } catch (Exception e) {\r\n            return false;\r\n        } finally {\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    public boolean checkIfFollows(String us1, String us2) {\r\n\r\n        this.open();\r\n        Boolean check;\r\n\r\n        try (Session session = driver.session()) {\r\n            check = session.readTransaction((TransactionWork<Boolean>) tx -> {\r\n                Result result = tx.run(\r\n                        \"MATCH (a:User {username: $username1})-[r:FOLLOWS]->(b:User {username: $username2}) \" +\r\n                                \"RETURN r\",\r\n                        parameters(\"username1\", us1,\r\n                                \"username2\", us2));\r\n\r\n                return result.hasNext();\r\n            });\r\n            this.close();\r\n            return check;\r\n        }\r\n    }\r\n\r\n    public void followUnfollowButton(String text, String us1, String us2) {\r\n\r\n        switch (text) {\r\n            case \"Follow\":\r\n                followUser(us1, us2);\r\n                break;\r\n\r\n            case \"Unfollow\":\r\n                unfollowUser(us1, us2);\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    public boolean createPostedRelationship(String node1, String node2) {\r\n\r\n        this.open();\r\n        try (Session session = driver.session()) {\r\n            session.writeTransaction((TransactionWork<Void>) tx -> {\r\n                tx.run(\r\n                        \"MATCH (u:User),(i:Insertion) \" +\r\n                                \"WHERE u.username = $username AND i.uniq_id = $id \" +\r\n                                \"CREATE (u)-[:POSTED]->(i)\",\r\n                        parameters(\"username\", node1,\r\n                                \"id\", node2));\r\n                return null;\r\n            });\r\n            this.close();\r\n            return true;\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        Utility.printTerminal(\"Cannot create POSTED relationship\");\r\n        return false;\r\n\r\n    }\r\n\r\n    /* ********** USER SOCIAL FUNCTIONALITIES ********** */\r\n\r\n    public ArrayList<String> retrieveFollowersByUser(String user) {\r\n\r\n        this.open();\r\n        ArrayList<String> followers = new ArrayList<>();\r\n\r\n        try (Session session = driver.session()) {\r\n\r\n            List<String> follow = session.readTransaction((TransactionWork<List<String>>) tx -> {\r\n                Result result = tx.run(\"MATCH (u:User) <- [r:FOLLOWS] - (u1:User) \" +\r\n                                \"WHERE u.username = $username \" +\r\n                                \"RETURN u1.username as name \",\r\n                        parameters(\"username\", user));\r\n\r\n                while (result.hasNext()) {\r\n                    Record r = result.next();\r\n                    followers.add(r.get(\"name\").asString());\r\n                }\r\n                return followers;\r\n            });\r\n            if (!follow.isEmpty())\r\n                Utility.printTerminal(follow.get(0));\r\n            this.close();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return followers;\r\n    }\r\n\r\n    public ArrayList<String> retrieveFollowingByUser(String user) {\r\n\r\n        this.open();\r\n        ArrayList<String> following = new ArrayList<>();\r\n\r\n        try (Session session = driver.session()) {\r\n\r\n            List<String> follow = session.readTransaction((TransactionWork<List<String>>) tx -> {\r\n                Result result = tx.run(\"MATCH (u:User) - [r:FOLLOWS] -> (u1:User) \" +\r\n                                \"WHERE u.username = $username \" +\r\n                                \"RETURN u1.username as name \",\r\n                        parameters(\"username\", user));\r\n\r\n                while (result.hasNext()) {\r\n                    Record r = result.next();\r\n                    following.add(r.get(\"name\").asString());\r\n                }\r\n                return following;\r\n            });\r\n            if (!follow.isEmpty())\r\n                Utility.printTerminal(follow.get(0));\r\n            this.close();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return following;\r\n    }\r\n\r\n    public ArrayList<String> retrieveFollowedInsertionByUser(String user) {\r\n\r\n        this.open();\r\n        ArrayList<String> followed_ins = new ArrayList<>();\r\n\r\n        try (Session session = driver.session()) {\r\n\r\n            List<String> follow = session.readTransaction((TransactionWork<List<String>>) tx -> {\r\n                Result result = tx.run(\"MATCH (u:User) - [r:INTERESTED] -> (i:Insertion)\" +\r\n                                \"WHERE u.username = $username \" +\r\n                                \"RETURN i.uniq_id as uniq_id\",\r\n                        parameters(\"username\", user));\r\n\r\n                while (result.hasNext()) {\r\n                    Record r = result.next();\r\n                    followed_ins.add(r.get(\"uniq_id\").asString());\r\n                }\r\n                return followed_ins;\r\n            });\r\n            if (!followed_ins.isEmpty())\r\n                Utility.printTerminal(\"*************** NEO4j FOLLOWED INSERTIONS ***************\\n\"\r\n                        + followed_ins.get(0));\r\n            this.close();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return followed_ins;\r\n    }\r\n\r\n    public boolean deleteInsertionNeo4J(String id) {\r\n        this.open();\r\n\r\n        try (Session session = driver.session()) {\r\n            session.writeTransaction((TransactionWork<Void>) tx -> {\r\n                tx.run(\r\n                        \"MATCH (u:Insertion {uniq_id: $id})\" +\r\n                                \"DETACH DELETE u\", parameters(\"id\", id));\r\n                return null;\r\n            });\r\n            return true;\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        } finally {\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    public ArrayList<String> findNumberInterestingForCategory() {\r\n\r\n        this.open();\r\n        ArrayList<String> interesting = new ArrayList<>();\r\n\r\n        try (Session session = driver.session()) {\r\n\r\n            session.readTransaction((TransactionWork<List<String>>) tx -> {\r\n                Result result = tx.run(\"match(u:User)-[r:INTERESTED]->(i:Insertion) \" +\r\n                        \"RETURN DISTINCT i.category as category, count(r) AS counter\" +\r\n                        \" ORDER BY counter DESC\");\r\n\r\n                while (result.hasNext()) {\r\n                    Record r = result.next();\r\n                    String category = r.get(\"category\").asString();\r\n                    int count = r.get(\"counter\").asInt();\r\n                    String ins = category + \":\" + count;\r\n                    interesting.add(ins);\r\n                }\r\n                return interesting;\r\n            });\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return interesting;\r\n\r\n    }\r\n\r\n    public ArrayList<String> findCommonLikes(String currentUser, String otherUser) {\r\n\r\n        this.open();\r\n        ArrayList<String> commonLikes = new ArrayList<>();\r\n\r\n        try (Session session = driver.session()) {\r\n\r\n            session.readTransaction((TransactionWork<List<String>>) tx -> {\r\n                Result result = tx.run(\r\n                        \"match(U:User{username: $currentUser})-[:INTERESTED]->(i:Insertion)<-[:INTERESTED]-(u1:User{username: $otherUser}) \" +\r\n                                \"return i.uniq_id as id;\",\r\n                        parameters(\"currentUser\", currentUser,\r\n                                \"otherUser\", otherUser));\r\n\r\n                while (result.hasNext()) {\r\n                    Record r = result.next();\r\n                    commonLikes.add(r.get(\"id\").asString());\r\n                }\r\n\r\n                return commonLikes;\r\n            });\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return commonLikes;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/it/unipi/dii/largescale/secondchance/connection/ConnectionNeo4jDB.java b/src/main/java/it/unipi/dii/largescale/secondchance/connection/ConnectionNeo4jDB.java
--- a/src/main/java/it/unipi/dii/largescale/secondchance/connection/ConnectionNeo4jDB.java	(revision a55fe6903047323a13ce66a8f8b4011972add4cd)
+++ b/src/main/java/it/unipi/dii/largescale/secondchance/connection/ConnectionNeo4jDB.java	(date 1644855386372)
@@ -25,7 +25,7 @@
     public void close() {
         driver.close();
     }
-
+    //insert the user into the db
     public boolean addUser(final User u) {
         this.open();
         try (Session session = driver.session()) {
@@ -43,13 +43,12 @@
             this.close();
         }
     }
-
+    //add insertion into the db
     public boolean addInsertion(final Insertion i) {
         this.open();
         try (Session session = driver.session()) {
             session.writeTransaction((TransactionWork<Void>) tx -> {
-                tx.run("MERGE (i:Insertion {uniq_id: $uniq_id, category: $category," +
-                                "gender: $gender})",
+                tx.run("MERGE (i:Insertion {uniq_id: $uniq_id, category: $category})",
                         parameters("uniq_id", i.getId(), "category", i.getCategory()));
                 return null;
             });
@@ -62,6 +61,7 @@
         }
     }
 
+    //puts a follow link from the follower user to the followed one
     public void followUser(String follower, String followed) {
         this.open();
         System.out.println("USER_FOLLOWER: " + follower + "USER_FOLLOWED : " + followed);
@@ -79,6 +79,7 @@
         }
     }
 
+    //unfollows the unfollowed user of the unfollower user specified
     public void unfollowUser(String unfollower, String unfollowed) {
         this.open();
         try (Session session = driver.session()) {
@@ -95,17 +96,14 @@
         }
     }
 
+    //suggests the users followed by the follower of the logged user and of its same country
     public ArrayList<String> getSuggestedUsers(String username, String country, int k) {
         this.open();
         ArrayList<String> suggestions = new ArrayList<>();
         try (Session session = driver.session()) {
-
-            List<String> similar = session.readTransaction((TransactionWork<List<String>>) tx -> {
-
+            session.readTransaction((TransactionWork<List<String>>) tx -> {
                 Result result = tx.run("MATCH (u:User)-[:FOLLOWS]->(m)-[:FOLLOWS]->(others) " +
-
-                                "WHERE u.username = $username AND u.country = $country AND others.country = $country " +
-                                "AND NOT (u)-[:FOLLOWS]->(others) " +
+                                "WHERE u.username = $username AND others.country = $country AND NOT (u)-[:FOLLOWS]->(others) " +
                                 "RETURN others.username as SuggUsers " +
                                 "LIMIT $k",
                         parameters("username", username,
@@ -117,7 +115,6 @@
                 }
                 return suggestions;
             });
-            Utility.printTerminal("NEO4j\n" + similar);
             this.close();
         } catch (Exception e) {
             e.printStackTrace();
@@ -125,15 +122,13 @@
         return suggestions;
     }
 
-
+    //get the insertion of the followed users of the specified users
     public ArrayList<String> getFollowedInsertions(String username, int k) {
 
         this.open();
         ArrayList<String> followed = new ArrayList<>();
         try (Session session = driver.session()) {
-
-            List<String> insertions = session.readTransaction((TransactionWork<List<String>>) tx -> {
-
+            session.readTransaction((TransactionWork<List<String>>) tx -> {
                 Result result = tx.run("MATCH (u:User)-[:FOLLOWS]->(m)-[:POSTED]->(i:Insertion) " +
                                 "WHERE u.username = $username " +
                                 "RETURN i.uniq_id as SuggIns " +
@@ -147,7 +142,6 @@
                 }
                 return followed;
             });
-            Utility.printTerminal("NEO4j\n" + insertions);
             this.close();
         } catch (Exception e) {
             e.printStackTrace();
@@ -155,11 +149,10 @@
         return followed;
 
     }
-
+    //put the like link from the user specified to the insertion with uniq_id specified
     public boolean likeInsertion(String username, String insertion_id) {
 
         this.open();
-        System.out.println("INSERTION NEO : " + insertion_id);
 
         try (Session session = driver.session()) {
             session.writeTransaction((TransactionWork<Void>) tx -> {
@@ -177,7 +170,7 @@
             this.close();
         }
     }
-
+    //delete the like insertion link from the user specified to the insertion specified
     public boolean dislikeInsertion(String username, String insertion_id) {
 
         this.open();
@@ -199,7 +192,7 @@
         }
     }
 
-
+    //check if the insertion specified is already like from the user or not
     public boolean showIfInterested(String username, String insertion_id) {
 
         this.open();
@@ -217,7 +210,7 @@
             return relation;
         }
     }
-
+    //delete the specified insertion
     public boolean deleteInsertion(String uniq_id) {
         this.open();
 
@@ -234,7 +227,7 @@
             this.close();
         }
     }
-
+    //checks if the user u1 follows the user u2 or not
     public boolean checkIfFollows(String us1, String us2) {
 
         this.open();
@@ -271,8 +264,8 @@
         }
 
     }
-
-    public boolean createPostedRelationship(String node1, String node2) {
+    //creates the posted relationship between the user and the insertion specified
+    public boolean createPostedRelationship(String user, String insertion_id) {
 
         this.open();
         try (Session session = driver.session()) {
@@ -281,8 +274,8 @@
                         "MATCH (u:User),(i:Insertion) " +
                                 "WHERE u.username = $username AND i.uniq_id = $id " +
                                 "CREATE (u)-[:POSTED]->(i)",
-                        parameters("username", node1,
-                                "id", node2));
+                        parameters("username", user,
+                                "id", insertion_id));
                 return null;
             });
             this.close();
@@ -296,15 +289,13 @@
     }
 
     /* ********** USER SOCIAL FUNCTIONALITIES ********** */
-
+    //retrieve all the followers of the specified user
     public ArrayList<String> retrieveFollowersByUser(String user) {
 
         this.open();
         ArrayList<String> followers = new ArrayList<>();
-
         try (Session session = driver.session()) {
-
-            List<String> follow = session.readTransaction((TransactionWork<List<String>>) tx -> {
+            session.readTransaction((TransactionWork<List<String>>) tx -> {
                 Result result = tx.run("MATCH (u:User) <- [r:FOLLOWS] - (u1:User) " +
                                 "WHERE u.username = $username " +
                                 "RETURN u1.username as name ",
@@ -316,23 +307,20 @@
                 }
                 return followers;
             });
-            if (!follow.isEmpty())
-                Utility.printTerminal(follow.get(0));
             this.close();
         } catch (Exception e) {
             e.printStackTrace();
         }
         return followers;
     }
-
+    //retrieves all the following users of the specified user (shown in profile page)
     public ArrayList<String> retrieveFollowingByUser(String user) {
 
         this.open();
         ArrayList<String> following = new ArrayList<>();
 
         try (Session session = driver.session()) {
-
-            List<String> follow = session.readTransaction((TransactionWork<List<String>>) tx -> {
+            session.readTransaction((TransactionWork<List<String>>) tx -> {
                 Result result = tx.run("MATCH (u:User) - [r:FOLLOWS] -> (u1:User) " +
                                 "WHERE u.username = $username " +
                                 "RETURN u1.username as name ",
@@ -344,23 +332,20 @@
                 }
                 return following;
             });
-            if (!follow.isEmpty())
-                Utility.printTerminal(follow.get(0));
             this.close();
         } catch (Exception e) {
             e.printStackTrace();
         }
         return following;
     }
-
-    public ArrayList<String> retrieveFollowedInsertionByUser(String user) {
+    //returns all the interested insertion of the specified user (logged user or selected user)
+    public ArrayList<String> retrieveInterestedInsertionByUser(String user) {
 
         this.open();
         ArrayList<String> followed_ins = new ArrayList<>();
 
         try (Session session = driver.session()) {
-
-            List<String> follow = session.readTransaction((TransactionWork<List<String>>) tx -> {
+            session.readTransaction((TransactionWork<List<String>>) tx -> {
                 Result result = tx.run("MATCH (u:User) - [r:INTERESTED] -> (i:Insertion)" +
                                 "WHERE u.username = $username " +
                                 "RETURN i.uniq_id as uniq_id",
@@ -372,16 +357,13 @@
                 }
                 return followed_ins;
             });
-            if (!followed_ins.isEmpty())
-                Utility.printTerminal("*************** NEO4j FOLLOWED INSERTIONS ***************\n"
-                        + followed_ins.get(0));
             this.close();
         } catch (Exception e) {
             e.printStackTrace();
         }
         return followed_ins;
     }
-
+    //delete of specified insertion
     public boolean deleteInsertionNeo4J(String id) {
         this.open();
 
@@ -400,14 +382,13 @@
             this.close();
         }
     }
-
+    //shows the number of interesting put by users for insertions of the different category
     public ArrayList<String> findNumberInterestingForCategory() {
 
         this.open();
         ArrayList<String> interesting = new ArrayList<>();
 
         try (Session session = driver.session()) {
-
             session.readTransaction((TransactionWork<List<String>>) tx -> {
                 Result result = tx.run("match(u:User)-[r:INTERESTED]->(i:Insertion) " +
                         "RETURN DISTINCT i.category as category, count(r) AS counter" +
@@ -429,13 +410,14 @@
 
     }
 
+
+    // retrieve all the insertion in common between the two users
     public ArrayList<String> findCommonLikes(String currentUser, String otherUser) {
 
         this.open();
         ArrayList<String> commonLikes = new ArrayList<>();
 
         try (Session session = driver.session()) {
-
             session.readTransaction((TransactionWork<List<String>>) tx -> {
                 Result result = tx.run(
                         "match(U:User{username: $currentUser})-[:INTERESTED]->(i:Insertion)<-[:INTERESTED]-(u1:User{username: $otherUser}) " +
@@ -447,7 +429,6 @@
                     Record r = result.next();
                     commonLikes.add(r.get("id").asString());
                 }
-
                 return commonLikes;
             });
 
Index: src/main/java/it/unipi/dii/largescale/secondchance/connection/ConnectionMongoDB.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package main.java.it.unipi.dii.largescale.secondchance.connection;\r\n\r\nimport com.mongodb.*;\r\nimport com.mongodb.client.*;\r\nimport com.mongodb.client.MongoClient;\r\nimport com.mongodb.client.model.*;\r\nimport com.mongodb.client.result.DeleteResult;\r\nimport com.mongodb.client.result.UpdateResult;\r\nimport main.java.it.unipi.dii.largescale.secondchance.entity.Balance;\r\nimport main.java.it.unipi.dii.largescale.secondchance.entity.Insertion;\r\nimport main.java.it.unipi.dii.largescale.secondchance.entity.Review;\r\nimport main.java.it.unipi.dii.largescale.secondchance.entity.User;\r\nimport main.java.it.unipi.dii.largescale.secondchance.utils.Session;\r\nimport main.java.it.unipi.dii.largescale.secondchance.utils.Utility;\r\nimport org.bson.Document;\r\nimport org.bson.conversions.Bson;\r\nimport org.bson.types.ObjectId;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.*;\r\nimport java.util.function.Consumer;\r\n\r\nimport static com.mongodb.client.model.Aggregates.*;\r\nimport static com.mongodb.client.model.Filters.*;\r\nimport static com.mongodb.client.model.Projections.*;\r\nimport static com.mongodb.client.model.Sorts.descending;\r\nimport static com.mongodb.client.model.Updates.*;\r\n\r\npublic class ConnectionMongoDB{\r\n\r\n    private final String clusterAddress = \"mongodb://172.16.4.114:27020,172.16.4.115:27020,172.16.4.116:27020/\" +\r\n            \"?retryWrites=true&w=majority&wtimeout=10000\";\r\n\r\n    public static ConnectionMongoDB connMongo;\r\n    private MongoClient mongoClient;\r\n    private MongoDatabase db;\r\n    MongoCursor<Document> cursor;\r\n\r\n    static MongoCollection<Document> userColl;\r\n    static MongoCollection<Document> insertionColl;\r\n    static MongoCollection<Document> codeColl;\r\n    static MongoCollection<Document> balanceColl;\r\n\r\n    /* ********* CONNECTION SECTION ********* */\r\n\r\n    public void connectToVms(){\r\n        mongoClient = MongoClients.create(clusterAddress);\r\n\r\n        // Read Preferences at DB level\r\n        // Write concern at DB level\r\n        db = mongoClient.getDatabase(\"lsmdb\")\r\n                .withReadPreference(ReadPreference.secondary())\r\n                .withWriteConcern(WriteConcern.W1);\r\n\r\n        // Read Preferences at collection level\r\n        userColl = db.getCollection(\"user\")\r\n                .withReadPreference(ReadPreference.secondary());\r\n\r\n        insertionColl = db.getCollection(\"insertion\")\r\n                .withReadPreference(ReadPreference.secondary());\r\n\r\n        codeColl = db.getCollection(\"code\")\r\n                .withReadPreference(ReadPreference.secondary());\r\n\r\n        balanceColl = db.getCollection(\"balance\")\r\n                .withReadPreference(ReadPreference.primary())\r\n                .withWriteConcern(WriteConcern.W3);\r\n\r\n    }\r\n\r\n    public void connectToLocal(){\r\n        ConnectionString uri = new ConnectionString(\"mongodb://localhost:27017\");\r\n        mongoClient = MongoClients.create(uri);\r\n        db = mongoClient.getDatabase(\"local\");\r\n\r\n        userColl = db.getCollection(\"user\");\r\n        insertionColl = db.getCollection(\"insertion\");\r\n        codeColl = db.getCollection(\"code\");\r\n        balanceColl = db.getCollection(\"balance\");\r\n    }\r\n\r\n    public void connectToAtlas(){\r\n        ConnectionString uri = new ConnectionString(\"mongodb+srv://roots:1234@cluster0.n8fgw.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\");\r\n        mongoClient = MongoClients.create(uri);\r\n        db = mongoClient.getDatabase(\"project\");\r\n        userColl = db.getCollection(\"user\");\r\n        insertionColl = db.getCollection(\"insertion\");\r\n        codeColl = db.getCollection(\"code\");\r\n        balanceColl = db.getCollection(\"balance\");\r\n\r\n    }\r\n\r\n    public void openConnection() {\r\n\r\n        //connectToLocal();\r\n        connectToVms();\r\n        //connectToAtlas();\r\n\r\n        System.out.println(\"**************** USER ******************\");\r\n        System.out.println(userColl.countDocuments());\r\n        System.out.println(\"**************** INSERTION ******************\");\r\n        System.out.println(insertionColl.countDocuments());\r\n        System.out.println(\"**************** CODE ******************\");\r\n        System.out.println(codeColl.countDocuments());\r\n\r\n        // 2 - Find the first document\r\n        userColl.find().limit(1).forEach(printDocuments());\r\n\r\n    }\r\n\r\n    public void closeConnection() {\r\n        mongoClient.close();\r\n    }\r\n\r\n    private static Consumer<Document> printDocuments() {\r\n        return doc -> System.out.println(doc.toJson());\r\n    }\r\n\r\n    /* ************************* USER SECTION ************************* */\r\n\r\n    public boolean registerUser(User u) {\r\n\r\n        if (userAlreadyPresent(u.getUsername())) {\r\n            Utility.infoBox(\"Please, choose another username and try again.\",\r\n                            \"Error\", \"Username already used!\");\r\n            return false;\r\n        }\r\n\r\n        Document user = new Document(\"address\", u.getAddress())\r\n                .append(\"city\", u.getCity())\r\n                .append(\"country\", u.getCountry())\r\n                .append(\"email\", u.getEmail())\r\n                .append(\"img_profile\", u.getImage())\r\n                .append(\"name\", u.getName())\r\n                .append(\"password\", u.getPassword())\r\n                .append(\"suspended\", u.getSuspended())\r\n                .append(\"username\", u.getUsername());\r\n\r\n        Document balanceUser = new Document(\"username\", u.getUsername())\r\n                .append(\"credit\", 0);\r\n\r\n        userColl.insertOne(user);\r\n        balanceColl.insertOne(balanceUser);\r\n\r\n        return true;\r\n    }\r\n\r\n    public Document findUserByUsername(String username) {\r\n\r\n        cursor = userColl.find(eq(\"username\", username)).iterator();\r\n\r\n        if (cursor.hasNext())\r\n            return cursor.next();\r\n\r\n        Utility.infoBox(\"There is no user with this username.\", \"Error\", \"Username not found!\");\r\n        return null;\r\n\r\n    }\r\n\r\n    public boolean userAlreadyPresent(String username) {\r\n\r\n        cursor = userColl.find(eq(\"username\", username)).iterator();\r\n        return cursor.hasNext();\r\n\r\n    }\r\n\r\n    public boolean checkCredentials(String username, String encrypted) {\r\n\r\n        cursor = userColl.find(and(eq(\"username\", username), eq(\"password\", encrypted))).iterator();\r\n\r\n        return cursor.hasNext();\r\n    }\r\n\r\n    public User findUserDetails(String username) {\r\n\r\n        User logUser = new User();\r\n        Document user = userColl.find(eq(\"username\", username)).first();\r\n        logUser.setUsername(user.getString(\"username\"));\r\n        logUser.setName(user.getString(\"name\"));\r\n        logUser.setEmail(user.getString(\"email\"));\r\n        logUser.setAddress(user.getString(\"address\"));\r\n        logUser.setCity(user.getString(\"city\"));\r\n        logUser.setCountry(user.getString(\"country\"));\r\n        logUser.setSuspended(user.getBoolean(\"suspended\"));\r\n        logUser.setImage(user.getString(\"img_profile\"));\r\n        if((ArrayList<Document>) user.get(\"reviews\") != null){\r\n            logUser.setReviews((ArrayList<Document>) user.get(\"reviews\"));\r\n            logUser.setRating(user.getDouble(\"rating\"));\r\n        }\r\n        if((ArrayList<Document>) user.get(\"sold\") != null)\r\n            logUser.setSold((ArrayList<Document>) user.get(\"sold\"));\r\n        if((ArrayList<Document>) user.get(\"purchased\")!= null)\r\n            logUser.setPurchased((ArrayList<Document>) user.get(\"purchased\"));\r\n\r\n        return logUser;\r\n    }\r\n\r\n    public ArrayList<Document> followedUserInsertions(ArrayList<String> insList) {\r\n\r\n        ArrayList<Document> insertions = new ArrayList<>();\r\n\r\n        for (String s : insList) {\r\n            Document d = insertionColl.find(eq(\"_id\", new ObjectId(s))).first();\r\n            insertions.add(d);\r\n        }\r\n\r\n        return insertions;\r\n    }\r\n\r\n    public ArrayList<Document> findUserByFilters(String country, String rating) {\r\n\r\n        ArrayList<Document> users = new ArrayList<>();\r\n        double r ;\r\n        double lowerBound = 0;\r\n        double upperBound = 0;\r\n\r\n        if(!rating.equals(\"rating\")){\r\n            r = Double.parseDouble(rating);\r\n            lowerBound = r-0.5;\r\n            upperBound = r+0.5;\r\n        }\r\n\r\n        if(country.equals(\"country\") && !rating.equals(\"rating\"))\r\n        {\r\n            cursor  = userColl.find(and(lte(\"rating\", upperBound), gt(\"rating\", lowerBound))).iterator();\r\n        }\r\n        else if(!country.equals(\"country\") && rating.equals(\"rating\"))\r\n        {\r\n            cursor  = userColl.find(eq(\"country\", country)).iterator();\r\n        }\r\n        else{\r\n            cursor  = userColl.find(and(eq(\"country\", country), lte(\"rating\", upperBound), gt(\"rating\", lowerBound))).iterator();\r\n        }\r\n\r\n        while(cursor.hasNext())\r\n        {\r\n            users.add(cursor.next());\r\n        }\r\n\r\n        return users;\r\n\r\n    }\r\n\r\n    public void deleteUserMongo(String username) {\r\n\r\n        Bson query = eq(\"username\", username);\r\n\r\n        try {\r\n            userColl.deleteOne(query);\r\n        } catch (MongoException me) {\r\n            System.err.println(\"Unable to delete due to an error: \" + me);\r\n        }\r\n    }\r\n\r\n    public int submitNewProfileImg(String url, String user) {\r\n\r\n        Document queryUser = new Document().append(\"username\",  user);\r\n\r\n        Bson updatesUser = Updates.combine(\r\n                Updates.set(\"img_profile\", url)\r\n        );\r\n\r\n        UpdateOptions options = new UpdateOptions().upsert(true);\r\n\r\n        try {\r\n            UpdateResult resultUser = userColl.updateOne(queryUser, updatesUser, options);\r\n            System.out.println(\"Modified document count: \" + resultUser.getModifiedCount());\r\n            System.out.println(\"Upserted id: \" + resultUser.getUpsertedId()); // only contains a value when an upsert is performed\r\n            return (int) resultUser.getModifiedCount();\r\n        } catch (MongoException me) {\r\n            System.err.println(\"Unable to update due to an error: \" + me);\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    public void updateLoggedUser() {\r\n\r\n        Bson filter = eq(\"username\", Session.getLoggedUser().getUsername());\r\n        Bson update = set(\"purchased\", Session.getLoggedUser().getPurchased());\r\n        userColl.findOneAndUpdate(filter, update);\r\n\r\n        update = set(\"sold\", Session.getLoggedUser().getSold());\r\n        userColl.findOneAndUpdate(filter, update);\r\n\r\n    }\r\n\r\n    /* *********************** INSERTION SECTION *********************** */\r\n\r\n    public ArrayList<Document> findViralInsertions(int k) {\r\n\r\n        ArrayList<Document> insertions = new ArrayList<>();\r\n        Bson sort = sort(descending(\"interested\", \"views\"));\r\n        Bson limit = limit(k);\r\n\r\n        AggregateIterable<Document> r = insertionColl.aggregate(Arrays.asList(sort ,limit));\r\n\r\n        for (Document document : r)\r\n            insertions.add(document);\r\n\r\n        return insertions;\r\n    }\r\n\r\n    public ArrayList<Document> findInsertionByFilters(String size, String price, String gender, String status, String category, String color) {\r\n\r\n        ArrayList<Document> insertions = new ArrayList<>();\r\n        List<Bson> filters = new ArrayList<>();\r\n\r\n        if(!size.equals(\"size\")) {\r\n            filters.add(Filters.eq(\"size\", size));\r\n        }\r\n        if(!price.equals(\"price\")) {\r\n            String[] range = price.split(\"-\");\r\n            if(range.length == 1) {\r\n                filters.add(Filters.gte(\"price\", Double.parseDouble(range[0])));\r\n            } else {\r\n                filters.add(Filters.gte(\"price\", Double.parseDouble(range[0])));\r\n                filters.add(Filters.lte(\"price\", Double.parseDouble(range[1])));\r\n            }\r\n        }\r\n        if(!gender.equals(\"gender\")) {\r\n            filters.add(Filters.eq(\"gender\", gender));\r\n        }\r\n        if(!status.equals(\"status\")) {\r\n            filters.add(Filters.eq(\"status\", status));\r\n        }\r\n        if(!category.equals(\"category\")) {\r\n            filters.add(Filters.eq(\"category\", category));\r\n        }\r\n        if(!color.equals(\"color\")) {\r\n            filters.add(Filters.eq(\"color\", color));\r\n        }\r\n\r\n        cursor = insertionColl.find(Filters.and(filters)).iterator();\r\n        while(cursor.hasNext())\r\n            insertions.add(cursor.next());\r\n\r\n        return insertions;\r\n    }\r\n\r\n    public ArrayList<Document> findInsertionBySeller(String seller) {\r\n\r\n        ArrayList<Document> insertions = new ArrayList<>();\r\n\r\n        cursor = insertionColl.find(eq(\"seller\", seller)).iterator();\r\n        while (cursor.hasNext())\r\n            insertions.add(cursor.next());\r\n\r\n        return insertions;\r\n    }\r\n\r\n    public ArrayList<Document> findInsertionByBrand(String brand) {\r\n\r\n        ArrayList<Document> insertions = new ArrayList<>();\r\n\r\n        cursor = insertionColl.find(eq(\"brand\", brand)).iterator();\r\n        while (cursor.hasNext())\r\n            insertions.add(cursor.next());\r\n\r\n        return insertions;\r\n    }\r\n\r\n    public Insertion findInsertion(String insertion_id) {\r\n\r\n        Insertion insertion = new Insertion();\r\n        Document insertion_found = insertionColl.find(eq(\"_id\", new ObjectId(insertion_id))).first();\r\n\r\n        if(insertion_found == null)\r\n            return null;\r\n        insertion.setId(insertion_found.get(\"_id\").toString());\r\n        insertion.setBrand(insertion_found.getString(\"brand\"));\r\n        insertion.setCountry(insertion_found.getString(\"country\"));\r\n        insertion.setCategory(insertion_found.getString(\"category\"));\r\n        insertion.setColor(insertion_found.getString(\"color\"));\r\n        insertion.setDescription(insertion_found.getString(\"description\"));\r\n        insertion.setGender(insertion_found.getString(\"gender\"));\r\n        insertion.setImage_url(insertion_found.getString(\"image_url\"));\r\n        insertion.setInterested(insertion_found.getInteger(\"interested\"));\r\n        insertion.setPrice(insertion_found.getDouble(\"price\"));\r\n        insertion.setViews(insertion_found.getInteger(\"views\"));\r\n        insertion.setSeller(insertion_found.getString(\"seller\"));\r\n        insertion.setSize(insertion_found.getString(\"size\"));\r\n        insertion.setStatus(insertion_found.getString(\"status\"));\r\n        insertion.setTimestamp(insertion_found.getString(\"timestamp\"));\r\n\r\n        return insertion;\r\n\r\n    }\r\n\r\n    public void rollBackInsertion(int i, String username, Insertion insertion) {\r\n\r\n        for(; i < 4; i++) {\r\n            switch (i) {\r\n                case 0: //insert insertion again\r\n                    insertionColl.insertOne(Insertion.toDocument(insertion));\r\n                    System.out.println(\"CASE 0\");\r\n                    continue;\r\n                case 1: //remove item from sold array in user\r\n                    Bson filter_sold = eq(\"username\", insertion.getSeller());\r\n                    Bson update = Updates.popLast(\"sold\");\r\n                    userColl.findOneAndUpdate(filter_sold, update);\r\n                    System.out.println(\"CASE 1\");\r\n                    continue;\r\n                case 2: //decrement seller balance\r\n                    updateBalance(insertion.getSeller(), insertion.getPrice(), '-');\r\n                    System.out.println(\"CASE 2\");\r\n                    continue;\r\n                case 3: //increment buyer balance\r\n                    updateBalance(username, insertion.getPrice(), '+');\r\n                    System.out.println(\"CASE 3\");\r\n                    continue;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public boolean buyCurrentInsertion(String username, Insertion insertion){\r\n\r\n        ClientSession clientSession = mongoClient.startSession();\r\n\r\n        SimpleDateFormat date = new SimpleDateFormat(\"yy-MM-dd HH:mm:ss\");\r\n        String timestamp = date.format(new Date());\r\n\r\n        TransactionBody<String> txnFunc = () -> {\r\n\r\n            double currentBalance = ConnectionMongoDB.connMongo.getBalance();\r\n            double checkBalance = currentBalance - insertion.getPrice();\r\n\r\n            if (checkBalance < 0.0) {\r\n                Utility.infoBox(\"Cannot purchase, not enough balance\", \"Error\", \"Error purchase\");\r\n                return \"Buyer has not enough balance\";\r\n            }\r\n\r\n            boolean upBuyer, upSeller;\r\n            upBuyer = updateBalance(Session.getLoggedUser().getUsername(), insertion.getPrice(), '-');\r\n            if(!upBuyer)\r\n            {\r\n                Utility.infoBox(\"Cannot buy product\", \"Error\", \"Error purchase\");\r\n                return \"Cannot update buyer balance\";\r\n            } else {\r\n                upSeller = updateBalance(insertion.getSeller(), insertion.getPrice(), '+');\r\n                if(!upSeller) {\r\n                    rollBackInsertion(3, Session.getLoggedUser().getUsername(), insertion);\r\n                    Utility.infoBox(\"Cannot buy product\", \"Error\", \"Error purchase\");\r\n                    return \"Cannot update seller balance\";\r\n                }\r\n            }\r\n\r\n            //order purchased\r\n            Document purchased = new Document()\r\n                    .append(\"_id\", new ObjectId())\r\n                    .append(\"timestamp\", timestamp)\r\n                    .append(\"seller\", insertion.getSeller())\r\n                    .append(\"reviewed\", false)\r\n                    .append(\"insertion\", new Document(\"image\", insertion.getImage_url()).\r\n                            append(\"price\", insertion.getPrice()).\r\n                            append(\"size\", insertion.getSize()).\r\n                            append(\"status\", insertion.getStatus()).\r\n                            append(\"category\", insertion.getCategory()));\r\n\r\n            //order sold\r\n            Document sold = new Document()\r\n                    .append(\"_id\", new ObjectId())\r\n                    .append(\"timestamp\", timestamp)\r\n                    .append(\"buyer\", username)\r\n                    .append(\"reviewed\", false)\r\n                    .append(\"insertion\", new Document(\"image\", insertion.getImage_url()).\r\n                            append(\"price\", insertion.getPrice()).\r\n                            append(\"size\", insertion.getSize()).\r\n                            append(\"status\", insertion.getStatus()).\r\n                            append(\"category\", insertion.getCategory()));\r\n\r\n            Bson filter_sold = eq(\"username\", insertion.getSeller());\r\n            BasicDBObject update_sold = new BasicDBObject(\"$push\", new BasicDBObject(\"sold\", sold));\r\n\r\n            //insert new document into user collection\r\n            try {\r\n                userColl.findOneAndUpdate(filter_sold, update_sold);\r\n            } catch (MongoException e) {\r\n                rollBackInsertion(2, Session.getLoggedUser().getUsername(), insertion);\r\n                return (\"Unable to insert item in sold array: \" + e);\r\n            }\r\n\r\n            //update local purchased array\r\n            ArrayList<Document> purc;\r\n            if(Session.getLoggedUser().getPurchased() != null)\r\n                purc = Session.getLoggedUser().getPurchased();\r\n            else\r\n                purc = new ArrayList<>();\r\n            purc.add(purchased);\r\n            Session.getLoggedUser().setPurchased(purc);\r\n\r\n            try {\r\n                insertionColl.deleteOne(new Document(\"image_url\", insertion.getImage_url()).append(\"seller\", insertion.getSeller()).append(\"timestamp\", insertion.getTimestamp()));\r\n                return \"OK\";\r\n            } catch (MongoException e) {\r\n                rollBackInsertion(1, Session.getLoggedUser().getUsername(), insertion);\r\n                return (\"Unable to delete insertion: \" + e);\r\n            }\r\n        };\r\n        return executeTransaction(clientSession, txnFunc);\r\n    }\r\n\r\n    private boolean executeTransaction(ClientSession clientSession, TransactionBody<String> txnFunc) {\r\n\r\n        String message = \"\";\r\n\r\n        message = clientSession.withTransaction(txnFunc);\r\n\r\n        System.out.println(message);\r\n\r\n        return message.equals(\"OK\");\r\n    }\r\n\r\n    public boolean updateNumInterested(String insertion_id, int i) {\r\n\r\n        Bson filter = eq(\"_id\", new ObjectId(insertion_id));\r\n        Bson update = inc(\"interested\", i);\r\n        try {\r\n            db.getCollection(\"insertion\").findOneAndUpdate(filter, update);\r\n            return true;\r\n        }catch(MongoException me){\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public void updateNumView(String uniq_id) {\r\n\r\n        Bson filter = eq(\"_id\", new ObjectId(uniq_id));\r\n        Bson update = inc(\"views\", 1);\r\n\r\n        db.getCollection(\"insertion\").findOneAndUpdate(filter, update);\r\n\r\n    }\r\n\r\n    public ArrayList<Document> findTopRatedUsersByCountry(String country) {\r\n\r\n        ArrayList<Document> list = new ArrayList<>();\r\n\r\n        BasicDBObject whereQuery = new BasicDBObject();\r\n        whereQuery.put(\"country\", country);\r\n\r\n        try (MongoCursor<Document> cursor = userColl.find(whereQuery).iterator()) {\r\n            while (cursor.hasNext()) {\r\n                Document doc = cursor.next();\r\n                if (doc.get(\"rating\") == null)\r\n                    continue;\r\n                list.add(doc);\r\n            }\r\n        }\r\n        return list;\r\n\r\n    }\r\n\r\n    /* ************************* ADMIN SECTION ************************* */\r\n\r\n    public Document verifyUserInDB(String username, boolean choice) {\r\n\r\n        Document user;\r\n\r\n        if (choice)\r\n            user = userColl.find(eq(\"username\", username)).first();\r\n        else\r\n            user = userColl.find(eq(\"name\", username)).first();\r\n\r\n        return user;\r\n    }\r\n\r\n    public Document verifyInsertionInDB(String id, boolean choice) {\r\n\r\n        Document insertion;\r\n\r\n        if (choice)\r\n            insertion = insertionColl.find(eq(\"_id\", new ObjectId(id))).first();\r\n        else\r\n            insertion = insertionColl.find(eq(\"seller\", id)).first();\r\n\r\n        return insertion;\r\n    }\r\n\r\n    public ArrayList<Document> findMostActiveUsers(int k, boolean choice) {\r\n\r\n        ArrayList<Document> orders = new ArrayList<>();\r\n        AggregateIterable<Document> aggr;\r\n        // true = select the top k users with more purchased orders\r\n        if(choice) {\r\n\r\n            Bson match = match(exists(\"purchased.0\"));\r\n            Bson projection = new Document(\"$size\", \"$purchased\");\r\n            Bson project = Aggregates.project(new Document(\"count\", projection).append(\"username\", \"$username\"));\r\n            Bson sort = sort(descending(\"count\"));\r\n            Bson limit = limit(k);\r\n            aggr = userColl.aggregate(\r\n                    Arrays.asList(\r\n                            match, project, sort, limit\r\n                    )\r\n            );\r\n        }\r\n        else        // false = select the top k with more purchased orders\r\n        {\r\n            Bson match = match(exists(\"sold.0\"));\r\n            Bson projection = new Document(\"$size\", \"$sold\");\r\n            Bson project = Aggregates.project(new Document(\"count\", projection).append(\"username\", \"$username\"));\r\n            Bson sort = sort(descending(\"count\"));\r\n            Bson limit = limit(k);\r\n            aggr = userColl.aggregate(\r\n                    Arrays.asList(\r\n                            match, project, sort, limit\r\n                    )\r\n            );\r\n        }\r\n        for (Document d : aggr)\r\n            orders.add(d);\r\n\r\n        return orders;\r\n    }\r\n\r\n    public ArrayList<Document> findTopKRatedUser(int k, String country) {\r\n\r\n        ArrayList<Document> array = new ArrayList<>();\r\n\r\n        Bson limit = limit(k);\r\n        Bson project = project(fields(excludeId(), include(\"username\"), include(\"rating\")));\r\n        AggregateIterable<Document> aggr  = userColl.aggregate(\r\n                Arrays.asList(\r\n                        Aggregates.match(Filters.eq(\"country\", country)),\r\n                        Aggregates.sort(descending(\"rating\")),\r\n                        project,\r\n                        limit\r\n                )\r\n        );\r\n\r\n        for (Document document : aggr)\r\n            array.add(document);\r\n\r\n        return array;\r\n    }\r\n\r\n    public ArrayList<Document> findTopKInterestingInsertion(int k, String category) {\r\n\r\n        ArrayList<Document> array = new ArrayList<>();\r\n\r\n        Bson limit = limit(k);\r\n        AggregateIterable<Document> aggr = insertionColl.aggregate(\r\n                Arrays.asList(\r\n                        Aggregates.match(Filters.eq(\"category\", category)),\r\n                        Aggregates.sort(descending(\"interested\")),\r\n                        limit\r\n                )\r\n        );\r\n\r\n        for (Document document : aggr)\r\n            array.add(document);\r\n\r\n        return array;\r\n    }\r\n\r\n    public ArrayList<Document> findTopKViewedInsertion(int k, String category) {\r\n\r\n        ArrayList<Document> array = new ArrayList<>();\r\n\r\n        Bson limit = limit(k);\r\n        AggregateIterable<Document> aggr  = insertionColl.aggregate(\r\n                Arrays.asList(\r\n                        Aggregates.match(Filters.eq(\"category\", category)),\r\n                        Aggregates.sort(descending(\"views\")),\r\n                        limit\r\n                )\r\n        );\r\n\r\n        for (Document document : aggr)\r\n            array.add(document);\r\n\r\n        return array;\r\n    }\r\n\r\n    public void suspendUser(String username) {\r\n\r\n        Document query = new Document().append(\"username\",  username);\r\n        Bson updates = Updates.combine(\r\n                Updates.set(\"suspended\", true));\r\n                UpdateOptions options = new UpdateOptions().upsert(true);\r\n\r\n        try {\r\n            UpdateResult result = userColl.updateOne(query, updates, options);\r\n            System.out.println(\"Modified document count: \" + result.getModifiedCount());\r\n            System.out.println(\"Upserted id: \" + result.getUpsertedId()); // only contains a value when an upsert is performed\r\n        }catch (MongoException me) {\r\n            System.err.println(\"Unable to update due to an error: \" + me);\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    public void unsuspendUser(String username) {\r\n\r\n        Document query = new Document().append(\"username\",  username);\r\n\r\n        Bson updates = Updates.combine(\r\n                Updates.set(\"suspended\", false));\r\n                UpdateOptions options = new UpdateOptions().upsert(true);\r\n\r\n        try {\r\n            UpdateResult result = userColl.updateOne(query, updates, options);\r\n            System.out.println(\"Modified document count: \" + result.getModifiedCount());\r\n            System.out.println(\"Upserted id: \" + result.getUpsertedId()); // only contains a value when an upsert is performed\r\n        } catch (MongoException me) {\r\n            System.err.println(\"Unable to update due to an error: \" + me);\r\n        }\r\n    }\r\n\r\n    public Insertion findInsertionDetails(String id) {\r\n\r\n        Insertion ins = new Insertion();\r\n        Document insertion = insertionColl.find(eq(\"_id\", new ObjectId(id))).first();\r\n\r\n        ins.setCategory(insertion.getString(\"category\"));\r\n        ins.setPrice(insertion.getDouble(\"price\"));\r\n        ins.setViews(insertion.getInteger(\"views\"));\r\n\r\n        return ins;\r\n    }\r\n\r\n    public ArrayList<Insertion> findMultipleInsertionDetails(String seller) {\r\n\r\n        ArrayList<Insertion> array = new ArrayList<>();\r\n\r\n        AggregateIterable<Document> aggr  = insertionColl.aggregate(\r\n                Arrays.asList(\r\n                        Aggregates.match(Filters.eq(\"seller\", seller))\r\n                )\r\n        );\r\n\r\n        for (Document document : aggr) {\r\n            Insertion ins = new Insertion();\r\n            ins.setCategory(document.getString(\"category\"));\r\n            ins.setPrice(document.getDouble(\"price\"));\r\n            ins.setViews(document.getInteger(\"views\"));\r\n            ins.setId(document.get(\"_id\").toString());\r\n            ins.setImage_url(document.getString(\"image_url\"));\r\n            array.add(ins);\r\n        }\r\n        return array;\r\n    }\r\n\r\n    public ArrayList<Document> findInsertionDetailsNeo4J(ArrayList<String> followed_ins)  {\r\n\r\n        //Insertion ins;\r\n        ArrayList<Document> insertions = new ArrayList<>();\r\n\r\n        for (String followed_in : followed_ins) {\r\n            Document insertion = insertionColl.find(eq(\"_id\", new ObjectId(followed_in))).first();\r\n            /*\r\n            ins = new Insertion();\r\n            ins.setCategory(insertion.getString(\"category\"));\r\n            ins.setPrice(insertion.getDouble(\"price\"));\r\n            ins.setImage_url(insertion.getString(\"image_url\"));\r\n            ins.setViews(insertion.getInteger(\"views\"));\r\n            ins.setSeller(insertion.getString(\"seller\"));\r\n            ins.setId(insertion.get(\"_id\").toString());\r\n            */\r\n            insertions.add(insertion);\r\n        }\r\n        return insertions;\r\n    }\r\n\r\n    public void addInsertion(Insertion i) throws Exception {\r\n\r\n        Document ins = Insertion.toDocument(i);\r\n        insertionColl.insertOne(ins);\r\n\r\n    }\r\n\r\n    public void addReview(Review rev) {\r\n\r\n        Document review = new Document()\r\n                .append(\"timestamp\", rev.getTimestamp())\r\n                .append(\"reviewer\", rev.getReviewer())\r\n                .append(\"title\", rev.getTitle())\r\n                .append(\"text\", rev.getText())\r\n                .append(\"rating\", rev.getRating());\r\n\r\n        System.out.println(\"REVIEW: \" + review);\r\n        BasicDBObject query = new BasicDBObject();\r\n        query.put(\"username\", rev.getSeller());\r\n\r\n        BasicDBObject push_data = new BasicDBObject(\"$push\", new BasicDBObject(\"reviews\", review));\r\n\r\n        userColl.findOneAndUpdate(query, push_data);\r\n    }\r\n\r\n    public void updateSellerRating(String seller) {\r\n\r\n        Document d = userColl.find(eq(\"username\", seller)).first();\r\n        List<Document> list = d.getList(\"reviews\", Document.class);\r\n\r\n        Double avg;\r\n        int sum = 0;\r\n\r\n        for (Document document : list)\r\n            sum += document.getInteger(\"rating\");\r\n\r\n        avg = (double) sum / (double) list.size();\r\n\r\n        // {$set: {\"rating\": avg}}\r\n        Bson filter = eq(\"username\", d.getString(\"username\"));\r\n        Bson update = set(\"rating\", avg);;\r\n\r\n        userColl.findOneAndUpdate(filter, update);\r\n    }\r\n\r\n    public void setInsertionReviewed(String timestamp) {\r\n\r\n        BasicDBObject query = new BasicDBObject();\r\n        query.put(\"username\",Session.getLoggedUser().getUsername());\r\n        query.put(\"purchased.timestamp\", timestamp);\r\n        BasicDBObject update = new BasicDBObject(\"$set\", new BasicDBObject(\"purchased.$.reviewed\", true));\r\n        userColl.findOneAndUpdate(query, update);\r\n\r\n    }\r\n\r\n    public boolean deleteInsertionMongo(String id) {\r\n\r\n        Bson query = eq(\"_id\", new ObjectId(id));\r\n\r\n        try {\r\n            DeleteResult result = insertionColl.deleteOne(query);\r\n            return (result.getDeletedCount() == 1);\r\n        } catch (MongoException me) {\r\n            System.err.println(\"Unable to delete due to an error: \" + me);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /* ************************* BALANCE SECTION ************************* */\r\n\r\n    public void addFundsToWallet(String id_code) {\r\n\r\n        Document code;\r\n\r\n        code = codeColl.find(eq(\"code\", id_code)).first();\r\n        if (code == null) {\r\n            Utility.infoBox(\"The code that you have inserted is not valid.\", \"Error\", \"Code doesn't exist!\");\r\n            return;\r\n        }\r\n\r\n        double creditToAdd = code.getInteger(\"credit\");\r\n\r\n        try {\r\n            updateBalance(Session.getLoggedUser().getUsername(), creditToAdd, '+');\r\n            Utility.infoBox(\"Deposit of \" + code.getInteger(\"credit\") + \"â‚¬ euros successfully executed\", \"Success\", \"Deposit done!\");\r\n            deleteCode(code.getString(\"_id\"));\r\n        } catch (MongoException me) {\r\n            System.err.println(\"Unable to update due to an error: \" + me);\r\n        }\r\n    }\r\n\r\n    public boolean updateBalance(String username, double credit, char c) {\r\n\r\n        double updated;\r\n        Bson query = eq(\"username\", username);\r\n        Bson update = null;\r\n\r\n        switch(c) {\r\n            case '+':\r\n                update = inc(\"credit\", credit);\r\n                break;\r\n            case '-':\r\n                update = inc(\"credit\", -credit);\r\n                break;\r\n            default:\r\n                Utility.printTerminal(\"Operation not allowed.\");\r\n                break;\r\n        }\r\n\r\n        //update balance\r\n        try {\r\n            Document d = balanceColl.findOneAndUpdate(query, update);\r\n            updated = d.getDouble(\"credit\");\r\n            Balance.balance.setCredit(updated);\r\n            return true;\r\n        } catch (MongoException me) {\r\n            System.err.println(\"Unable to update \" + username + \"'s balance: \" + me);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public double getBalance() {\r\n\r\n        FindIterable<Document> cursor = null;\r\n        try {\r\n            Bson filter = Filters.eq(\"username\", Session.getLoggedUser().getUsername());\r\n            Bson projection = fields(include(\"credit\"), excludeId());\r\n            cursor = balanceColl.find(filter).projection(projection);\r\n        } catch (MongoException me) {\r\n            System.err.println(\"Unable to get balance from db: \" + me);\r\n        }\r\n        return cursor.first().getDouble(\"credit\");\r\n    }\r\n\r\n    public boolean insertBalance(Balance b) {\r\n\r\n        try {\r\n            balanceColl.insertOne(b.toDocument());\r\n            return true;\r\n        } catch (MongoException me) {\r\n            System.err.println(\"Unable to add new document in balance collection: \" + me);\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    /* ************************* CODE SECTION ************************* */\r\n\r\n    private void deleteCode(String id) {\r\n\r\n        Bson query = eq(\"_id\", id);\r\n\r\n        try {\r\n            DeleteResult result = codeColl.deleteOne(query);\r\n            System.out.println(\"Deleted document count: \" + result.getDeletedCount());\r\n        } catch (MongoException me) {\r\n            System.err.println(\"Unable to delete due to an error: \" + me);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/it/unipi/dii/largescale/secondchance/connection/ConnectionMongoDB.java b/src/main/java/it/unipi/dii/largescale/secondchance/connection/ConnectionMongoDB.java
--- a/src/main/java/it/unipi/dii/largescale/secondchance/connection/ConnectionMongoDB.java	(revision a55fe6903047323a13ce66a8f8b4011972add4cd)
+++ b/src/main/java/it/unipi/dii/largescale/secondchance/connection/ConnectionMongoDB.java	(date 1644856959053)
@@ -117,10 +117,10 @@
     }
 
     /* ************************* USER SECTION ************************* */
-
+        //function to register the user
     public boolean registerUser(User u) {
 
-        if (userAlreadyPresent(u.getUsername())) {
+        if (userAlreadyPresent(u.getUsername())) { //if already present, need to change username
             Utility.infoBox("Please, choose another username and try again.",
                             "Error", "Username already used!");
             return false;
@@ -144,7 +144,7 @@
 
         return true;
     }
-
+    //search user by username
     public Document findUserByUsername(String username) {
 
         cursor = userColl.find(eq("username", username)).iterator();
@@ -156,21 +156,21 @@
         return null;
 
     }
-
+    //search if the user is already present
     public boolean userAlreadyPresent(String username) {
 
         cursor = userColl.find(eq("username", username)).iterator();
         return cursor.hasNext();
 
     }
-
+    //check if the credentials are right and the user can do the login
     public boolean checkCredentials(String username, String encrypted) {
 
         cursor = userColl.find(and(eq("username", username), eq("password", encrypted))).iterator();
 
         return cursor.hasNext();
     }
-
+    //finds the user with all its fields
     public User findUserDetails(String username) {
 
         User logUser = new User();
@@ -194,7 +194,7 @@
 
         return logUser;
     }
-
+    //retrieve the details of all the insertion id of the list
     public ArrayList<Document> followedUserInsertions(ArrayList<String> insList) {
 
         ArrayList<Document> insertions = new ArrayList<>();
@@ -206,7 +206,7 @@
 
         return insertions;
     }
-
+    //search the users considering the selected rating and country if they are specified
     public ArrayList<Document> findUserByFilters(String country, String rating) {
 
         ArrayList<Document> users = new ArrayList<>();
@@ -240,7 +240,7 @@
         return users;
 
     }
-
+    //delete the user specified
     public void deleteUserMongo(String username) {
 
         Bson query = eq("username", username);
@@ -251,7 +251,7 @@
             System.err.println("Unable to delete due to an error: " + me);
         }
     }
-
+    //updates the img_profile of the user with the new image specified by the url string
     public int submitNewProfileImg(String url, String user) {
 
         Document queryUser = new Document().append("username",  user);
@@ -272,7 +272,7 @@
             return 0;
         }
     }
-
+    //updates the sold and purchased array orders of the logged user
     public void updateLoggedUser() {
 
         Bson filter = eq("username", Session.getLoggedUser().getUsername());
@@ -285,7 +285,7 @@
     }
 
     /* *********************** INSERTION SECTION *********************** */
-
+    //searchs the insertions by interested and views and keeps at most k insertions
     public ArrayList<Document> findViralInsertions(int k) {
 
         ArrayList<Document> insertions = new ArrayList<>();
@@ -300,6 +300,7 @@
         return insertions;
     }
 
+    //searches the insertions that corresponds to the specified filters
     public ArrayList<Document> findInsertionByFilters(String size, String price, String gender, String status, String category, String color) {
 
         ArrayList<Document> insertions = new ArrayList<>();
@@ -347,7 +348,7 @@
 
         return insertions;
     }
-
+    //search insertions by the specific brand
     public ArrayList<Document> findInsertionByBrand(String brand) {
 
         ArrayList<Document> insertions = new ArrayList<>();
@@ -358,7 +359,7 @@
 
         return insertions;
     }
-
+    //find the insertion with specified id
     public Insertion findInsertion(String insertion_id) {
 
         Insertion insertion = new Insertion();
@@ -385,7 +386,7 @@
         return insertion;
 
     }
-
+    //function to rollback in case of failures
     public void rollBackInsertion(int i, String username, Insertion insertion) {
 
         for(; i < 4; i++) {
@@ -414,7 +415,7 @@
         }
 
     }
-
+    //updates the balance of the buyer and the seller user and insert the order into the purchased and sold array of the users
     public boolean buyCurrentInsertion(String username, Insertion insertion){
 
         ClientSession clientSession = mongoClient.startSession();
@@ -433,13 +434,13 @@
             }
 
             boolean upBuyer, upSeller;
-            upBuyer = updateBalance(Session.getLoggedUser().getUsername(), insertion.getPrice(), '-');
+            upBuyer = updateBalance(Session.getLoggedUser().getUsername(), insertion.getPrice(), '-'); //updates buyer balance
             if(!upBuyer)
             {
                 Utility.infoBox("Cannot buy product", "Error", "Error purchase");
                 return "Cannot update buyer balance";
             } else {
-                upSeller = updateBalance(insertion.getSeller(), insertion.getPrice(), '+');
+                upSeller = updateBalance(insertion.getSeller(), insertion.getPrice(), '+'); //updates seller balance
                 if(!upSeller) {
                     rollBackInsertion(3, Session.getLoggedUser().getUsername(), insertion);
                     Utility.infoBox("Cannot buy product", "Error", "Error purchase");
@@ -471,6 +472,7 @@
                             append("status", insertion.getStatus()).
                             append("category", insertion.getCategory()));
 
+            //insert the order into sold array of seller
             Bson filter_sold = eq("username", insertion.getSeller());
             BasicDBObject update_sold = new BasicDBObject("$push", new BasicDBObject("sold", sold));
 
@@ -488,9 +490,10 @@
                 purc = Session.getLoggedUser().getPurchased();
             else
                 purc = new ArrayList<>();
+
             purc.add(purchased);
             Session.getLoggedUser().setPurchased(purc);
-
+            //delete insertion, already sold
             try {
                 insertionColl.deleteOne(new Document("image_url", insertion.getImage_url()).append("seller", insertion.getSeller()).append("timestamp", insertion.getTimestamp()));
                 return "OK";
@@ -513,6 +516,7 @@
         return message.equals("OK");
     }
 
+    //increment num interested of insertion specified
     public boolean updateNumInterested(String insertion_id, int i) {
 
         Bson filter = eq("_id", new ObjectId(insertion_id));
@@ -525,6 +529,7 @@
         }
     }
 
+    //increment num interested of insertion specified
     public void updateNumView(String uniq_id) {
 
         Bson filter = eq("_id", new ObjectId(uniq_id));
@@ -534,6 +539,11 @@
 
     }
 
+
+    /* ************************* ADMIN SECTION ************************* */
+
+
+    //find the top k rated users of the specified country
     public ArrayList<Document> findTopRatedUsersByCountry(String country) {
 
         ArrayList<Document> list = new ArrayList<>();
@@ -552,16 +562,14 @@
         return list;
 
     }
-
-    /* ************************* ADMIN SECTION ************************* */
-
+    //searches user by username or name
     public Document verifyUserInDB(String username, boolean choice) {
 
         Document user;
 
-        if (choice)
+        if (choice) //search by username
             user = userColl.find(eq("username", username)).first();
-        else
+        else //search by name
             user = userColl.find(eq("name", username)).first();
 
         return user;
@@ -597,7 +605,7 @@
                     )
             );
         }
-        else        // false = select the top k with more purchased orders
+        else        // false = select the top k with more sold orders
         {
             Bson match = match(exists("sold.0"));
             Bson projection = new Document("$size", "$sold");
Index: src/main/java/it/unipi/dii/largescale/secondchance/controller/StatsController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package main.java.it.unipi.dii.largescale.secondchance.controller;\r\n\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.chart.*;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.layout.StackPane;\r\nimport javafx.stage.Stage;\r\nimport main.java.it.unipi.dii.largescale.secondchance.cellStyle.CustomCellRank;\r\nimport main.java.it.unipi.dii.largescale.secondchance.connection.ConnectionMongoDB;\r\nimport main.java.it.unipi.dii.largescale.secondchance.connection.ConnectionNeo4jDB;\r\nimport main.java.it.unipi.dii.largescale.secondchance.utils.Utility;\r\nimport org.bson.Document;\r\n\r\nimport java.io.FileInputStream;\r\nimport java.io.IOException;\r\nimport java.util.*;\r\n\r\npublic class StatsController {\r\n\r\n    private final String[] countries = new String[]{\"Italy\", \"Canada\", \"Spain\", \"Austria\", \"Germany\", \"France\", \"Brazil\", \"Netherlands\", \"Poland\", \"Ireland\", \"United Kingdom (Great Britain)\"};\r\n    private final String[] categories = new String[]{\"clothing\",\"accessories\", \"bags\",\"beauty\", \"house\", \"jewelry\", \"kids\", \"shoes\"};\r\n\r\n    @FXML private TextField boxKNumber;\r\n    @FXML private TextField txtFieldCountry;\r\n    @FXML private TextField txtFieldCategory;\r\n\r\n    @FXML private RadioButton rBTopKRated;\r\n    @FXML private RadioButton rBPurch;\r\n    @FXML private RadioButton rBSold;\r\n    @FXML private RadioButton rBTopKInterestingIns;\r\n    @FXML private RadioButton rBTopKViewedIns;\r\n    @FXML public RadioButton rBLikesPerCategory;\r\n\r\n    @FXML private Button elaboraButton;\r\n\r\n    ConnectionNeo4jDB connNeo;\r\n\r\n    public void initialize(){\r\n\r\n        connNeo = new ConnectionNeo4jDB();\r\n\r\n        Tooltip countries = new Tooltip(\"Italy, Canada, Spain, Austria, Germany, France, Brazil, Netherlands, Poland, Ireland, United Kingdom\");\r\n        Tooltip categories = new Tooltip(\"clothing, accessories, bags, beauty, house, jewelry, kids, shoes\");\r\n\r\n        elaboraButton.setDisable(true);\r\n        boxKNumber.setEditable(false);\r\n        boxKNumber.setMouseTransparent(true);\r\n        txtFieldCountry.setEditable(false);\r\n        txtFieldCountry.setMouseTransparent(true);\r\n        txtFieldCategory.setEditable(false);\r\n        txtFieldCategory.setMouseTransparent(true);\r\n\r\n        txtFieldCountry.setTooltip(countries);\r\n        txtFieldCategory.setTooltip(categories);\r\n\r\n        rBTopKRated.selectedProperty().addListener((observable, oldValue, newValue) -> {\r\n            System.out.println(\"radio button changed from \" + oldValue + \" to \" + newValue);\r\n\r\n            txtFieldCategory.setText(\"\");\r\n            txtFieldCategory.setEditable(false);\r\n            txtFieldCategory.setMouseTransparent(true);\r\n\r\n            elaboraButton.setDisable(true);\r\n\r\n            if (txtFieldCategory.isEditable()) {\r\n                txtFieldCategory.setEditable(false);\r\n                txtFieldCategory.setMouseTransparent(true);\r\n            }\r\n\r\n            txtFieldCountry.setEditable(true);\r\n            txtFieldCountry.setMouseTransparent(false);\r\n\r\n        });\r\n\r\n        listenerTopKViewInterested();\r\n\r\n        listenerTopKViewInterested();\r\n\r\n        listenerUserItems();\r\n\r\n        listenerUserItems();\r\n\r\n        listenerNumberOfLikes();\r\n\r\n        rBLikesPerCategory.selectedProperty().addListener((observable, oldValue, newValue) -> elaboraButton.setDisable(false));\r\n\r\n        txtFieldCategory.textProperty().addListener((observable, oldValue, newValue) -> {\r\n            System.out.println(\"text changed from \" + oldValue + \" to \" + newValue);\r\n\r\n            elaboraButton.setDisable(Objects.equals(newValue, \"\"));\r\n        });\r\n\r\n        txtFieldCountry.textProperty().addListener((observable, oldValue, newValue) -> {\r\n            Utility.printTerminal(\"text changed from \" + oldValue + \" to \" + newValue);\r\n\r\n            elaboraButton.setDisable(Objects.equals(newValue, \"\"));\r\n        });\r\n    }\r\n\r\n    private void listenerTopKViewInterested() {\r\n        rBTopKViewedIns.selectedProperty().addListener((observable, oldValue, newValue) -> {\r\n               System.out.println(\"radio button changed from \" + oldValue + \" to \" + newValue);\r\n\r\n               txtFieldCountry.setText(\"\");\r\n               txtFieldCountry.setEditable(false);\r\n               txtFieldCountry.setMouseTransparent(true);\r\n\r\n               if (Objects.equals(txtFieldCategory.getText(), \"\"))\r\n                   elaboraButton.setDisable(true);\r\n\r\n               if (!txtFieldCategory.isEditable()) {\r\n                   txtFieldCategory.setEditable(true);\r\n                   txtFieldCategory.setMouseTransparent(false);\r\n               }\r\n        });\r\n    }\r\n\r\n    private void listenerUserItems() {\r\n\r\n        rBSold.selectedProperty().addListener((observable, oldValue, newValue) -> {\r\n            System.out.println(\"radio button changed from \" + oldValue + \" to \" + newValue);\r\n\r\n            txtFieldCountry.setText(\"\");\r\n            txtFieldCategory.setText(\"\");\r\n\r\n            txtFieldCountry.setEditable(false);\r\n            txtFieldCountry.setMouseTransparent(true);\r\n\r\n            txtFieldCategory.setEditable(false);\r\n            txtFieldCategory.setMouseTransparent(true);\r\n\r\n            elaboraButton.setDisable(false);\r\n        });\r\n    }\r\n\r\n    private void listenerNumberOfLikes() {\r\n\r\n        rBLikesPerCategory.selectedProperty().addListener((observable, oldValue, newValue) -> {\r\n            System.out.println(\"radio button changed from \" + oldValue + \" to \" + newValue);\r\n\r\n            txtFieldCountry.setText(\"\");\r\n            txtFieldCategory.setText(\"\");\r\n\r\n            boxKNumber.setEditable(false);\r\n            boxKNumber.setMouseTransparent(true);\r\n\r\n            txtFieldCountry.setEditable(false);\r\n            txtFieldCountry.setMouseTransparent(true);\r\n\r\n            txtFieldCategory.setEditable(false);\r\n            txtFieldCategory.setMouseTransparent(true);\r\n\r\n            elaboraButton.setDisable(false);\r\n        });\r\n    }\r\n\r\n    public void redirectToStatFunction() throws IOException {\r\n\r\n        int k;\r\n        // Section Most\r\n\r\n        if (rBLikesPerCategory.isSelected()) {\r\n            showNumberInterestingForCategory();\r\n            return;\r\n        }\r\n\r\n        if (boxKNumber.getText().equals(\"\") ||\r\n                Integer.parseInt(boxKNumber.getText()) <= 0)\r\n        {\r\n            Utility.infoBox(\"Please insert a valid K number\", \"Error\", \"Empty box!\");\r\n            return;\r\n        }\r\n\r\n        k = Integer.parseInt(boxKNumber.getText());\r\n\r\n        if (rBSold.isSelected())\r\n            showMostActiveUsers(false, k);\r\n\r\n        if (rBPurch.isSelected())\r\n            showMostActiveUsers(true, k);\r\n\r\n        // Section K\r\n\r\n        if (rBTopKRated.isSelected())\r\n            showTopKRatedUser(k);\r\n\r\n        if (rBTopKInterestingIns.isSelected())\r\n            showTopKInterestingInsertion(k);\r\n\r\n        if (rBTopKViewedIns.isSelected())\r\n            showTopKViewedInsertion(k);\r\n\r\n    }\r\n\r\n    public void showMostActiveUsers(boolean choice, int k) throws IOException{\r\n\r\n        ArrayList<Document> array = ConnectionMongoDB.connMongo.findMostActiveUsers(k, choice);\r\n        StackPane secondaryLayout = new StackPane();\r\n\r\n        ListView<CustomCellRank> leaderBoard = new ListView<>();\r\n        ObservableList<CustomCellRank> items = FXCollections.observableArrayList();\r\n\r\n        String type = (choice) ? \"Purchased Orders\" : \"Sold Orders\";\r\n\r\n        for (Document document : array)\r\n            items.add(new CustomCellRank(document.getString(\"username\"), document.getInteger(\"count\")));\r\n\r\n\r\n        leaderBoard.setItems(items);\r\n\r\n        try( FileInputStream imageStream = new FileInputStream(\"target/classes/img/secondchance.png\") ) {\r\n            Image image = new Image(imageStream);\r\n            Scene secondScene = new Scene(secondaryLayout, 800, 600);\r\n\r\n            // New window (Stage)\r\n            Stage newWindow = new Stage();\r\n            newWindow.setTitle(\"Top \" + k + \" \" + type);\r\n            newWindow.getIcons().add(image);\r\n            secondaryLayout.getChildren().add(leaderBoard);\r\n            newWindow.setScene(secondScene);\r\n\r\n            newWindow.show();\r\n        }\r\n\r\n    }\r\n\r\n    private void showNumberInterestingForCategory() {\r\n\r\n        ArrayList<String> array = connNeo.findNumberInterestingForCategory();\r\n        StackPane secondaryLayout = new StackPane();\r\n\r\n        ListView<CustomCellRank> leaderBoard = new ListView<>();\r\n        ObservableList<CustomCellRank> items = FXCollections.observableArrayList();\r\n\r\n        String[] parts;\r\n\r\n        for (String s : array) {\r\n\r\n            parts = s.split(\":\");\r\n            items.add(new CustomCellRank(parts[0], Integer.parseInt(parts[1])));\r\n        }\r\n\r\n        leaderBoard.setItems(items);\r\n\r\n        try( FileInputStream imageStream = new FileInputStream(\"target/classes/img/secondchance.png\") ) {\r\n            Image image = new Image(imageStream);\r\n            Scene secondScene = new Scene(secondaryLayout, 800, 600);\r\n\r\n            // New window (Stage)\r\n            Stage newWindow = new Stage();\r\n            newWindow.setTitle(\"Show Number of Interesting by Category\");\r\n            newWindow.getIcons().add(image);\r\n            secondaryLayout.getChildren().add(leaderBoard);\r\n            newWindow.setScene(secondScene);\r\n\r\n            newWindow.show();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void showTopKRatedUser(int k) {\r\n\r\n        ArrayList<Document> array;\r\n        String country = txtFieldCountry.getText();\r\n\r\n        if (!Arrays.asList(countries).contains(country)) {\r\n            Utility.infoBox(\"There are no users of this country!\", \"Error\", \"Country not found!\");\r\n            txtFieldCountry.setText(\"\");\r\n            return;\r\n        }\r\n\r\n        array = ConnectionMongoDB.connMongo.findTopRatedUsersByCountry(country);\r\n\r\n        XYChart.Series series1 = new XYChart.Series();\r\n        series1.setName(country);\r\n\r\n        for (int i=0; i < k; i++) {\r\n            series1.getData().add(new XYChart.Data(array.get(i).getObjectId(\"_id\").toString(), array.get(i).getDouble(\"rating\")));\r\n        }\r\n\r\n\r\n        try( FileInputStream imageStream = new FileInputStream(\"target/classes/img/secondchance.png\") ) {\r\n            Stage stage = new Stage();\r\n            Image image = new Image(imageStream);\r\n            stage.getIcons().add(image);\r\n            stage.setTitle(\"Stats\");\r\n            final CategoryAxis xAxis = new CategoryAxis();\r\n            final NumberAxis yAxis = new NumberAxis();\r\n            final BarChart<String,Number> bc =\r\n                    new BarChart<>(xAxis,yAxis);\r\n            bc.setTitle(\"Top K Rated Users\");\r\n            xAxis.setLabel(\"User ID\");\r\n            yAxis.setLabel(\"Rating\");\r\n            bc.getData().addAll(series1);\r\n            Scene scene = new Scene(bc,1200,800);\r\n            stage.setScene(scene);\r\n            stage.show();\r\n        }\r\n\r\n\r\n        catch(IOException e)\r\n        {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void showTopKInterestingInsertion(int k) {\r\n\r\n        String category = txtFieldCategory.getText();\r\n        ArrayList<Document> array;\r\n        array = ConnectionMongoDB.connMongo.findTopKViewedInsertion(k, category);\r\n\r\n        XYChart.Series series1 = new XYChart.Series();\r\n        series1.setName(category);\r\n\r\n        if(!Arrays.asList(categories).contains(category)) {\r\n            Utility.infoBox(\"Please insert a valid category\", \"Error\", \"Category not found!\");\r\n            return;\r\n        }\r\n\r\n        for (int i=0; i < k; i++) {\r\n            series1.getData().add(new XYChart.Data(array.get(i).getObjectId(\"_id\").toString(), array.get(i).getInteger(\"interested\")));\r\n        }\r\n\r\n\r\n        try( FileInputStream imageStream = new FileInputStream(\"target/classes/img/secondchance.png\") ) {\r\n            Stage stage = new Stage();\r\n            Image image = new Image(imageStream);\r\n            stage.getIcons().add(image);\r\n            stage.setTitle(\"Stats\");\r\n            final CategoryAxis xAxis = new CategoryAxis();\r\n            final NumberAxis yAxis = new NumberAxis();\r\n            final BarChart<String,Number> bc =\r\n                    new BarChart<>(xAxis,yAxis);\r\n            bc.setTitle(\"Top K Viewed Insertions\");\r\n            xAxis.setLabel(\"Insertion ID\");\r\n            yAxis.setLabel(\"Number of interested users\");\r\n            bc.getData().addAll(series1);\r\n            Scene scene = new Scene(bc,1200,800);\r\n            stage.setScene(scene);\r\n            stage.show();\r\n        }\r\n\r\n\r\n        catch(IOException e)\r\n        {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void showTopKViewedInsertion(int k){\r\n\r\n        ArrayList<Document> array;\r\n\r\n        String category = txtFieldCategory.getText();\r\n\r\n        if(!Arrays.asList(categories).contains(category)) {\r\n            Utility.infoBox(\"Please insert a valid category\", \"Error\", \"Category not found!\");\r\n            return;\r\n        }\r\n\r\n        array = ConnectionMongoDB.connMongo.findTopKViewedInsertion(k, category);\r\n\r\n        XYChart.Series series1 = new XYChart.Series();\r\n        series1.setName(category);\r\n        for (int i=0; i < k; i++) {\r\n            series1.getData().add(new XYChart.Data(array.get(i).getObjectId(\"_id\").toString(), array.get(i).getInteger(\"views\")));\r\n        }\r\n\r\n        try( FileInputStream imageStream = new FileInputStream(\"target/classes/img/secondchance.png\") ) {\r\n            Stage stage = new Stage();\r\n            Image image = new Image(imageStream);\r\n            stage.getIcons().add(image);\r\n            stage.setTitle(\"Stats\");\r\n            final CategoryAxis xAxis = new CategoryAxis();\r\n            final NumberAxis yAxis = new NumberAxis();\r\n            final BarChart<String,Number> bc =\r\n                    new BarChart<>(xAxis,yAxis);\r\n            bc.setTitle(\"Top K Viewed Insertions\");\r\n            xAxis.setLabel(\"Insertion ID\");\r\n            yAxis.setLabel(\"Number of views\");\r\n            Scene scene  = new Scene(bc,1200,800);\r\n            bc.getData().addAll(series1);\r\n            stage.setScene(scene);\r\n            stage.show();\r\n        } catch (IOException fileNotFoundException) {\r\n            fileNotFoundException.printStackTrace();\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/it/unipi/dii/largescale/secondchance/controller/StatsController.java b/src/main/java/it/unipi/dii/largescale/secondchance/controller/StatsController.java
--- a/src/main/java/it/unipi/dii/largescale/secondchance/controller/StatsController.java	(revision a55fe6903047323a13ce66a8f8b4011972add4cd)
+++ b/src/main/java/it/unipi/dii/largescale/secondchance/controller/StatsController.java	(date 1644659083464)
@@ -22,24 +22,34 @@
 public class StatsController {
 
     private final String[] countries = new String[]{"Italy", "Canada", "Spain", "Austria", "Germany", "France", "Brazil", "Netherlands", "Poland", "Ireland", "United Kingdom (Great Britain)"};
-    private final String[] categories = new String[]{"clothing","accessories", "bags","beauty", "house", "jewelry", "kids", "shoes"};
+    private final String[] categories = new String[]{"clothing", "accessories", "bags", "beauty", "house", "jewelry", "kids", "shoes"};
 
-    @FXML private TextField boxKNumber;
-    @FXML private TextField txtFieldCountry;
-    @FXML private TextField txtFieldCategory;
+    @FXML
+    private TextField boxKNumber;
+    @FXML
+    private TextField txtFieldCountry;
+    @FXML
+    private TextField txtFieldCategory;
 
-    @FXML private RadioButton rBTopKRated;
-    @FXML private RadioButton rBPurch;
-    @FXML private RadioButton rBSold;
-    @FXML private RadioButton rBTopKInterestingIns;
-    @FXML private RadioButton rBTopKViewedIns;
-    @FXML public RadioButton rBLikesPerCategory;
+    @FXML
+    private RadioButton rBTopKRated;
+    @FXML
+    private RadioButton rBPurch;
+    @FXML
+    private RadioButton rBSold;
+    @FXML
+    private RadioButton rBTopKInterestingIns;
+    @FXML
+    private RadioButton rBTopKViewedIns;
+    @FXML
+    public RadioButton rBLikesPerCategory;
 
-    @FXML private Button elaboraButton;
+    @FXML
+    private Button elaboraButton;
 
     ConnectionNeo4jDB connNeo;
 
-    public void initialize(){
+    public void initialize() {
 
         connNeo = new ConnectionNeo4jDB();
 
@@ -57,83 +67,120 @@
         txtFieldCountry.setTooltip(countries);
         txtFieldCategory.setTooltip(categories);
 
+        listenerTopKRated();
+
+        listenerUserPurch();
+
+        listenerUserSold();
+
+        listenerTopKViewed();
+
+        listenerTopKInterested();
+
+        listenerNumberOfLikes();
+
+    }
+
+    private void listenerTopKRated() {
+
         rBTopKRated.selectedProperty().addListener((observable, oldValue, newValue) -> {
             System.out.println("radio button changed from " + oldValue + " to " + newValue);
 
+            boxKNumber.setEditable(true);
+            boxKNumber.setMouseTransparent(false);
+            txtFieldCountry.setText("");
+            txtFieldCountry.setEditable(true);
+            txtFieldCountry.setMouseTransparent(false);
+
+            elaboraButton.setDisable(true);
+
+        });
+
+    }
+
+    private void listenerUserPurch() {
+
+        rBPurch.selectedProperty().addListener((observable, oldValue, newValue) -> {
+            System.out.println("radio button changed from " + oldValue + " to " + newValue);
+
+            boxKNumber.setEditable(true);
+            boxKNumber.setMouseTransparent(false);
+
+            txtFieldCountry.setText("");
             txtFieldCategory.setText("");
+
+            txtFieldCountry.setEditable(false);
+            txtFieldCountry.setMouseTransparent(true);
+
             txtFieldCategory.setEditable(false);
             txtFieldCategory.setMouseTransparent(true);
 
             elaboraButton.setDisable(true);
+        });
+    }
+
+    private void listenerUserSold(){
+        rBSold.selectedProperty().addListener((observable, oldValue, newValue) -> {
+            System.out.println("radio button changed from " + oldValue + " to " + newValue);
+
+            boxKNumber.setEditable(true);
+            boxKNumber.setMouseTransparent(false);
+
+            txtFieldCountry.setText("");
+            txtFieldCategory.setText("");
 
-            if (txtFieldCategory.isEditable()) {
-                txtFieldCategory.setEditable(false);
-                txtFieldCategory.setMouseTransparent(true);
-            }
-
-            txtFieldCountry.setEditable(true);
-            txtFieldCountry.setMouseTransparent(false);
-
-        });
-
-        listenerTopKViewInterested();
-
-        listenerTopKViewInterested();
-
-        listenerUserItems();
-
-        listenerUserItems();
-
-        listenerNumberOfLikes();
-
-        rBLikesPerCategory.selectedProperty().addListener((observable, oldValue, newValue) -> elaboraButton.setDisable(false));
+            txtFieldCountry.setEditable(false);
+            txtFieldCountry.setMouseTransparent(true);
+
+            txtFieldCategory.setEditable(false);
+            txtFieldCategory.setMouseTransparent(true);
 
-        txtFieldCategory.textProperty().addListener((observable, oldValue, newValue) -> {
-            System.out.println("text changed from " + oldValue + " to " + newValue);
+            elaboraButton.setDisable(true);
 
-            elaboraButton.setDisable(Objects.equals(newValue, ""));
         });
 
-        txtFieldCountry.textProperty().addListener((observable, oldValue, newValue) -> {
-            Utility.printTerminal("text changed from " + oldValue + " to " + newValue);
-
-            elaboraButton.setDisable(Objects.equals(newValue, ""));
-        });
     }
 
-    private void listenerTopKViewInterested() {
+    private void listenerTopKViewed(){
         rBTopKViewedIns.selectedProperty().addListener((observable, oldValue, newValue) -> {
-               System.out.println("radio button changed from " + oldValue + " to " + newValue);
+            System.out.println("radio button changed from " + oldValue + " to " + newValue);
 
-               txtFieldCountry.setText("");
-               txtFieldCountry.setEditable(false);
-               txtFieldCountry.setMouseTransparent(true);
+            boxKNumber.setEditable(true);
+            boxKNumber.setMouseTransparent(false);
+
+            txtFieldCountry.setText("");
+            txtFieldCategory.setText("");
+
+            txtFieldCountry.setEditable(false);
+            txtFieldCountry.setMouseTransparent(true);
 
-               if (Objects.equals(txtFieldCategory.getText(), ""))
-                   elaboraButton.setDisable(true);
-
-               if (!txtFieldCategory.isEditable()) {
-                   txtFieldCategory.setEditable(true);
-                   txtFieldCategory.setMouseTransparent(false);
-               }
+            txtFieldCategory.setEditable(true);
+            txtFieldCategory.setMouseTransparent(false);
+
+            elaboraButton.setDisable(true);
+
         });
-    }
 
-    private void listenerUserItems() {
+    }
 
-        rBSold.selectedProperty().addListener((observable, oldValue, newValue) -> {
+    private void listenerTopKInterested() {
+        rBTopKInterestingIns.selectedProperty().addListener((observable, oldValue, newValue) -> {
             System.out.println("radio button changed from " + oldValue + " to " + newValue);
 
+            boxKNumber.setEditable(true);
+            boxKNumber.setMouseTransparent(false);
+
             txtFieldCountry.setText("");
             txtFieldCategory.setText("");
 
             txtFieldCountry.setEditable(false);
             txtFieldCountry.setMouseTransparent(true);
 
-            txtFieldCategory.setEditable(false);
-            txtFieldCategory.setMouseTransparent(true);
+            txtFieldCategory.setEditable(true);
+            txtFieldCategory.setMouseTransparent(false);
 
-            elaboraButton.setDisable(false);
+            elaboraButton.setDisable(true);
+
         });
     }
 
@@ -155,6 +202,7 @@
             txtFieldCategory.setMouseTransparent(true);
 
             elaboraButton.setDisable(false);
+
         });
     }
 
Index: src/main/resources/FXML/Stats.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.Button?>\r\n<?import javafx.scene.control.Label?>\r\n<?import javafx.scene.control.RadioButton?>\r\n<?import javafx.scene.control.TextField?>\r\n<?import javafx.scene.control.ToggleGroup?>\r\n<?import javafx.scene.layout.AnchorPane?>\r\n<?import javafx.scene.text.Font?>\r\n<?import javafx.scene.text.Text?>\r\n\r\n<?import javafx.scene.layout.HBox?>\r\n<?import javafx.scene.layout.VBox?>\r\n\r\n<AnchorPane prefHeight=\"400.0\" prefWidth=\"800.0\" style=\"-fx-background-color: rgb(230, 230, 255);\"\r\n            xmlns=\"http://javafx.com/javafx/17\" xmlns:fx=\"http://javafx.com/fxml/1\"\r\n            fx:controller=\"main.java.it.unipi.dii.largescale.secondchance.controller.StatsController\">\r\n   <!-- Page title -->\r\n   <Label layoutX=\"321.0\" layoutY=\"16.0\" text=\"Stats Section\" textAlignment=\"CENTER\" textFill=\"#b936e4\">\r\n   <font>\r\n      <Font size=\"24.0\"/>\r\n   </font>\r\n   </Label>\r\n   <!-- Content box -->\r\n   <VBox prefWidth=\"800.0\" translateX=\"80.0\" layoutY=\"50.0\" spacing=\"30.0\">\r\n      <Text strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" style=\"-fx-font-weight: bold;\" text=\"Specify the parameters:\"\r\n            underline=\"true\">\r\n         <font>\r\n            <Font size=\"16.0\"/>\r\n         </font>\r\n      </Text>\r\n      <HBox prefWidth=\"800.0\" spacing=\"50.0\" translateY=\"10.0\">   <!-- Set parameters -->\r\n         <VBox spacing=\"20.0\">\r\n            <Label text=\"Insert the Top K number:\"/>\r\n            <Label text=\"Insert the country you want:\"/>\r\n            <Label text=\"Please insert the country you want:\"/>\r\n         </VBox>\r\n         <VBox spacing=\"10.0\" translateY=\"-5.0\">\r\n            <TextField fx:id=\"boxKNumber\" alignment=\"CENTER\" prefHeight=\"26.0\" prefWidth=\"57.0\" promptText=\"K\"/>\r\n            <TextField fx:id=\"txtFieldCountry\" alignment=\"CENTER\" prefHeight=\"26.0\" prefWidth=\"114.0\"\r\n                       promptText=\"Country\"/>\r\n            <TextField fx:id=\"txtFieldCategory\" alignment=\"CENTER\" prefHeight=\"26.0\" prefWidth=\"114.0\"\r\n                       promptText=\"Category\"/>\r\n         </VBox>\r\n      </HBox>\r\n      <Label text=\"Select the query do you want to perform:\" style=\"-fx-font-weight: bold;\" underline=\"true\"\r\n             translateY=\"10.0\">\r\n         <font>\r\n            <Font size=\"15.0\"/>\r\n         </font>\r\n      </Label>\r\n      <HBox prefWidth=\"800.0\" spacing=\"20.0\">\r\n         <VBox spacing=\"10.0\">   <!-- MongoDB stats -->\r\n            <RadioButton fx:id=\"rBTopKRated\" mnemonicParsing=\"false\" text=\"Top K Rated User (by country) \"\r\n                         toggleGroup=\"$TopK\">\r\n               <toggleGroup>\r\n                  <ToggleGroup fx:id=\"TopK\"/>\r\n               </toggleGroup>\r\n            </RadioButton>\r\n            <RadioButton fx:id=\"rBPurch\" mnemonicParsing=\"false\" prefHeight=\"17.0\"\r\n                         text=\"Top k users with more purchased items\" toggleGroup=\"$TopK\"/>\r\n            <RadioButton fx:id=\"rBSold\" mnemonicParsing=\"false\" prefHeight=\"21.0\"\r\n                         text=\"Top k users with more sold items\" toggleGroup=\"$TopK\"/>\r\n         </VBox>\r\n         <VBox spacing=\"10.0\">   <!-- Neo4j stats -->\r\n            <RadioButton fx:id=\"rBTopKInterestingIns\" mnemonicParsing=\"false\"\r\n                         text=\"Top K interesting insertions (by category) \" toggleGroup=\"$TopK\"/>\r\n            <RadioButton fx:id=\"rBTopKViewedIns\" mnemonicParsing=\"false\" text=\"Top K viewed insertions (by category) \"\r\n                         toggleGroup=\"$TopK\"/>\r\n            <RadioButton fx:id=\"rBLikesPerCategory\" mnemonicParsing=\"false\" prefHeight=\"21.0\"\r\n                         text=\"Number of likes per category\" toggleGroup=\"$TopK\"/>\r\n         </VBox>\r\n      </HBox>\r\n      <!-- Process stats button -->\r\n      <Button fx:id=\"elaboraButton\" translateX=\"250.0\" mnemonicParsing=\"false\"\r\n              onMouseClicked=\"#redirectToStatFunction\"\r\n              style=\"-fx-background-color: rgb(206, 153, 255)rgb(206, 153, 255); -fx-background-radius: 50;\"\r\n              text=\"Process results\" textFill=\"#fffffff0\"/>\r\n   </VBox>\r\n</AnchorPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/FXML/Stats.fxml b/src/main/resources/FXML/Stats.fxml
--- a/src/main/resources/FXML/Stats.fxml	(revision a55fe6903047323a13ce66a8f8b4011972add4cd)
+++ b/src/main/resources/FXML/Stats.fxml	(date 1644659166630)
@@ -23,7 +23,7 @@
    </Label>
    <!-- Content box -->
    <VBox prefWidth="800.0" translateX="80.0" layoutY="50.0" spacing="30.0">
-      <Text strokeType="OUTSIDE" strokeWidth="0.0" style="-fx-font-weight: bold;" text="Specify the parameters:"
+      <Text strokeWidth="0.0" style="-fx-font-weight: bold;" text="Specify the parameters:"
             underline="true">
          <font>
             <Font size="16.0"/>
Index: .idea/shelf/Uncommitted_changes_before_Update_at_04_02_2022_15_11__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_04_02_2022_15_11__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_04_02_2022_15_11__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_04_02_2022_15_11__Changes_.xml	(revision a55fe6903047323a13ce66a8f8b4011972add4cd)
+++ /dev/null	(revision a55fe6903047323a13ce66a8f8b4011972add4cd)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_04_02_2022_15_11_[Changes]" date="1643984080551" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_04_02_2022_15_11_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 04/02/2022 15:11 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_04_02_2022_15_11_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_04_02_2022_15_11_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_04_02_2022_15_11_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_04_02_2022_15_11_[Changes]/shelved.patch	(revision a55fe6903047323a13ce66a8f8b4011972add4cd)
+++ /dev/null	(revision a55fe6903047323a13ce66a8f8b4011972add4cd)
@@ -1,1938 +0,0 @@
-Index: src/main/java/it/unipi/dii/largescale/secondchance/controller/ProfileController.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package main.java.it.unipi.dii.largescale.secondchance.controller;\r\n\r\nimport javafx.beans.value.ChangeListener;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.geometry.Insets;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.*;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.layout.*;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.text.Text;\r\nimport javafx.stage.Stage;\r\nimport main.java.it.unipi.dii.largescale.secondchance.connection.ConnectionMongoDB;\r\nimport main.java.it.unipi.dii.largescale.secondchance.connection.ConnectionNeo4jDB;\r\nimport main.java.it.unipi.dii.largescale.secondchance.entity.User;\r\nimport main.java.it.unipi.dii.largescale.secondchance.utils.Session;\r\nimport main.java.it.unipi.dii.largescale.secondchance.utils.Utility;\r\nimport org.bson.*;\r\nimport javafx.stage.StageStyle;\r\nimport java.io.FileInputStream;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.IOException;\r\n\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n\r\npublic class ProfileController extends MainController {\r\n\r\n    public GridPane userInfo;\r\n    public GridPane reviews;\r\n\r\n    public BorderPane review;\r\n    public Pane profileImage;\r\n    HBox reviewsBox;\r\n\r\n    @FXML public Pane nextReviews, prevReviews;\r\n    public Button refreshBtn;\r\n    public Label balanceText;\r\n    public ImageView imageProfile;\r\n\r\n    public ArrayList<String> follower;\r\n    public ArrayList<String> following;\r\n\r\n    private List<Document> listReviews;\r\n\r\n    @FXML public Button btnLogout;\r\n    @FXML public Button btnAddFunds;\r\n    @FXML private Text balanceValue, titleProfile;\r\n\r\n    public Button followersButton, followingButton;\r\n    public Button interestedInsertionsButton, insertionButton;\r\n\r\n    private User user;\r\n    private Session session;\r\n\r\n    int scrollPage;\r\n    int scrollPage2;\r\n    int nPage = 2;\r\n\r\n    public void initialize(){\r\n\r\n        user  = Session.getLogUser();\r\n        balanceValue.setText(String.format(\"%.2f\",user.getBalance()) + \"â‚¬\");\r\n        setProfile();\r\n        System.out.println(\"USERNAME init: \" + user.getUsername());\r\n    }\r\n\r\n    public void initialize(String us) {\r\n\r\n        user = Session.getLogUser();\r\n\r\n        scrollPage = 0;\r\n        scrollPage2 = 0;\r\n\r\n        if(!us.equals(user.getUsername())) {\r\n\r\n            balanceValue.setVisible(false);\r\n            btnAddFunds.setDisable(true);\r\n            btnAddFunds.setVisible(false);\r\n            refreshBtn.setVisible(false);\r\n            refreshBtn.setDisable(true);\r\n            btnLogout.setDisable(true);\r\n            btnLogout.setVisible(false);\r\n            balanceText.setVisible(false);\r\n            interestedInsertionsButton.setDisable(true);\r\n            interestedInsertionsButton.setVisible(false);\r\n            insertionButton.setLayoutY(250);\r\n            insertionButton.setText(\"View insertion published\");\r\n            titleProfile.setText(\"Profile of \" + us);\r\n            titleProfile.setLayoutX(270);\r\n            titleProfile.setLayoutY(70);\r\n            profileImage.setLayoutY(20);\r\n            profileImage.setLayoutX(70);\r\n\r\n            Document userSearched = ConnectionMongoDB.connMongo.findUserByUsername(us);\r\n            user = User.fromDocument(userSearched);\r\n\r\n            setProfile();\r\n        }\r\n        System.out.println(\"USERNAME INIT: \" + user.getUsername());\r\n    }\r\n\r\n    public void setProfile(){\r\n\r\n        prevReviews.setDisable(true);\r\n        prevReviews.setVisible(false);\r\n\r\n        reviewsBox = new HBox();\r\n        reviewsBox.setSpacing(100);\r\n        review.setCenter(reviewsBox);\r\n\r\n        scrollPage = 0;\r\n\r\n        userInfo.getChildren().clear();\r\n        profileImage.getChildren().clear();\r\n\r\n        String rate = (Double.isNaN(user.getRating()))? \"No reviews\" : Double.toString(user.getRating());\r\n\r\n        Label username = new Label(user.getUsername());\r\n        Label name = new Label(user.getName());\r\n        Label email = new Label(user.getEmail());\r\n        Label country = new Label(user.getCountry());\r\n        Label city = new Label(user.getCity());\r\n        Label address = new Label(user.getAddress());\r\n        Label rating = new Label(rate);\r\n        Label usernameText = new Label(\"Username:\");\r\n        Label nameText = new Label(\"Name:\");\r\n        Label emailText = new Label(\"Email:\");\r\n        Label countryText = new Label(\"Country:\");\r\n        Label cityText = new Label(\"City:\");\r\n        Label addressText = new Label(\"Address:\");\r\n        Label ratingText = new Label(\"Rating:\");\r\n\r\n        setProfileImage();\r\n\r\n        System.out.println(\"USER:\" + username + \" \" + name +  \" \" + email +  \" \" + country +  \" \" + city +  \" \" + address + \" \"+ user.getImage());\r\n\r\n        userInfo.add(usernameText, 0, 0);\r\n        userInfo.add(nameText, 0, 1);\r\n        userInfo.add(emailText, 0, 2);\r\n        userInfo.add(countryText, 0, 3);\r\n        userInfo.add(cityText, 0, 4);\r\n        userInfo.add(addressText, 0, 5);\r\n        userInfo.add(ratingText, 0, 6);\r\n\r\n        userInfo.add(username, 1,0);\r\n        userInfo.add(name, 1, 1);\r\n        userInfo.add(email, 1, 2);\r\n        userInfo.add(country, 1, 3);\r\n        userInfo.add(city, 1, 4);\r\n        userInfo.add(address, 1, 5);\r\n        userInfo.add(rating, 1, 6);\r\n\r\n        updateUserBalance();\r\n        following = ConnectionNeo4jDB.connNeo.retrieveFollowingByUser(user.getUsername());\r\n        follower = ConnectionNeo4jDB.connNeo.retrieveFollowersByUser(user.getUsername());\r\n        listReviews = ConnectionMongoDB.connMongo.getReviewsByUser(user.getUsername());\r\n        if (listReviews.size() < 3) {\r\n            System.out.println(\"Reviews nulle, disattivo i bottoni\");\r\n            nextReviews.setDisable(true);\r\n            nextReviews.setVisible(false);\r\n        }\r\n        showReviews();\r\n    }\r\n\r\n    public void setProfileImage() {\r\n\r\n        Label label = new Label(\"Change image!\");\r\n        label.setVisible(false);\r\n\r\n        if (user.getImage().equals(\"image.png\")) {\r\n\r\n            System.out.println(\"HERE!!\");\r\n\r\n            try {\r\n                FileInputStream imageStream = new FileInputStream(\"target/classes/img/user.png\");\r\n                Image img = new Image(imageStream);\r\n                imageProfile = new ImageView();\r\n                imageProfile.setImage(img);\r\n\r\n            } catch (FileNotFoundException e) {\r\n                e.printStackTrace();\r\n            }\r\n        } else {\r\n            imageProfile = Utility.getGoodImage(user.getImage(), 100);\r\n        }\r\n\r\n        label.setTranslateX(10);\r\n        label.setTranslateY(45);\r\n        label.setTextFill(Color.RED);\r\n        profileImage.getChildren().add(imageProfile);\r\n        profileImage.getChildren().add(label);\r\n\r\n        profileImage.setOnMouseClicked(event->{\r\n                    try {\r\n                        showAddImgProfile();\r\n                    } catch (Exception e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n        );\r\n\r\n        profileImage.hoverProperty().addListener((ChangeListener<Boolean>) (observable, oldValue, newValue) -> {\r\n            if (newValue) {\r\n                label.setVisible(true);\r\n            } else {\r\n                label.setVisible(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    public void setProfile(String us){\r\n\r\n        prevReviews.setDisable(true);\r\n        prevReviews.setVisible(false);\r\n\r\n        reviewsBox = new HBox();\r\n        reviewsBox.setSpacing(100);\r\n        review.setCenter(reviewsBox);\r\n\r\n        scrollPage = 0;\r\n        scrollPage2 = 0;\r\n\r\n        userInfo.getChildren().clear();\r\n\r\n        String rate = (Double.isNaN(user.getRating()))? \"No reviews\" : Double.toString(user.getRating());\r\n\r\n        Label username = new Label(user.getUsername());\r\n        Label name = new Label(user.getName());\r\n        Label email = new Label(user.getEmail());\r\n        Label country = new Label(user.getCountry());\r\n        Label city = new Label(user.getCity());\r\n        Label address = new Label(user.getAddress());\r\n        Label rating = new Label(rate);\r\n        Label usernameText = new Label(\"Username:\");\r\n        Label nameText = new Label(\"Name:\");\r\n        Label emailText = new Label(\"Email:\");\r\n        Label countryText = new Label(\"Country:\");\r\n        Label cityText = new Label(\"City:\");\r\n        Label addressText = new Label(\"Address:\");\r\n        Label ratingText = new Label(\"Rating:\");\r\n\r\n        System.out.println(username + \" \" + name +  \" \" + email +  \" \" + country +  \" \" + city +  \" \" + address);\r\n\r\n        userInfo.add(usernameText, 0, 0);\r\n        userInfo.add(nameText, 0, 1);\r\n        userInfo.add(emailText, 0, 2);\r\n        userInfo.add(countryText, 0, 3);\r\n        userInfo.add(cityText, 0, 4);\r\n        userInfo.add(addressText, 0, 5);\r\n        userInfo.add(ratingText, 0, 6);\r\n\r\n        userInfo.add(username, 1,0);\r\n        userInfo.add(name, 1, 1);\r\n        userInfo.add(email, 1, 2);\r\n        userInfo.add(country, 1, 3);\r\n        userInfo.add(city, 1, 4);\r\n        userInfo.add(address, 1, 5);\r\n        userInfo.add(rating, 1, 6);\r\n\r\n        updateUserBalance();\r\n\r\n        following = ConnectionNeo4jDB.connNeo.retrieveFollowingByUser(us);\r\n        follower = ConnectionNeo4jDB.connNeo.retrieveFollowersByUser(us);\r\n        System.out.println(\"Abdelhakam: \" + user.getUsername());\r\n        listReviews = ConnectionMongoDB.connMongo.getReviewsByUser(user.getUsername());\r\n\r\n        if (listReviews.size() < 3) {\r\n            System.out.println(\"Reviews nulle, disattivo i bottoni\");\r\n            nextReviews.setDisable(true);\r\n            nextReviews.setVisible(false);\r\n        }\r\n        showReviews();\r\n    }\r\n\r\n    public void getReviews() {\r\n\r\n        listReviews = ConnectionMongoDB.connMongo.getReviewsByUser(user.getUsername());\r\n\r\n        System.out.println(listReviews.get(0));\r\n    }\r\n\r\n    /* ********** FOLLOWERS/ING STATS SECTION ********** */\r\n\r\n    public void showUserFollowers() {\r\n\r\n        try( FileInputStream imageStream = new FileInputStream(\"target/classes/img/secondchance.png\") ) {\r\n\r\n            Image image = new Image(imageStream);\r\n            FXMLLoader loader = new FXMLLoader();\r\n            loader.setLocation(FollowersController.class.getResource(\"/FXML/FollowersPage.fxml\"));\r\n            Stage stage = new Stage(StageStyle.DECORATED);\r\n            stage.getIcons().add(image);\r\n            stage.setScene(new Scene(loader.load()));\r\n            stage.setTitle(\"Your insertions\");\r\n            FollowersController controller = loader.getController();\r\n            if (follower.size() == 0) {\r\n                Utility.infoBox(\"You have not followers.\", \"Information\", \"No followers!\");\r\n                return;\r\n            }\r\n            controller.initialize(follower);\r\n            stage.show();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void showUserFollowing() {\r\n\r\n        try( FileInputStream imageStream = new FileInputStream(\"target/classes/img/secondchance.png\") ) {\r\n\r\n            Image image = new Image(imageStream);\r\n            FXMLLoader loader = new FXMLLoader();\r\n            loader.setLocation(FollowingController.class.getResource(\"/FXML/FollowingPage.fxml\"));\r\n            Stage stage = new Stage(StageStyle.DECORATED);\r\n            stage.getIcons().add(image);\r\n            stage.setScene(new Scene(loader.load()));\r\n            stage.setTitle(\"Your insertions\");\r\n            FollowingController controller = loader.getController();\r\n            if (following.size() == 0) {\r\n                Utility.infoBox(\"You have not following.\", \"Information\", \"No following!\");\r\n                return;\r\n            }\r\n            controller.initialize(following);\r\n            stage.show();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void showInterestedInsertions() {\r\n\r\n        ArrayList<String> followed_post = ConnectionNeo4jDB.connNeo.retrieveFollowersByUser(user.getUsername());\r\n        StackPane secondaryLayout = new StackPane();\r\n\r\n        for (int i = 0; i < 10; i++) {\r\n\r\n            Label x = new Label(followed_post.get(i));\r\n            x.setTranslateX(10);\r\n            x.setTranslateY(-100 + i*50);\r\n            secondaryLayout.getChildren().add(x);\r\n        }\r\n\r\n        Scene secondScene = new Scene(secondaryLayout, 920, 400);\r\n\r\n        // New window (Stage)\r\n        Stage newWindow = new Stage();\r\n        newWindow.setTitle(\"Followed post\");\r\n        newWindow.setScene(secondScene);\r\n        newWindow.show();\r\n    }\r\n\r\n    /* ********** BALANCE SECTION ********** */\r\n\r\n    public void updateUserBalance() {\r\n\r\n        double new_balance = ConnectionMongoDB.connMongo.updateBalance(user.getUsername());\r\n        System.out.println(\"NEW BALANCE HERE: \" + String.format(\"%.2f\",new_balance));\r\n        balanceValue.setText(String.format(\"%.2f\",new_balance) + \"â‚¬\");\r\n    }\r\n\r\n    public void addFundsShow() throws IOException {\r\n        Stage stage = new Stage();\r\n        Utility.changePage(stage, \"AddFunds\");\r\n    }\r\n\r\n    public void showInsertions() throws IOException {\r\n\r\n        try( FileInputStream imageStream = new FileInputStream(\"target/classes/img/secondchance.png\") ) {\r\n            Image image = new Image(imageStream);\r\n            FXMLLoader loader = new FXMLLoader();\r\n            loader.setLocation(InsertionListController.class.getResource(\"/FXML/InsertionList.fxml\"));\r\n            Stage stage = new Stage(StageStyle.DECORATED);\r\n            stage.getIcons().add(image);\r\n            stage.setScene(new Scene(loader.load()));\r\n            stage.setTitle(\"Your insertions\");\r\n            InsertionListController controller = loader.getController();\r\n            controller.initialize(user.getUsername());\r\n\r\n            stage.show();\r\n        }\r\n    }\r\n\r\n    public void showInsertionsLiked() throws IOException {\r\n\r\n        try( FileInputStream imageStream = new FileInputStream(\"target/classes/img/secondchance.png\") ) {\r\n            Image image = new Image(imageStream);\r\n            FXMLLoader loader = new FXMLLoader();\r\n            loader.setLocation(InsertionListLikedController.class.getResource(\"/FXML/InsertionListLiked.fxml\"));\r\n            Stage stage = new Stage(StageStyle.DECORATED);\r\n            stage.getIcons().add(image);\r\n            stage.setTitle(\"Insertions you are interested in\");\r\n            stage.setScene(new Scene(loader.load()));\r\n\r\n            InsertionListLikedController controller = loader.getController();\r\n            controller.initialize(user.getUsername());\r\n\r\n            stage.show();\r\n        }\r\n    }\r\n\r\n    public void logout() throws IOException {\r\n\r\n        session = Session.getInstance();\r\n        session.getLogoutUser();\r\n\r\n        // Closing current window\r\n        Stage stage = (Stage) btnLogout.getScene().getWindow();\r\n        stage.close();\r\n\r\n        // Open sign-in window\r\n        Stage primaryStage = new Stage();\r\n        primaryStage.setTitle(\"SecondChance\");\r\n        Utility.changePage(primaryStage, \"SignIn\");\r\n    }\r\n\r\n    public void showReviews() {\r\n        System.out.println(\"SCROLL OUT REVIEWS: \" + scrollPage);\r\n        for (int i = 0; i < nPage && scrollPage < listReviews.size(); i++) {\r\n            System.out.println(\"SCROLL IN REVIEWS: \" + scrollPage + \"i: \" + i);\r\n            addReviews();\r\n        }\r\n    }\r\n\r\n    private void addReviews() {\r\n\r\n        Label user = new Label(\"User: \" + listReviews.get(scrollPage).getString(\"reviewer\"));\r\n        user.setTextFill(Color.WHITE);\r\n        Utility.printTerminal(listReviews.toString());\r\n\r\n        Label text = new Label(listReviews.get(scrollPage).getString(\"text\"));\r\n        text.setTextFill(Color.WHITE);\r\n        Label title = new Label(\"Title: \" + listReviews.get(scrollPage).getString(\"title\"));\r\n        title.setTextFill(Color.WHITE);\r\n        Label rating = new Label(\"Rating: \" + listReviews.get(scrollPage).getInteger(\"rating\"));\r\n        rating.setTextFill(Color.WHITE);\r\n        text.setWrapText(true);\r\n\r\n        VBox feed = new VBox(user, text, title, rating);\r\n        feed.setStyle(\"-fx-background-color: white; -fx-padding: 8\");\r\n        feed.setSpacing(10);\r\n        feed.setPadding(new Insets(5, 5, 5, 5));\r\n        feed.setPrefHeight(100);\r\n        feed.setPrefWidth(300);\r\n        feed.setAlignment(Pos.CENTER);\r\n\r\n        String cssLayout =\r\n                \"-fx-border-color: rgb(102, 153, 255);\\n\" +\r\n                        \"-fx-background-color: rgb(230, 179, 255);\\n\" +\r\n                        \"-fx-background-radius: 50;\\n\" +\r\n                        \"-fx-border-radius: 50;\\n\";\r\n        feed.setStyle(cssLayout);\r\n\r\n        reviewsBox.getChildren().add(feed);\r\n\r\n        scrollPage++;\r\n    }\r\n\r\n    public void prevReviews() {\r\n        reviewsBox.getChildren().clear();\r\n        scrollPage = Utility.prevPageReviews(scrollPage, nPage, prevReviews);\r\n\r\n        if (scrollPage == 0) {\r\n            nextReviews.setDisable(false);\r\n            nextReviews.setVisible(true);\r\n        }\r\n\r\n        showReviews();\r\n    }\r\n\r\n    public void nextReviews() {\r\n        reviewsBox.getChildren().clear();\r\n        Utility.nextPage(scrollPage + nPage, (ArrayList<Document>) listReviews, nextReviews, prevReviews);\r\n\r\n        if (scrollPage == listReviews.size() - 1) {\r\n            nextReviews.setVisible(false);\r\n            nextReviews.setDisable(true);\r\n        }\r\n\r\n        showReviews();\r\n    }\r\n\r\n    public void showAddImgProfile() throws FileNotFoundException {\r\n\r\n        try (FileInputStream imageStream = new FileInputStream(\"target/classes/img/secondchance.png\")) {\r\n\r\n            Image image = new Image(imageStream);\r\n            FXMLLoader loader = new FXMLLoader();\r\n            loader.setLocation(SearchInsertionController.class.getResource(\"/FXML/UpdateProfileImage.fxml\"));\r\n            Stage stage = new Stage(StageStyle.DECORATED);\r\n            stage.getIcons().add(image);\r\n            stage.setTitle(\"Update Profile Image\");\r\n            stage.setScene(new Scene(loader.load()));\r\n            AddProfileImageController controller = loader.getController();\r\n            controller.initialize();\r\n            stage.show();\r\n\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/it/unipi/dii/largescale/secondchance/controller/ProfileController.java b/src/main/java/it/unipi/dii/largescale/secondchance/controller/ProfileController.java
---- a/src/main/java/it/unipi/dii/largescale/secondchance/controller/ProfileController.java	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ b/src/main/java/it/unipi/dii/largescale/secondchance/controller/ProfileController.java	(date 1643927425064)
-@@ -159,7 +159,9 @@
-         updateUserBalance();
-         following = ConnectionNeo4jDB.connNeo.retrieveFollowingByUser(user.getUsername());
-         follower = ConnectionNeo4jDB.connNeo.retrieveFollowersByUser(user.getUsername());
--        listReviews = ConnectionMongoDB.connMongo.getReviewsByUser(user.getUsername());
-+        //listReviews = ConnectionMongoDB.connMongo.getReviewsByUser(user.getUsername());
-+        listReviews = user.getReviews();
-+
-         if (listReviews.size() < 3) {
-             System.out.println("Reviews nulle, disattivo i bottoni");
-             nextReviews.setDisable(true);
-@@ -173,7 +175,7 @@
-         Label label = new Label("Change image!");
-         label.setVisible(false);
- 
--        if (user.getImage().equals("image.png")) {
-+        if (user.getImage().equals("user.png")) {
- 
-             System.out.println("HERE!!");
- 
-@@ -213,78 +215,6 @@
-             }
-         });
-     }
--
--    public void setProfile(String us){
--
--        prevReviews.setDisable(true);
--        prevReviews.setVisible(false);
--
--        reviewsBox = new HBox();
--        reviewsBox.setSpacing(100);
--        review.setCenter(reviewsBox);
--
--        scrollPage = 0;
--        scrollPage2 = 0;
--
--        userInfo.getChildren().clear();
--
--        String rate = (Double.isNaN(user.getRating()))? "No reviews" : Double.toString(user.getRating());
--
--        Label username = new Label(user.getUsername());
--        Label name = new Label(user.getName());
--        Label email = new Label(user.getEmail());
--        Label country = new Label(user.getCountry());
--        Label city = new Label(user.getCity());
--        Label address = new Label(user.getAddress());
--        Label rating = new Label(rate);
--        Label usernameText = new Label("Username:");
--        Label nameText = new Label("Name:");
--        Label emailText = new Label("Email:");
--        Label countryText = new Label("Country:");
--        Label cityText = new Label("City:");
--        Label addressText = new Label("Address:");
--        Label ratingText = new Label("Rating:");
--
--        System.out.println(username + " " + name +  " " + email +  " " + country +  " " + city +  " " + address);
--
--        userInfo.add(usernameText, 0, 0);
--        userInfo.add(nameText, 0, 1);
--        userInfo.add(emailText, 0, 2);
--        userInfo.add(countryText, 0, 3);
--        userInfo.add(cityText, 0, 4);
--        userInfo.add(addressText, 0, 5);
--        userInfo.add(ratingText, 0, 6);
--
--        userInfo.add(username, 1,0);
--        userInfo.add(name, 1, 1);
--        userInfo.add(email, 1, 2);
--        userInfo.add(country, 1, 3);
--        userInfo.add(city, 1, 4);
--        userInfo.add(address, 1, 5);
--        userInfo.add(rating, 1, 6);
--
--        updateUserBalance();
--
--        following = ConnectionNeo4jDB.connNeo.retrieveFollowingByUser(us);
--        follower = ConnectionNeo4jDB.connNeo.retrieveFollowersByUser(us);
--        System.out.println("Abdelhakam: " + user.getUsername());
--        listReviews = ConnectionMongoDB.connMongo.getReviewsByUser(user.getUsername());
--
--        if (listReviews.size() < 3) {
--            System.out.println("Reviews nulle, disattivo i bottoni");
--            nextReviews.setDisable(true);
--            nextReviews.setVisible(false);
--        }
--        showReviews();
--    }
--
--    public void getReviews() {
--
--        listReviews = ConnectionMongoDB.connMongo.getReviewsByUser(user.getUsername());
--
--        System.out.println(listReviews.get(0));
--    }
--
-     /* ********** FOLLOWERS/ING STATS SECTION ********** */
- 
-     public void showUserFollowers() {
-Index: src/main/java/it/unipi/dii/largescale/secondchance/connection/ConnectionMongoDB.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package main.java.it.unipi.dii.largescale.secondchance.connection;\r\n\r\nimport com.mongodb.BasicDBObject;\r\nimport com.mongodb.ConnectionString;\r\nimport com.mongodb.MongoException;\r\nimport com.mongodb.client.*;\r\nimport com.mongodb.client.model.*;\r\nimport com.mongodb.client.result.DeleteResult;\r\nimport com.mongodb.client.result.UpdateResult;\r\nimport main.java.it.unipi.dii.largescale.secondchance.entity.Insertion;\r\nimport main.java.it.unipi.dii.largescale.secondchance.entity.Review;\r\nimport main.java.it.unipi.dii.largescale.secondchance.entity.User;\r\nimport main.java.it.unipi.dii.largescale.secondchance.utils.Utility;\r\nimport org.bson.Document;\r\nimport org.bson.conversions.Bson;\r\nimport org.bson.types.ObjectId;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.*;\r\nimport java.util.function.Consumer;\r\n\r\nimport static com.mongodb.client.model.Aggregates.*;\r\nimport static com.mongodb.client.model.Filters.*;\r\nimport static com.mongodb.client.model.Projections.*;\r\nimport static com.mongodb.client.model.Sorts.descending;\r\nimport static com.mongodb.client.model.Updates.inc;\r\nimport static com.mongodb.client.model.Updates.set;\r\n\r\npublic class ConnectionMongoDB{\r\n\r\n    public static ConnectionMongoDB connMongo;\r\n    private MongoClient mongoClient;\r\n    private MongoDatabase db;\r\n    MongoCursor<Document> cursor;\r\n\r\n    MongoCollection<Document> userColl;\r\n    MongoCollection<Document> orderColl;\r\n    MongoCollection<Document> insertionColl;\r\n    MongoCollection<Document> adminColl;\r\n\r\n    /* ********* CONNECTION SECTION ********* */\r\n\r\n    public void openConnection() {\r\n\r\n        // LOCAL DATABASE WITHOUT REPLICAS\r\n        ConnectionString uri = new ConnectionString(\"mongodb://localhost:27017\");\r\n        mongoClient = MongoClients.create(uri);\r\n        db = mongoClient.getDatabase(\"local\");\r\n\r\n        userColl = db.getCollection(\"user\");\r\n        orderColl = db.getCollection(\"order\");\r\n        insertionColl = db.getCollection(\"insertion\");\r\n        adminColl = db.getCollection(\"admin\");\r\n\r\n/*\r\n        mongoClient = MongoClients.create(\r\n                \"mongodb://172.16.4.114:27020,172.16.4.115:27020,172.16.4.116:27020/\" +\r\n                        \"?retryWrites=true&w=majority&wtimeout=10000\");\r\n\r\n        // Read Preferences at DB level\r\n        db = mongoClient.getDatabase(\"lsmdb\")\r\n                .withReadPreference(ReadPreference.secondary());\r\n\r\n        // Read Preferences at collection level\r\n        userColl = db.getCollection(\"user\")\r\n                .withReadPreference(ReadPreference.secondary());\r\n\r\n        insertionColl = db.getCollection(\"insertion\")\r\n                .withReadPreference(ReadPreference.secondary());\r\n\r\n        orderColl = db.getCollection(\"order\")\r\n                .withReadPreference(ReadPreference.secondary());\r\n\r\n        adminColl = db.getCollection(\"admin\")\r\n                .withReadPreference(ReadPreference.secondary());\r\n\r\n        // Write concern at DB level\r\n        db = mongoClient.getDatabase(\"lsmdb\")\r\n                .withWriteConcern(WriteConcern.W1);\r\n\r\n        System.out.println(\"**************** USER ******************\");\r\n        System.out.println(userColl.countDocuments());\r\n        System.out.println(\"**************** ORDER ******************\");\r\n        System.out.println(orderColl.countDocuments());\r\n        System.out.println(\"**************** INSERTION ******************\");\r\n        System.out.println(insertionColl.countDocuments());\r\n        System.out.println(\"**************** ADMIN ******************\");\r\n        System.out.println(adminColl.countDocuments());\r\n\r\n        // 2 - Find the first document\r\n        userColl.find().limit(1).forEach(printDocuments());\r\n*/\r\n    }\r\n\r\n    public void closeConnection() {\r\n        mongoClient.close();\r\n    }\r\n\r\n    /* ********* USER SECTION ********* */\r\n\r\n    public boolean registerUser(User u) {\r\n\r\n        if (userAlreadyPresent(u.getUsername(), u.getPassword())) {\r\n            Utility.infoBox(\"Please, choose another username and try again.\", \"Error\", \"Username already used!\");\r\n            return false;\r\n        }\r\n\r\n        Document user = new Document(\"address\", u.getAddress())\r\n                .append(\"balance\", u.getBalance())\r\n                .append(\"city\", u.getCity())\r\n                .append(\"country\", u.getCountry())\r\n                .append(\"email\", u.getEmail())\r\n                .append(\"img_profile\", u.getImage())\r\n                .append(\"name\", u.getName())\r\n                .append(\"password\", u.getPassword())\r\n                .append(\"suspended\", u.getSuspended())\r\n                .append(\"username\", u.getUsername())\r\n                .append(\"reviews\", null)\r\n                .append(\"sold\", null)\r\n                .append(\"purchased\", null);\r\n\r\n        userColl.insertOne(user);\r\n\r\n        return true;\r\n    }\r\n\r\n    private static Consumer<Document> printDocuments() {\r\n        return doc -> System.out.println(doc.toJson());\r\n    }\r\n\r\n    public Document findUserByUsername(String username) {\r\n\r\n        cursor = userColl.find(eq(\"username\", username)).iterator();\r\n\r\n        if (cursor.hasNext())\r\n            return cursor.next();\r\n\r\n        Utility.infoBox(\"There is no user with this username.\", \"Error\", \"Username not found!\");\r\n        return null;\r\n\r\n    }\r\n\r\n    public boolean userAlreadyPresent(String username, String password) {\r\n\r\n        cursor = userColl.find(eq(\"username\", username)).iterator();\r\n\r\n        return cursor.hasNext();\r\n    }\r\n\r\n    public User findUserDetails(String username) {\r\n\r\n        User logUser = new User();\r\n        Document user = userColl.find(eq(\"username\", username)).first();\r\n        logUser.setUsername(user.getString(\"username\"));\r\n        logUser.setName(user.getString(\"name\"));\r\n        logUser.setEmail(user.getString(\"email\"));\r\n        logUser.setAddress(user.getString(\"address\"));\r\n        logUser.setCity(user.getString(\"city\"));\r\n        logUser.setCountry(user.getString(\"country\"));\r\n        logUser.setSuspended(user.getBoolean(\"suspended\"));\r\n        logUser.setBalance(user.getDouble(\"balance\"));\r\n        logUser.setImage(user.getString(\"img_profile\"));\r\n        logUser.setRating(user.getDouble(\"rating\"));\r\n        logUser.setReviews((ArrayList<Document>) user.get(\"reviews\"));\r\n        logUser.setSold((ArrayList<Document>) user.get(\"sold\"));\r\n        logUser.setSold((ArrayList<Document>) user.get(\"purchased\"));\r\n\r\n        return logUser;\r\n    }\r\n\r\n    public ArrayList<Document> followedUserInsertions(ArrayList<String> usList) {\r\n\r\n        ArrayList<Document> insertions = new ArrayList<>();\r\n\r\n        for (String s : usList) {\r\n            Document d = insertionColl.find(eq(\"_id\", new ObjectId(s))).first();\r\n            insertions.add(d);\r\n        }\r\n\r\n        return insertions;\r\n    }\r\n\r\n    public ArrayList<Document> findViralInsertions(int k) {\r\n\r\n        ArrayList<Document> insertions = new ArrayList<>();\r\n        Bson sort = sort(descending(\"interested\"));\r\n        Bson limit = limit(k);\r\n\r\n        AggregateIterable<Document> r = insertionColl.aggregate(Arrays.asList(sort ,limit));\r\n\r\n        for (Document document : r)\r\n        {\r\n            insertions.add(document);\r\n        }\r\n        return insertions;\r\n    }\r\n\r\n    public ArrayList<Document> findUserByFilters(String country, String rating) {\r\n\r\n        ArrayList<Document> users = new ArrayList<>();\r\n        double r ;\r\n        double lowerBound = 0;\r\n        double upperBound = 0;\r\n\r\n        if(!rating.equals(\"rating\")){\r\n            r = Double.parseDouble(rating);\r\n            lowerBound = r-0.5;\r\n            upperBound = r+0.5;\r\n        }\r\n\r\n        if(country.equals(\"country\") && !rating.equals(\"rating\"))\r\n        {\r\n            cursor  = userColl.find(and(lte(\"rating\", upperBound), gt(\"rating\", lowerBound))).iterator();\r\n        }\r\n        else if(!country.equals(\"country\") && rating.equals(\"rating\"))\r\n        {\r\n             cursor  = userColl.find(eq(\"country\", country)).iterator();\r\n        }\r\n        else{\r\n             cursor  = userColl.find(and(eq(\"country\", country), lte(\"rating\", upperBound), gt(\"rating\", lowerBound))).iterator();\r\n        }\r\n\r\n        while(cursor.hasNext())\r\n        {\r\n            users.add(cursor.next());\r\n        }\r\n\r\n        return users;\r\n\r\n    }\r\n\r\n        /* ********* INSERTION SECTION ********* */\r\n\r\n    public ArrayList<Document> findInsertionByFilters(String size, String price, String gender, String status, String category, String color) {\r\n\r\n        ArrayList<Document> insertions = new ArrayList<>();\r\n        List<Bson> filters = new ArrayList<>();\r\n\r\n        if(!size.equals(\"size\")) {\r\n            filters.add(Filters.eq(\"size\", size));\r\n        }\r\n        if(!price.equals(\"price\")) {\r\n            String[] range = price.split(\"-\");\r\n            if(range.length == 1) {\r\n                filters.add(Filters.gte(\"price\", Double.parseDouble(range[0])));\r\n            } else {\r\n                filters.add(Filters.gte(\"price\", Double.parseDouble(range[0])));\r\n                filters.add(Filters.lte(\"price\", Double.parseDouble(range[1])));\r\n            }\r\n        }\r\n        if(!gender.equals(\"gender\")) {\r\n            filters.add(Filters.eq(\"gender\", gender));\r\n        }\r\n        if(!status.equals(\"status\")) {\r\n            filters.add(Filters.eq(\"status\", status));\r\n        }\r\n        if(!category.equals(\"category\")) {\r\n            filters.add(Filters.eq(\"category\", category));\r\n        }\r\n        if(!color.equals(\"color\")) {\r\n            filters.add(Filters.eq(\"color\", color));\r\n        }\r\n\r\n        cursor = insertionColl.find(Filters.and(filters)).iterator();\r\n        while(cursor.hasNext())\r\n            insertions.add(cursor.next());\r\n\r\n        return insertions;\r\n    }\r\n\r\n    public ArrayList<Document> findInsertionBySeller(String seller) {\r\n\r\n        ArrayList<Document> insertions = new ArrayList<>();\r\n\r\n        cursor = insertionColl.find(eq(\"seller\", seller)).iterator();\r\n        while (cursor.hasNext())\r\n            insertions.add(cursor.next());\r\n\r\n        return insertions;\r\n    }\r\n\r\n    public ArrayList<Document> findInsertionByBrand(String brand) {\r\n\r\n        ArrayList<Document> insertions = new ArrayList<>();\r\n\r\n        cursor = insertionColl.find(eq(\"brand\", brand)).iterator();\r\n        while (cursor.hasNext())\r\n            insertions.add(cursor.next());\r\n\r\n        return insertions;\r\n    }\r\n\r\n    public Insertion findInsertion(String insertion_id) {\r\n\r\n        Insertion insertion = new Insertion();\r\n        Document insertion_found = insertionColl.find(eq(\"_id\", new ObjectId(insertion_id))).first();\r\n\r\n        insertion.setId(insertion_found.get(\"_id\").toString());\r\n        insertion.setBrand(insertion_found.getString(\"brand\"));\r\n        insertion.setCountry(insertion_found.getString(\"country\"));\r\n        insertion.setCategory(insertion_found.getString(\"category\"));\r\n        insertion.setColor(insertion_found.getString(\"color\"));\r\n        insertion.setDescription(insertion_found.getString(\"description\"));\r\n        insertion.setGender(insertion_found.getString(\"gender\"));\r\n        insertion.setImage_url(insertion_found.getString(\"image_url\"));\r\n        insertion.setInterested(insertion_found.getInteger(\"interested\"));\r\n        insertion.setPrice(insertion_found.getDouble(\"price\"));\r\n        insertion.setViews(insertion_found.getInteger(\"views\"));\r\n        insertion.setSeller(insertion_found.getString(\"seller\"));\r\n        insertion.setSize(insertion_found.getString(\"size\"));\r\n        insertion.setStatus(insertion_found.getString(\"status\"));\r\n        insertion.setTimestamp(insertion_found.getString(\"timestamp\"));\r\n\r\n        return insertion;\r\n\r\n    }\r\n\r\n    public boolean buyCurrentInsertion(String username, Insertion insertion){\r\n\r\n        ClientSession clientSession = mongoClient.startSession();\r\n\r\n        SimpleDateFormat date = new SimpleDateFormat(\"yy-MM-dd HH:mm:ss\");\r\n        String timestamp = date.format(new Date());\r\n\r\n        TransactionBody<String> txnFunc = () -> {\r\n\r\n            Document balance = db.getCollection(\"user\").find(eq(\"username\", username)).first();\r\n            double balanceBuyer = balance.getDouble(\"balance\") - insertion.getPrice();\r\n\r\n            Bson filter = and(eq(\"username\", username), gte(\"balance\", insertion.getPrice()));\r\n            Bson update = set(\"balance\", balanceBuyer);\r\n\r\n            //update buyer balance\r\n            Document ret = db.getCollection(\"user\").findOneAndUpdate(filter, update);\r\n\r\n            if (ret == null) {\r\n                Utility.infoBox(\"Cannot purchase, not enough balance\", \"Error\", \"Error purchase\");\r\n                return \"Buyer has not enough balance\";\r\n            }\r\n\r\n            //update seller balance\r\n            Bson filter2 = eq(\"username\", insertion.getSeller());\r\n            Bson update2 = inc(\"balance\", insertion.getPrice());\r\n\r\n            Document ret3 = db.getCollection(\"user\").findOneAndUpdate(filter2, update2);\r\n\r\n            if (ret3 == null) {\r\n                Utility.infoBox(\"Cannot buy product\", \"Error\", \"Error purchase\");\r\n                return \"Cannot increment seller balance\";\r\n            }\r\n            //order purchased\r\n            Document purchased = new Document()\r\n                    .append(\"_id\", new ObjectId())\r\n                    .append(\"timestamp\", timestamp)\r\n                    .append(\"user\", insertion.getSeller())\r\n                    .append(\"reviewed\", false)\r\n                    .append(\"insertion\", new Document(\"image\", insertion.getImage_url()).\r\n                            append(\"price\", insertion.getPrice()).\r\n                            append(\"size\", insertion.getSize()).\r\n                            append(\"status\", insertion.getStatus()).\r\n                            append(\"category\", insertion.getCategory()));\r\n\r\n            //order sold\r\n            Document sold = new Document()\r\n                    .append(\"_id\", new ObjectId())\r\n                    .append(\"timestamp\", timestamp)\r\n                    .append(\"user\", username)\r\n                    .append(\"reviewed\", false)\r\n                    .append(\"insertion\", new Document(\"image\", insertion.getImage_url()).\r\n                            append(\"price\", insertion.getPrice()).\r\n                            append(\"size\", insertion.getSize()).\r\n                            append(\"status\", insertion.getStatus()).\r\n                            append(\"category\", insertion.getCategory()));\r\n\r\n\r\n            Bson filter_purchased = eq(\"username\", username);\r\n\r\n            Bson filter_sold = eq(\"username\", insertion.getSeller());\r\n\r\n            BasicDBObject update_purchased = new BasicDBObject(\"$push\", new BasicDBObject(\"purchased\", purchased));\r\n\r\n            BasicDBObject update_sold = new BasicDBObject(\"$push\", new BasicDBObject(\"sold\", sold));\r\n\r\n            //insert new document into order collection\r\n            try {\r\n                userColl.findOneAndUpdate(filter_purchased, update_purchased);\r\n                userColl.findOneAndUpdate(filter_sold, update_sold);\r\n\r\n            } catch (MongoException me) {\r\n                System.err.println(\"Unable to insert due to an error: \" + me);\r\n            }\r\n\r\n            db.getCollection(\"insertion\").deleteOne(new Document(\"image_url\", insertion.getImage_url()).append(\"seller\", insertion.getSeller()));\r\n            return \"OK\";\r\n        };\r\n        return executeTransaction(clientSession, txnFunc);\r\n    }\r\n\r\n    public boolean deleteBuyInsertion(String username, Insertion insertion) {\r\n\r\n        ClientSession clientSession = mongoClient.startSession();\r\n\r\n        TransactionBody<String> txnFunc = () -> {\r\n\r\n            Bson filter = and(eq(\"username\", username), gte(\"balance\", insertion.getPrice()));\r\n            Bson update = inc(\"balance\", insertion.getPrice());\r\n\r\n            //update buyer balance\r\n            Document ret = userColl.findOneAndUpdate(filter, update);\r\n\r\n            //update seller balance\r\n            Bson filter2 = eq(\"username\", insertion.getSeller());\r\n            Bson update2 = inc(\"balance\", -(insertion.getPrice()));\r\n\r\n            Document ret3 = userColl.findOneAndUpdate(filter2, update2);\r\n\r\n            insertionColl.insertOne(Insertion.toDocument(insertion));\r\n\r\n            return \"OK\";\r\n\r\n        };\r\n        return executeTransaction(clientSession, txnFunc);\r\n\r\n    }\r\n\r\n    private boolean executeTransaction(ClientSession clientSession, TransactionBody<String> txnFunc) {\r\n\r\n        String message = \"\";\r\n\r\n        message = clientSession.withTransaction(txnFunc);\r\n\r\n        System.out.println(message);\r\n\r\n        return message.equals(\"OK\");\r\n    }\r\n\r\n    public boolean updateNumInterested(String insertion_id, int i) {\r\n\r\n        Bson filter = eq(\"_id\", new ObjectId(insertion_id));\r\n        Bson update = inc(\"interested\", i);\r\n        try {\r\n            db.getCollection(\"insertion\").findOneAndUpdate(filter, update);\r\n            return true;\r\n        }catch(MongoException me){\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public void updateNumView(String uniq_id) {\r\n\r\n        Bson filter = eq(\"_id\", new ObjectId(uniq_id));\r\n        Bson update = inc(\"views\", 1);\r\n\r\n        db.getCollection(\"insertion\").findOneAndUpdate(filter, update);\r\n\r\n    }\r\n\r\n    /* ********* ADMIN SECTION ********* */\r\n\r\n    public Document verifyUserInDB(String username, boolean choice) {\r\n\r\n        Document user;\r\n\r\n        if (choice)\r\n            user = userColl.find(eq(\"username\", username)).first();\r\n        else\r\n            user = userColl.find(eq(\"name\", username)).first();\r\n\r\n        return user;\r\n    }\r\n\r\n    public Document verifyInsertionInDB(String id, boolean choice) {\r\n\r\n        Document insertion;\r\n\r\n        if (choice)\r\n            insertion = insertionColl.find(eq(\"_id\", new ObjectId(id))).first();\r\n         else\r\n            insertion = insertionColl.find(eq(\"seller\", id)).first();\r\n\r\n        return insertion;\r\n    }\r\n\r\n    public ArrayList<Document> findMostActiveUsersSellers(int k, boolean choice) {\r\n        // true = select the top k most active users\r\n        // false = select the top k most active sellers\r\n\r\n        ArrayList<Document> array = new ArrayList<>();\r\n        MongoCollection<Document> myColl;\r\n\r\n        if (choice)\r\n            myColl = insertionColl;\r\n        else\r\n            myColl = orderColl;\r\n\r\n        Bson limit = limit(k);\r\n\r\n        if (!choice) { //most sold orders\r\n            System.out.println(\"Sezione orders\");\r\n            Bson project = project(fields(excludeId(), include(\"count\"), computed(\"seller\", \"$_id\")));\r\n            AggregateIterable<Document> aggr = myColl.aggregate(\r\n                    Arrays.asList(\r\n                            Aggregates.group(\"$insertion.seller\",\r\n                                    Accumulators.sum(\"count\", 1)),\r\n                            project,\r\n                            Aggregates.sort(descending(\"count\")),\r\n                            limit\r\n                    )\r\n            );\r\n\r\n            for (Document document : aggr) {\r\n                System.out.println(\"DOCUMENT:\" + document);\r\n                array.add(document);\r\n            }\r\n        } else { //most insertions published\r\n            System.out.println(\"Sezione insertions\");\r\n            Bson project = project(fields(excludeId(), include(\"count\"), computed(\"seller\", \"$_id\")));\r\n            AggregateIterable<Document> aggr = myColl.aggregate(\r\n                    Arrays.asList(\r\n                            Aggregates.group(\"$seller\",\r\n                                    Accumulators.sum(\"count\", 1)),\r\n                            project,\r\n                            Aggregates.sort(descending(\"count\")),\r\n                            limit\r\n                    )\r\n            );\r\n\r\n            for (Document document : aggr) {\r\n                System.out.println(document);\r\n                array.add(document);\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n\r\n    public ArrayList<Document> findTopKRatedUser(int k, String country) {\r\n\r\n        ArrayList<Document> array = new ArrayList<>();\r\n\r\n        Bson limit = limit(k);\r\n        Bson project = project(fields(excludeId(), include(\"username\"), include(\"rating\")));\r\n        AggregateIterable<Document> aggr  = userColl.aggregate(\r\n                Arrays.asList(\r\n                        Aggregates.match(Filters.eq(\"country\", country)),\r\n                        Aggregates.sort(descending(\"rating\")),\r\n                        project,\r\n                        limit\r\n                )\r\n        );\r\n\r\n        for (Document document : aggr) {\r\n\r\n            //document.append(\"name\", document.getString(\"name\"));\r\n            //document.append(\"rating\", document.getDouble(\"rating\"));\r\n            array.add(document);\r\n        }\r\n        return array;\r\n    }\r\n\r\n    public ArrayList<Document> findTopKInterestingInsertion(int k, String category) {\r\n\r\n        ArrayList<Document> array = new ArrayList<>();\r\n\r\n        Bson limit = limit(k);\r\n        AggregateIterable<Document> aggr  = insertionColl.aggregate(\r\n                Arrays.asList(\r\n                        Aggregates.match(Filters.eq(\"category\", category)),\r\n                        Aggregates.sort(descending(\"interested\")),\r\n                        limit\r\n                )\r\n        );\r\n\r\n        for (Document document : aggr)\r\n            array.add(document);\r\n\r\n        return array;\r\n    }\r\n\r\n    public ArrayList<Document> findTopKViewedInsertion(int k, String category) {\r\n\r\n        ArrayList<Document> array = new ArrayList<>();\r\n\r\n        Bson limit = limit(k);\r\n        AggregateIterable<Document> aggr  = insertionColl.aggregate(\r\n                Arrays.asList(\r\n                        Aggregates.match(Filters.eq(\"category\", category)),\r\n                        Aggregates.sort(descending(\"viewed\")),\r\n                        limit\r\n                )\r\n        );\r\n\r\n        for (Document document : aggr)\r\n            array.add(document);\r\n\r\n        return array;\r\n    }\r\n\r\n    public void suspendUser(String username) {\r\n\r\n        Document query = new Document().append(\"username\",  username);\r\n        Bson updates = Updates.combine(\r\n                Updates.set(\"suspended\", \"Y\"));\r\n                UpdateOptions options = new UpdateOptions().upsert(true);\r\n\r\n        try {\r\n            UpdateResult result = userColl.updateOne(query, updates, options);\r\n            System.out.println(\"Modified document count: \" + result.getModifiedCount());\r\n            System.out.println(\"Upserted id: \" + result.getUpsertedId()); // only contains a value when an upsert is performed\r\n        }catch (MongoException me) {\r\n            System.err.println(\"Unable to update due to an error: \" + me);\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    public void unsuspendUser(String username) {\r\n\r\n        Document query = new Document().append(\"username\",  username);\r\n\r\n        Bson updates = Updates.combine(\r\n                Updates.set(\"suspended\", \"N\"));\r\n                UpdateOptions options = new UpdateOptions().upsert(true);\r\n\r\n        try {\r\n            UpdateResult result = userColl.updateOne(query, updates, options);\r\n            System.out.println(\"Modified document count: \" + result.getModifiedCount());\r\n            System.out.println(\"Upserted id: \" + result.getUpsertedId()); // only contains a value when an upsert is performed\r\n        } catch (MongoException me) {\r\n            System.err.println(\"Unable to update due to an error: \" + me);\r\n        }\r\n    }\r\n\r\n    public Insertion findInsertionDetails(String id) {\r\n\r\n        Insertion ins = new Insertion();\r\n        Document insertion = insertionColl.find(eq(\"_id\", new ObjectId(id))).first();\r\n\r\n        ins.setCategory(insertion.getString(\"category\"));\r\n        ins.setPrice(insertion.getDouble(\"price\"));\r\n        ins.setViews(insertion.getInteger(\"views\"));\r\n\r\n        return ins;\r\n    }\r\n\r\n    public ArrayList<Insertion> findMultipleInsertionDetails(String seller) {\r\n\r\n        ArrayList<Insertion> array = new ArrayList<>();\r\n\r\n        AggregateIterable<Document> aggr  = insertionColl.aggregate(\r\n                Arrays.asList(\r\n                        Aggregates.match(Filters.eq(\"seller\", seller))\r\n                )\r\n        );\r\n\r\n        for (Document document : aggr) {\r\n            Insertion ins = new Insertion();\r\n            ins.setCategory(document.getString(\"category\"));\r\n            ins.setPrice(document.getDouble(\"price\"));\r\n            ins.setViews(document.getInteger(\"views\"));\r\n            ins.setId(document.get(\"uniq_id\").toString());\r\n            ins.setImage_url(document.getString(\"image_url\"));\r\n            array.add(ins);\r\n        }\r\n        return array;\r\n    }\r\n\r\n    public ArrayList<Insertion> findInsertionDetailsNeo4J(ArrayList<String> followed_ins)  {\r\n\r\n        Insertion ins;\r\n        ArrayList<Insertion> insertions = new ArrayList<Insertion>();\r\n\r\n        for (String followed_in : followed_ins) {\r\n            Document insertion = insertionColl.find(eq(\"_id\", new ObjectId(followed_in))).first();\r\n\r\n            ins = new Insertion();\r\n            ins.setCategory(insertion.getString(\"category\"));\r\n            ins.setPrice(insertion.getDouble(\"price\"));\r\n            ins.setImage_url(insertion.getString(\"image_url\"));\r\n            ins.setViews(insertion.getInteger(\"views\"));\r\n            ins.setSeller(insertion.getString(\"seller\"));\r\n            ins.setId(insertion.get(\"_id\").toString());\r\n\r\n            insertions.add(ins);\r\n        }\r\n        return insertions;\r\n    }\r\n\r\n    public boolean findByInsertionId (String id) {\r\n\r\n        cursor = insertionColl.find(eq(\"_id\", new ObjectId(id))).iterator();\r\n        return cursor.hasNext();\r\n    }\r\n\r\n    public boolean addInsertion(Insertion i) {\r\n\r\n        Document ins = Insertion.toDocument(i);\r\n        insertionColl.insertOne(ins);\r\n        return true;\r\n\r\n    }\r\n\r\n    public ArrayList<Document> findAllOrders(Boolean choice, String username) {\r\n\r\n        AggregateIterable<Document> aggr;\r\n\r\n        if(choice) {\r\n             aggr = orderColl.aggregate(\r\n                    Arrays.asList(\r\n                            Aggregates.match(Filters.eq(\"buyer\", username)),\r\n                            Aggregates.sort(Sorts.descending(\"timestamp\"))\r\n                    )\r\n            );\r\n        } //cursor = orderColl.find(eq(\"buyer\", username)).iterator();\r\n        else\r\n        {\r\n            aggr = orderColl.aggregate(\r\n                    Arrays.asList(\r\n                            Aggregates.match(Filters.eq(\"insertion.seller\", username)),\r\n                            Aggregates.sort(Sorts.descending(\"timestamp\"))\r\n                    )\r\n            );\r\n        }//cursor = orderColl.find(eq(\"insertion.seller\", username)).iterator();\r\n\r\n        ArrayList<Document> find_orders = new ArrayList<>();\r\n\r\n        for (Document document : aggr)\r\n        {\r\n            find_orders.add(document);\r\n        }\r\n        return find_orders;\r\n    }\r\n\r\n    public void addReview(Review rev) {\r\n\r\n        Document review = new Document()\r\n                .append(\"timestamp\", rev.getTimestamp())\r\n                .append(\"reviewer\", rev.getReviewer())\r\n                .append(\"title\", rev.getTitle())\r\n                .append(\"text\", rev.getText())\r\n                .append(\"rating\", rev.getRating());\r\n\r\n        System.out.println(\"REVIEW: \" + review);\r\n        BasicDBObject query = new BasicDBObject();\r\n        query.put(\"username\",rev.getSeller());\r\n\r\n        BasicDBObject push_data = new BasicDBObject(\"$push\", new BasicDBObject(\"reviews\", review));\r\n\r\n        userColl.findOneAndUpdate(query, push_data);\r\n    }\r\n\r\n    public void updateSellerRating(String seller) {\r\n\r\n        Document d = userColl.find(eq(\"username\", seller)).first();\r\n        List<Document> list;\r\n        list = d.getList(\"reviews\", Document.class);\r\n\r\n        Double avg;\r\n        int sum = 0;\r\n\r\n        for (Document document : list) {\r\n            sum += document.getInteger(\"rating\");\r\n        }\r\n\r\n        avg = (double) sum / (double) list.size();\r\n\r\n        BasicDBObject newDocument = new BasicDBObject();\r\n        newDocument.put(\"rating\", avg);\r\n        // {$set: {\"rating\": avg}}\r\n        BasicDBObject updateObject = new BasicDBObject();\r\n        updateObject.put(\"$set\", newDocument);\r\n        // condition (where field \"reviews\" exists)\r\n        BasicDBObject query = new BasicDBObject();\r\n        query.put(\"username\", d.getString(\"username\"));\r\n\r\n        userColl.updateOne(query, updateObject);\r\n    }\r\n\r\n    public void updateOrder(String timestamp) {\r\n\r\n        BasicDBObject query = new BasicDBObject();\r\n        query.put(\"timestamp\", timestamp);\r\n\r\n        BasicDBObject set = new BasicDBObject(\"$set\", new BasicDBObject(\"reviewed\", true));\r\n        orderColl.findOneAndUpdate(query, set);\r\n    }\r\n\r\n    /* ********** BALANCE SECTION ********** */\r\n\r\n    public void addFundsToWallet(String username, String id_code) {\r\n\r\n        Document code = adminColl.find(eq(\"code\", id_code)).first();\r\n\r\n        if (code == null || Objects.equals(code.getString(\"assigned\"), \"T\")) {\r\n            Utility.infoBox(\"The code that you have inserted is not valid.\", \"Error\", \"Code doesn't exist!\");\r\n            return;\r\n        }\r\n\r\n        double credit = code.getInteger(\"credit\");\r\n\r\n        Document queryUser = new Document().append(\"username\",  username);\r\n        Document queryAdmin = new Document().append(\"code\",  id_code);\r\n\r\n        Document user = userColl.find(eq(\"username\", username)).first();\r\n\r\n        double new_balance = user.getDouble(\"balance\") + credit;\r\n\r\n        Bson updatesAdmin = Updates.combine(\r\n                Updates.set(\"assigned\", \"T\")\r\n        );\r\n\r\n        Bson updatesUser = Updates.combine(\r\n                Updates.set(\"balance\", new_balance)\r\n        );\r\n\r\n        UpdateOptions options = new UpdateOptions().upsert(true);\r\n\r\n        try {\r\n            UpdateResult resultUser = userColl.updateOne(queryUser, updatesUser, options);\r\n            UpdateResult resultAdmin = adminColl.updateOne(queryAdmin, updatesAdmin, options);\r\n            System.out.println(\"Modified document count: \" + resultUser.getModifiedCount());\r\n            System.out.println(\"Upserted id: \" + resultUser.getUpsertedId()); // only contains a value when an upsert is performed\r\n            System.out.println(\"Modified document count: \" + resultAdmin.getModifiedCount());\r\n            System.out.println(\"Upserted id: \" + resultAdmin.getUpsertedId()); // only contains a value when an upsert is performed\r\n        } catch (MongoException me) {\r\n            System.err.println(\"Unable to update due to an error: \" + me);\r\n            return;\r\n        }\r\n\r\n        Utility.infoBox(\"Deposit of \" + code.getInteger(\"credit\") + \"â‚¬ euros successfully executed\", \"Success\", \"Deposit done!\");\r\n        deleteCode(code.getString(\"_id\"));\r\n    }\r\n\r\n    public double updateBalance(String username) {\r\n\r\n        Document user = userColl.find(eq(\"username\", username)).first();\r\n\r\n        double balance = user.getDouble(\"balance\");\r\n\r\n        System.out.println(\"NEW BALANCE: \" + String.format(\"%.2f\", balance));\r\n\r\n        return balance;\r\n    }\r\n\r\n    public List<Document> getReviewsByUser(String username) {\r\n\r\n        List<Document> list = null;\r\n\r\n        BasicDBObject whereQuery = new BasicDBObject();\r\n        whereQuery.put(\"username\", username);\r\n\r\n        try (MongoCursor<Document> cursor = userColl.find(whereQuery).iterator()) {\r\n            while (cursor.hasNext()) {\r\n                Document doc = cursor.next();\r\n                if (doc.get(\"reviews\") == null)\r\n                    return new ArrayList<>();\r\n                list = (List<Document>) doc.get(\"reviews\");\r\n\r\n                Document d = list.get(0);\r\n                System.out.println(d.getString(\"reviewer\")); // display specific field\r\n            }\r\n        }\r\n        return list;\r\n    }\r\n\r\n    public boolean deleteInsertionMongo(String id) {\r\n\r\n        Bson query = eq(\"_id\", new ObjectId(id));\r\n\r\n        try {\r\n            DeleteResult result = insertionColl.deleteOne(query);\r\n            return (result.getDeletedCount() == 1);\r\n        } catch (MongoException me) {\r\n            System.err.println(\"Unable to delete due to an error: \" + me);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private void deleteCode(String id) {\r\n\r\n        Bson query = eq(\"_id\", id);\r\n\r\n        try {\r\n            DeleteResult result = adminColl.deleteOne(query);\r\n            System.out.println(\"Deleted document count: \" + result.getDeletedCount());\r\n        } catch (MongoException me) {\r\n            System.err.println(\"Unable to delete due to an error: \" + me);\r\n        }\r\n\r\n    }\r\n\r\n    public ArrayList<Document> findTopRatedUsersByCountry(String country) {\r\n\r\n        ArrayList<Document> list = new ArrayList<>();\r\n\r\n        BasicDBObject whereQuery = new BasicDBObject();\r\n        whereQuery.put(\"country\", country);\r\n\r\n        try (MongoCursor<Document> cursor = userColl.find(whereQuery).iterator()) {\r\n            while (cursor.hasNext()) {\r\n                Document doc = cursor.next();\r\n                if (doc.get(\"rating\") == null)\r\n                    continue;\r\n                list.add(doc);\r\n            }\r\n        }\r\n        return list;\r\n\r\n    }\r\n\r\n    public void deleteUserMongo(String username) {\r\n\r\n        Bson query = eq(\"username\", username);\r\n\r\n        try {\r\n            userColl.deleteOne(query);\r\n        } catch (MongoException me) {\r\n            System.err.println(\"Unable to delete due to an error: \" + me);\r\n        }\r\n    }\r\n\r\n    public void submitNewProfileImg(String url, String user) {\r\n\r\n        Document queryUser = new Document().append(\"username\",  user);\r\n\r\n        Bson updatesUser = Updates.combine(\r\n                Updates.set(\"img_profile\", url)\r\n        );\r\n\r\n        UpdateOptions options = new UpdateOptions().upsert(true);\r\n\r\n        try {\r\n            UpdateResult resultUser = userColl.updateOne(queryUser, updatesUser, options);\r\n            System.out.println(\"Modified document count: \" + resultUser.getModifiedCount());\r\n            System.out.println(\"Upserted id: \" + resultUser.getUpsertedId()); // only contains a value when an upsert is performed\r\n        } catch (MongoException me) {\r\n            System.err.println(\"Unable to update due to an error: \" + me);\r\n        }\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/it/unipi/dii/largescale/secondchance/connection/ConnectionMongoDB.java b/src/main/java/it/unipi/dii/largescale/secondchance/connection/ConnectionMongoDB.java
---- a/src/main/java/it/unipi/dii/largescale/secondchance/connection/ConnectionMongoDB.java	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ b/src/main/java/it/unipi/dii/largescale/secondchance/connection/ConnectionMongoDB.java	(date 1643928185412)
-@@ -1,12 +1,12 @@
- package main.java.it.unipi.dii.largescale.secondchance.connection;
- 
--import com.mongodb.BasicDBObject;
--import com.mongodb.ConnectionString;
--import com.mongodb.MongoException;
-+import com.mongodb.*;
- import com.mongodb.client.*;
-+import com.mongodb.client.MongoClient;
- import com.mongodb.client.model.*;
- import com.mongodb.client.result.DeleteResult;
- import com.mongodb.client.result.UpdateResult;
-+import jdk.nashorn.internal.ir.annotations.Ignore;
- import main.java.it.unipi.dii.largescale.secondchance.entity.Insertion;
- import main.java.it.unipi.dii.largescale.secondchance.entity.Review;
- import main.java.it.unipi.dii.largescale.secondchance.entity.User;
-@@ -34,16 +34,15 @@
-     MongoCursor<Document> cursor;
- 
-     MongoCollection<Document> userColl;
--    MongoCollection<Document> orderColl;
-     MongoCollection<Document> insertionColl;
--    MongoCollection<Document> adminColl;
-+    MongoCollection<Document> codeColl;
- 
-     /* ********* CONNECTION SECTION ********* */
- 
-     public void openConnection() {
- 
-         // LOCAL DATABASE WITHOUT REPLICAS
--        ConnectionString uri = new ConnectionString("mongodb://localhost:27017");
-+        /*ConnectionString uri = new ConnectionString("mongodb://localhost:27017");
-         mongoClient = MongoClients.create(uri);
-         db = mongoClient.getDatabase("local");
- 
-@@ -51,8 +50,7 @@
-         orderColl = db.getCollection("order");
-         insertionColl = db.getCollection("insertion");
-         adminColl = db.getCollection("admin");
--
--/*
-+*/
-         mongoClient = MongoClients.create(
-                 "mongodb://172.16.4.114:27020,172.16.4.115:27020,172.16.4.116:27020/" +
-                         "?retryWrites=true&w=majority&wtimeout=10000");
-@@ -68,10 +66,7 @@
-         insertionColl = db.getCollection("insertion")
-                 .withReadPreference(ReadPreference.secondary());
- 
--        orderColl = db.getCollection("order")
--                .withReadPreference(ReadPreference.secondary());
--
--        adminColl = db.getCollection("admin")
-+        codeColl = db.getCollection("code")
-                 .withReadPreference(ReadPreference.secondary());
- 
-         // Write concern at DB level
-@@ -80,16 +75,14 @@
- 
-         System.out.println("**************** USER ******************");
-         System.out.println(userColl.countDocuments());
--        System.out.println("**************** ORDER ******************");
--        System.out.println(orderColl.countDocuments());
-         System.out.println("**************** INSERTION ******************");
-         System.out.println(insertionColl.countDocuments());
-         System.out.println("**************** ADMIN ******************");
--        System.out.println(adminColl.countDocuments());
-+        System.out.println(codeColl.countDocuments());
- 
-         // 2 - Find the first document
-         userColl.find().limit(1).forEach(printDocuments());
--*/
-+
-     }
- 
-     public void closeConnection() {
-@@ -374,11 +367,9 @@
- 
- 
-             Bson filter_purchased = eq("username", username);
-+            BasicDBObject update_purchased = new BasicDBObject("$push", new BasicDBObject("purchased", purchased));
- 
-             Bson filter_sold = eq("username", insertion.getSeller());
--
--            BasicDBObject update_purchased = new BasicDBObject("$push", new BasicDBObject("purchased", purchased));
--
-             BasicDBObject update_sold = new BasicDBObject("$push", new BasicDBObject("sold", sold));
- 
-             //insert new document into order collection
-@@ -390,7 +381,7 @@
-                 System.err.println("Unable to insert due to an error: " + me);
-             }
- 
--            db.getCollection("insertion").deleteOne(new Document("image_url", insertion.getImage_url()).append("seller", insertion.getSeller()));
-+            insertionColl.deleteOne(new Document("image_url", insertion.getImage_url()).append("seller", insertion.getSeller()).append("timestamp", insertion.getTimestamp()));
-             return "OK";
-         };
-         return executeTransaction(clientSession, txnFunc);
-@@ -532,7 +523,7 @@
-         }
-         return array;
-     }
--
-+*/
-     public ArrayList<Document> findTopKRatedUser(int k, String country) {
- 
-         ArrayList<Document> array = new ArrayList<>();
-@@ -599,7 +590,7 @@
- 
-         Document query = new Document().append("username",  username);
-         Bson updates = Updates.combine(
--                Updates.set("suspended", "Y"));
-+                Updates.set("suspended", true));
-                 UpdateOptions options = new UpdateOptions().upsert(true);
- 
-         try {
-@@ -619,7 +610,7 @@
-         Document query = new Document().append("username",  username);
- 
-         Bson updates = Updates.combine(
--                Updates.set("suspended", "N"));
-+                Updates.set("suspended", false));
-                 UpdateOptions options = new UpdateOptions().upsert(true);
- 
-         try {
-@@ -699,7 +690,7 @@
-         return true;
- 
-     }
--
-+/*
-     public ArrayList<Document> findAllOrders(Boolean choice, String username) {
- 
-         AggregateIterable<Document> aggr;
-@@ -730,7 +721,7 @@
-         }
-         return find_orders;
-     }
--
-+*/
-     public void addReview(Review rev) {
- 
-         Document review = new Document()
-@@ -782,14 +773,14 @@
-         query.put("timestamp", timestamp);
- 
-         BasicDBObject set = new BasicDBObject("$set", new BasicDBObject("reviewed", true));
--        orderColl.findOneAndUpdate(query, set);
-+        codeColl.findOneAndUpdate(query, set);
-     }
- 
-     /* ********** BALANCE SECTION ********** */
- 
-     public void addFundsToWallet(String username, String id_code) {
- 
--        Document code = adminColl.find(eq("code", id_code)).first();
-+        Document code = codeColl.find(eq("code", id_code)).first();
- 
-         if (code == null || Objects.equals(code.getString("assigned"), "T")) {
-             Utility.infoBox("The code that you have inserted is not valid.", "Error", "Code doesn't exist!");
-@@ -817,7 +808,7 @@
- 
-         try {
-             UpdateResult resultUser = userColl.updateOne(queryUser, updatesUser, options);
--            UpdateResult resultAdmin = adminColl.updateOne(queryAdmin, updatesAdmin, options);
-+            UpdateResult resultAdmin = codeColl.updateOne(queryAdmin, updatesAdmin, options);
-             System.out.println("Modified document count: " + resultUser.getModifiedCount());
-             System.out.println("Upserted id: " + resultUser.getUpsertedId()); // only contains a value when an upsert is performed
-             System.out.println("Modified document count: " + resultAdmin.getModifiedCount());
-@@ -881,7 +872,7 @@
-         Bson query = eq("_id", id);
- 
-         try {
--            DeleteResult result = adminColl.deleteOne(query);
-+            DeleteResult result = codeColl.deleteOne(query);
-             System.out.println("Deleted document count: " + result.getDeletedCount());
-         } catch (MongoException me) {
-             System.err.println("Unable to delete due to an error: " + me);
-Index: src/main/resources/FXML/SignUp.fxml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import java.lang.*?>\r\n<?import javafx.scene.control.*?>\r\n<?import javafx.scene.layout.*?>\r\n<?import javafx.scene.text.*?>\r\n\r\n<?import javafx.collections.FXCollections?>\r\n<AnchorPane prefHeight=\"700.0\" prefWidth=\"900.0\" style=\"-fx-background-color: #EBEBEB;\" xmlns=\"http://javafx.com/javafx/8\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"main.java.it.unipi.dii.largescale.secondchance.controller.SignUpController\">\r\n   <children>\r\n      <Pane layoutX=\"352.0\" layoutY=\"145.0\" prefHeight=\"487.0\" prefWidth=\"526.0\" style=\"-fx-background-color: rgb(70,130,180);\">\r\n         <children>\r\n            <Label layoutX=\"102.0\" layoutY=\"101.0\" text=\"Username:\">\r\n               <font>\r\n                  <Font size=\"13.0\" />\r\n               </font>\r\n            </Label>\r\n            <TextField fx:id=\"us\" layoutX=\"67.0\" layoutY=\"125.0\" style=\"-fx-background-radius: 5;\" />\r\n            <Label layoutX=\"353.0\" layoutY=\"103.0\" text=\"Password:\">\r\n               <font>\r\n                  <Font size=\"13.0\" />\r\n               </font>\r\n            </Label>\r\n            <TextField fx:id=\"pw\" layoutX=\"314.0\" layoutY=\"125.0\" style=\"-fx-background-radius: 5;\" />\r\n            <Label layoutX=\"365.0\" layoutY=\"169.0\" text=\"Email:\">\r\n               <font>\r\n                  <Font size=\"13.0\" />\r\n               </font>\r\n            </Label>\r\n            <TextField fx:id=\"em\" layoutX=\"307.0\" layoutY=\"192.0\" prefHeight=\"17.0\" prefWidth=\"149.0\" style=\"-fx-background-radius: 5;\" />\r\n            <Label layoutX=\"83.0\" layoutY=\"168.0\" text=\"Name and Surname:\">\r\n               <font>\r\n                  <Font size=\"13.0\" />\r\n               </font>\r\n            </Label>\r\n            <TextField fx:id=\"nm\" layoutX=\"67.0\" layoutY=\"192.0\" prefHeight=\"17.0\" prefWidth=\"149.0\" style=\"-fx-background-radius: 5;\" />\r\n            <Label layoutX=\"117.0\" layoutY=\"241.0\" text=\"Country:\">\r\n               <font>\r\n                  <Font size=\"13.0\" />\r\n               </font>\r\n            </Label>\r\n            <Label layoutX=\"376.0\" layoutY=\"241.0\" text=\"City:\">\r\n               <font>\r\n                  <Font size=\"13.0\" />\r\n               </font>\r\n            </Label>\r\n            <TextField fx:id=\"ci\" layoutX=\"314.0\" layoutY=\"260.0\" prefHeight=\"17.0\" prefWidth=\"149.0\" style=\"-fx-background-radius: 5;\" />\r\n            <Label layoutX=\"234.0\" layoutY=\"299.0\" text=\"Address:\">\r\n               <font>\r\n                  <Font size=\"13.0\" />\r\n               </font>\r\n            </Label>\r\n            <TextField fx:id=\"ad\" layoutX=\"200.0\" layoutY=\"334.0\" prefHeight=\"17.0\" prefWidth=\"149.0\" style=\"-fx-background-radius: 5;\" />\r\n            <Button layoutX=\"155.0\" layoutY=\"405.0\" onAction=\"#registration\" prefHeight=\"25.0\" prefWidth=\"240.0\" style=\"-fx-background-radius: 5; -fx-background-color: rgb(220,220,220);\" text=\"Sign up\" />\r\n            <Text fill=\"WHITE\" layoutX=\"146.0\" layoutY=\"44.0\" text=\"Signup to join SecondChance!\">\r\n               <font>\r\n                  <Font size=\"18.0\" />\r\n               </font>\r\n            </Text>\r\n            <ComboBox fx:id=\"co\" layoutX=\"69.0\" layoutY=\"260.0\" prefHeight=\"22.0\" prefWidth=\"149.0\" promptText=\"Select your country\" >\r\n            <items>\r\n               <FXCollections fx:factory=\"observableArrayList\">\r\n                  <String fx:value=\"Italy\" />\r\n                  <String fx:value=\"Netherlands\" />\r\n                  <String fx:value=\"Spain\" />\r\n                  <String fx:value=\"Austria\" />\r\n                  <String fx:value=\"Poland\" />\r\n                  <String fx:value=\"Ireland\" />\r\n                  <String fx:value=\"France\" />\r\n                  <String fx:value=\"Canada\" />\r\n                  <String fx:value=\"United Kingdom (Great Britain)\" />\r\n                  <String fx:value=\"Brazil\" />\r\n               </FXCollections>\r\n            </items>\r\n            </ComboBox>\r\n         </children>\r\n      </Pane>\r\n      <Pane layoutX=\"35.0\" layoutY=\"145.0\" prefHeight=\"487.0\" prefWidth=\"317.0\" style=\"-fx-background-color: white;\">\r\n         <children>\r\n            <Text fx:id=\"SignIn\" fill=\"#2582bf\" layoutX=\"38.0\" layoutY=\"168.0\" text=\"Are you already registered?\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Text>\r\n            <Button fx:id=\"signInShower\" layoutX=\"39.0\" layoutY=\"261.0\" mnemonicParsing=\"false\" onMouseClicked=\"#ShowSignIn\" prefHeight=\"25.0\" prefWidth=\"240.0\" style=\"-fx-background-color: rgb(220,220,220);\" text=\"Click here\" textFill=\"#2582bf\" />\r\n            <Text fill=\"#2582bf\" layoutX=\"138.0\" layoutY=\"205.0\" text=\"Log In!\">\r\n               <font>\r\n                  <Font size=\"14.0\" />\r\n               </font>\r\n            </Text>\r\n         </children>\r\n      </Pane>\r\n   </children>\r\n</AnchorPane>\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/resources/FXML/SignUp.fxml b/src/main/resources/FXML/SignUp.fxml
---- a/src/main/resources/FXML/SignUp.fxml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ b/src/main/resources/FXML/SignUp.fxml	(date 1643927683041)
-@@ -1,11 +1,12 @@
- <?xml version="1.0" encoding="UTF-8"?>
- 
-+<?import javafx.collections.*?>
- <?import java.lang.*?>
- <?import javafx.scene.control.*?>
- <?import javafx.scene.layout.*?>
- <?import javafx.scene.text.*?>
--
- <?import javafx.collections.FXCollections?>
-+
- <AnchorPane prefHeight="700.0" prefWidth="900.0" style="-fx-background-color: #EBEBEB;" xmlns="http://javafx.com/javafx/8" xmlns:fx="http://javafx.com/fxml/1" fx:controller="main.java.it.unipi.dii.largescale.secondchance.controller.SignUpController">
-    <children>
-       <Pane layoutX="352.0" layoutY="145.0" prefHeight="487.0" prefWidth="526.0" style="-fx-background-color: rgb(70,130,180);">
-@@ -45,19 +46,19 @@
-                </font>
-             </Label>
-             <TextField fx:id="ci" layoutX="314.0" layoutY="260.0" prefHeight="17.0" prefWidth="149.0" style="-fx-background-radius: 5;" />
--            <Label layoutX="234.0" layoutY="299.0" text="Address:">
-+            <Label layoutX="364.0" layoutY="308.0" text="Address:">
-                <font>
-                   <Font size="13.0" />
-                </font>
-             </Label>
--            <TextField fx:id="ad" layoutX="200.0" layoutY="334.0" prefHeight="17.0" prefWidth="149.0" style="-fx-background-radius: 5;" />
-+            <TextField fx:id="ad" layoutX="314.0" layoutY="333.0" prefHeight="17.0" prefWidth="149.0" style="-fx-background-radius: 5;" />
-             <Button layoutX="155.0" layoutY="405.0" onAction="#registration" prefHeight="25.0" prefWidth="240.0" style="-fx-background-radius: 5; -fx-background-color: rgb(220,220,220);" text="Sign up" />
-             <Text fill="WHITE" layoutX="146.0" layoutY="44.0" text="Signup to join SecondChance!">
-                <font>
-                   <Font size="18.0" />
-                </font>
-             </Text>
--            <ComboBox fx:id="co" layoutX="69.0" layoutY="260.0" prefHeight="22.0" prefWidth="149.0" promptText="Select your country" >
-+            <ComboBox fx:id="co" layoutX="69.0" layoutY="260.0" prefHeight="22.0" prefWidth="149.0" promptText="Select your country">
-             <items>
-                <FXCollections fx:factory="observableArrayList">
-                   <String fx:value="Italy" />
-@@ -73,6 +74,12 @@
-                </FXCollections>
-             </items>
-             </ComboBox>
-+            <TextField fx:id="image" layoutX="72.0" layoutY="333.0" style="-fx-background-radius: 5;"/>
-+            <Label layoutX="106.0" layoutY="308.0" text="Image profile:">
-+               <font>
-+                  <Font size="13.0" />
-+               </font>
-+            </Label>
-          </children>
-       </Pane>
-       <Pane layoutX="35.0" layoutY="145.0" prefHeight="487.0" prefWidth="317.0" style="-fx-background-color: white;">
-Index: pom.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>ch.qos.logback</groupId>\r\n            <artifactId>logback-classic</artifactId>\r\n            <version>1.2.3</version>\r\n        </dependency>\r\n        <!-- https://mvnrepository.com/artifact/org.openjfx/javafx-swing -->\r\n        <dependency>\r\n            <groupId>org.openjfx</groupId>\r\n            <artifactId>javafx-swing</artifactId>\r\n            <version>11-ea+24</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.mongodb</groupId>\r\n            <artifactId>mongodb-driver-sync</artifactId>\r\n            <version>4.1.1</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.openjfx</groupId>\r\n            <artifactId>javafx-controls</artifactId>\r\n            <version>17.0.1</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.openjfx</groupId>\r\n            <artifactId>javafx-graphics</artifactId>\r\n            <version>17.0.1</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.mongodb</groupId>\r\n            <artifactId>mongo-java-driver</artifactId>\r\n            <version>3.8.0</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.neo4j.driver</groupId>\r\n            <artifactId>neo4j-java-driver</artifactId>\r\n            <version>4.1.1</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>junit</groupId>\r\n            <artifactId>junit</artifactId>\r\n            <version>RELEASE</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.junit.jupiter</groupId>\r\n            <artifactId>junit-jupiter</artifactId>\r\n            <version>RELEASE</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.junit.jupiter</groupId>\r\n            <artifactId>junit-jupiter-api</artifactId>\r\n            <version>5.8.1</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.junit.jupiter</groupId>\r\n            <artifactId>junit-jupiter-engine</artifactId>\r\n            <version>5.8.1</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.openjfx</groupId>\r\n            <artifactId>javafx-fxml</artifactId>\r\n            <version>17-ea+11</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.eljavatar</groupId>\r\n            <artifactId>SwingUtils</artifactId>\r\n            <version>1.3.2</version>\r\n            <scope>compile</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.thesett</groupId>\r\n            <artifactId>swing_utils</artifactId>\r\n            <version>0.9.117</version>\r\n            <scope>compile</scope>\r\n        </dependency>\r\n    </dependencies>\r\n    <build>\r\n        <sourceDirectory>src</sourceDirectory>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-compiler-plugin</artifactId>\r\n                <version>3.8.0</version>\r\n                <configuration>\r\n                    <source>1.8</source>\r\n                    <target>1.8</target>\r\n                </configuration>\r\n            </plugin>\r\n            <plugin>\r\n                <groupId>org.openjfx</groupId>\r\n                <artifactId>javafx-maven-plugin</artifactId>\r\n                <version>0.0.5</version>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n\r\n    <groupId>groupId</groupId>\r\n    <artifactId>Large-Scale-Project</artifactId>\r\n    <version>1.0-SNAPSHOT</version>\r\n\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/pom.xml b/pom.xml
---- a/pom.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ b/pom.xml	(date 1643922679636)
-@@ -64,23 +64,6 @@
-             <version>5.8.1</version>
-             <scope>test</scope>
-         </dependency>
--        <dependency>
--            <groupId>org.openjfx</groupId>
--            <artifactId>javafx-fxml</artifactId>
--            <version>17-ea+11</version>
--        </dependency>
--        <dependency>
--            <groupId>com.eljavatar</groupId>
--            <artifactId>SwingUtils</artifactId>
--            <version>1.3.2</version>
--            <scope>compile</scope>
--        </dependency>
--        <dependency>
--            <groupId>com.thesett</groupId>
--            <artifactId>swing_utils</artifactId>
--            <version>0.9.117</version>
--            <scope>compile</scope>
--        </dependency>
-     </dependencies>
-     <build>
-         <sourceDirectory>src</sourceDirectory>
-Index: src/main/java/it/unipi/dii/largescale/secondchance/controller/SignUpController.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package main.java.it.unipi.dii.largescale.secondchance.controller;\r\n\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.ComboBox;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.scene.text.Text;\r\nimport javafx.stage.Stage;\r\nimport main.java.it.unipi.dii.largescale.secondchance.connection.ConnectionMongoDB;\r\nimport main.java.it.unipi.dii.largescale.secondchance.connection.ConnectionNeo4jDB;\r\nimport main.java.it.unipi.dii.largescale.secondchance.entity.User;\r\nimport main.java.it.unipi.dii.largescale.secondchance.utils.CryptWithMD5;\r\nimport main.java.it.unipi.dii.largescale.secondchance.utils.Utility;\r\n\r\nimport java.io.IOException;\r\n\r\npublic class SignUpController {\r\n\r\n    public Text SignIn;\r\n    @FXML private TextField us, pw, em, nm, ci, ad, image;\r\n    @FXML private ComboBox<String> co;\r\n\r\n    public void ShowSignIn() throws IOException {\r\n\r\n        Stage stage = (Stage) SignIn.getScene().getWindow();\r\n        Utility.changePage(stage, \"SignIn\");\r\n\r\n    }\r\n\r\n    public void registration() throws IOException {\r\n\r\n        String img;\r\n\r\n        if (!us.getText().isEmpty()\r\n                && !pw.getText().isEmpty() && !em.getText().isEmpty()\r\n                && !nm.getText().isEmpty() && !ci.getText().isEmpty() && !co.getValue().isEmpty()\r\n                && !ad.getText().isEmpty()) {\r\n\r\n            if(image.getText().equals(\"\"))\r\n                img = \"image.png\";\r\n            else\r\n                img = image.getText();\r\n            String encrypted = CryptWithMD5.cryptWithMD5(pw.getText());\r\n            User u = new User(em.getText(), us.getText(),\r\n                    encrypted, nm.getText(), co.getValue(),\r\n                    ci.getText(), ad.getText(), false,\r\n                    Double.NaN, 0.0, img, null, null, null);\r\n\r\n            if(us.getText().equals(\"admin\")) {\r\n                Utility.infoBox(\"You can not register as admin\", \"Error\", \"Please, insert a different username-\");\r\n                us.setText(\"\");\r\n                return;\r\n            }\r\n\r\n            System.out.println(u);\r\n\r\n            if(ConnectionMongoDB.connMongo.registerUser(u)) {\r\n                //clear TextField\r\n                us.setText(\"\");\r\n                pw.setText(\"\");\r\n                em.setText(\"\");\r\n                nm.setText(\"\");\r\n                ci.setText(\"\");\r\n                co.setValue(\"Select your country\");\r\n                ad.setText(\"\");\r\n                image.setText(\"\");\r\n\r\n                if(!ConnectionNeo4jDB.connNeo.addUser(u))\r\n                {\r\n                    Utility.printTerminal(\"Error registration user\");\r\n                    Utility.infoBox(\"Error adding new user\" , \"Error\", \"Error adding new user\");\r\n                    ConnectionMongoDB.connMongo.deleteUserMongo(u.getUsername());\r\n                    return;\r\n                }\r\n                ShowSignIn();\r\n                Utility.infoBox(\"Now you can login!\", \"Confirmed\", \"Registration completed with success!\");\r\n\r\n            }\r\n\r\n        }else {\r\n            Utility.infoBox(\"Please, fill all information.\", \"Error\", \"Empty fields!\");\r\n        }\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/it/unipi/dii/largescale/secondchance/controller/SignUpController.java b/src/main/java/it/unipi/dii/largescale/secondchance/controller/SignUpController.java
---- a/src/main/java/it/unipi/dii/largescale/secondchance/controller/SignUpController.java	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ b/src/main/java/it/unipi/dii/largescale/secondchance/controller/SignUpController.java	(date 1643927425056)
-@@ -36,14 +36,15 @@
-                 && !ad.getText().isEmpty()) {
- 
-             if(image.getText().equals(""))
--                img = "image.png";
-+                img = "user.png";
-             else
-                 img = image.getText();
-             String encrypted = CryptWithMD5.cryptWithMD5(pw.getText());
-             User u = new User(em.getText(), us.getText(),
-                     encrypted, nm.getText(), co.getValue(),
-                     ci.getText(), ad.getText(), false,
--                    Double.NaN, 0.0, img, null, null, null);
-+                    Double.NaN, 0.0, img, null,
-+                    null, null);
- 
-             if(us.getText().equals("admin")) {
-                 Utility.infoBox("You can not register as admin", "Error", "Please, insert a different username-");
-Index: .idea/libraries/Maven__org_openjfx_javafx_swing_win_11_ea_24.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_openjfx_javafx_swing_win_11_ea_24.xml b/.idea/libraries/Maven__org_openjfx_javafx_swing_win_11_ea_24.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_openjfx_javafx_swing_win_11_ea_24.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.openjfx:javafx-swing:win:11-ea+24">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-swing/11-ea+24/javafx-swing-11-ea+24-win.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-swing/11-ea+24/javafx-swing-11-ea+24-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-swing/11-ea+24/javafx-swing-11-ea+24-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_apiguardian_apiguardian_api_1_1_2.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_apiguardian_apiguardian_api_1_1_2.xml b/.idea/libraries/Maven__org_apiguardian_apiguardian_api_1_1_2.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_apiguardian_apiguardian_api_1_1_2.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.apiguardian:apiguardian-api:1.1.2">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__junit_junit_4_13_2.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__junit_junit_4_13_2.xml b/.idea/libraries/Maven__junit_junit_4_13_2.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__junit_junit_4_13_2.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: junit:junit:4.13.2">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.13.2/junit-4.13.2.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.13.2/junit-4.13.2-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.13.2/junit-4.13.2-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_8_2.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_8_2.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_8_2.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_8_2.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.junit.jupiter:junit-jupiter:5.8.2">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.8.2/junit-jupiter-5.8.2.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.8.2/junit-jupiter-5.8.2-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.8.2/junit-jupiter-5.8.2-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_mongodb_mongo_java_driver_3_8_0.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_mongodb_mongo_java_driver_3_8_0.xml b/.idea/libraries/Maven__org_mongodb_mongo_java_driver_3_8_0.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_mongodb_mongo_java_driver_3_8_0.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.mongodb:mongo-java-driver:3.8.0">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/mongodb/mongo-java-driver/3.8.0/mongo-java-driver-3.8.0.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/mongodb/mongo-java-driver/3.8.0/mongo-java-driver-3.8.0-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/mongodb/mongo-java-driver/3.8.0/mongo-java-driver-3.8.0-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__com_thesett_enhanced_text_model_0_9_117.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__com_thesett_enhanced_text_model_0_9_117.xml b/.idea/libraries/Maven__com_thesett_enhanced_text_model_0_9_117.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__com_thesett_enhanced_text_model_0_9_117.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: com.thesett:enhanced_text_model:0.9.117">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/com/thesett/enhanced_text_model/0.9.117/enhanced_text_model-0.9.117.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/com/thesett/enhanced_text_model/0.9.117/enhanced_text_model-0.9.117-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/com/thesett/enhanced_text_model/0.9.117/enhanced_text_model-0.9.117-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_openjfx_javafx_controls_17_0_1.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_openjfx_javafx_controls_17_0_1.xml b/.idea/libraries/Maven__org_openjfx_javafx_controls_17_0_1.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_openjfx_javafx_controls_17_0_1.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.openjfx:javafx-controls:17.0.1">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-controls/17.0.1/javafx-controls-17.0.1.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-controls/17.0.1/javafx-controls-17.0.1-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-controls/17.0.1/javafx-controls-17.0.1-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__com_thesett_swing_utils_0_9_117.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__com_thesett_swing_utils_0_9_117.xml b/.idea/libraries/Maven__com_thesett_swing_utils_0_9_117.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__com_thesett_swing_utils_0_9_117.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: com.thesett:swing_utils:0.9.117">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/com/thesett/swing_utils/0.9.117/swing_utils-0.9.117.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/com/thesett/swing_utils/0.9.117/swing_utils-0.9.117-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/com/thesett/swing_utils/0.9.117/swing_utils-0.9.117-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_neo4j_driver_neo4j_java_driver_4_1_1.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_neo4j_driver_neo4j_java_driver_4_1_1.xml b/.idea/libraries/Maven__org_neo4j_driver_neo4j_java_driver_4_1_1.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_neo4j_driver_neo4j_java_driver_4_1_1.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.neo4j.driver:neo4j-java-driver:4.1.1">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/neo4j/driver/neo4j-java-driver/4.1.1/neo4j-java-driver-4.1.1.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/neo4j/driver/neo4j-java-driver/4.1.1/neo4j-java-driver-4.1.1-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/neo4j/driver/neo4j-java-driver/4.1.1/neo4j-java-driver-4.1.1-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_opentest4j_opentest4j_1_2_0.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_opentest4j_opentest4j_1_2_0.xml b/.idea/libraries/Maven__org_opentest4j_opentest4j_1_2_0.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_opentest4j_opentest4j_1_2_0.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.opentest4j:opentest4j:1.2.0">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_openjfx_javafx_swing_11_ea_24.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_openjfx_javafx_swing_11_ea_24.xml b/.idea/libraries/Maven__org_openjfx_javafx_swing_11_ea_24.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_openjfx_javafx_swing_11_ea_24.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.openjfx:javafx-swing:11-ea+24">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-swing/11-ea+24/javafx-swing-11-ea+24.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-swing/11-ea+24/javafx-swing-11-ea+24-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-swing/11-ea+24/javafx-swing-11-ea+24-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__com_dorkbox_TweenEngine_8_3.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__com_dorkbox_TweenEngine_8_3.xml b/.idea/libraries/Maven__com_dorkbox_TweenEngine_8_3.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__com_dorkbox_TweenEngine_8_3.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: com.dorkbox:TweenEngine:8.3">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/com/dorkbox/TweenEngine/8.3/TweenEngine-8.3.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/com/dorkbox/TweenEngine/8.3/TweenEngine-8.3-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/com/dorkbox/TweenEngine/8.3/TweenEngine-8.3-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__com_thesett_text_model_0_9_117.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__com_thesett_text_model_0_9_117.xml b/.idea/libraries/Maven__com_thesett_text_model_0_9_117.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__com_thesett_text_model_0_9_117.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: com.thesett:text_model:0.9.117">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/com/thesett/text_model/0.9.117/text_model-0.9.117.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/com/thesett/text_model/0.9.117/text_model-0.9.117-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/com/thesett/text_model/0.9.117/text_model-0.9.117-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_swinglabs_swingx_swingx_all_1_6_5_1.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_swinglabs_swingx_swingx_all_1_6_5_1.xml b/.idea/libraries/Maven__org_swinglabs_swingx_swingx_all_1_6_5_1.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_swinglabs_swingx_swingx_all_1_6_5_1.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.swinglabs.swingx:swingx-all:1.6.5-1">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/swinglabs/swingx/swingx-all/1.6.5-1/swingx-all-1.6.5-1.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/swinglabs/swingx/swingx-all/1.6.5-1/swingx-all-1.6.5-1-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/swinglabs/swingx/swingx-all/1.6.5-1/swingx-all-1.6.5-1-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_hamcrest_hamcrest_core_1_3.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_hamcrest_hamcrest_core_1_3.xml b/.idea/libraries/Maven__org_hamcrest_hamcrest_core_1_3.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_hamcrest_hamcrest_core_1_3.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.hamcrest:hamcrest-core:1.3">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_openjfx_javafx_fxml_win_17_ea_11.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_openjfx_javafx_fxml_win_17_ea_11.xml b/.idea/libraries/Maven__org_openjfx_javafx_fxml_win_17_ea_11.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_openjfx_javafx_fxml_win_17_ea_11.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.openjfx:javafx-fxml:win:17-ea+11">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-fxml/17-ea+11/javafx-fxml-17-ea+11-win.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-fxml/17-ea+11/javafx-fxml-17-ea+11-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-fxml/17-ea+11/javafx-fxml-17-ea+11-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/.gitignore
-===================================================================
-diff --git a/.idea/.gitignore b/.idea/.gitignore
-deleted file mode 100644
---- a/.idea/.gitignore	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,8 +0,0 @@
--# Default ignored files
--/shelf/
--/workspace.xml
--# Datasource local storage ignored files
--/dataSources/
--/dataSources.local.xml
--# Editor-based HTTP Client requests
--/httpRequests/
-Index: .idea/libraries/Maven__com_ibm_icu_icu4j_60_2.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__com_ibm_icu_icu4j_60_2.xml b/.idea/libraries/Maven__com_ibm_icu_icu4j_60_2.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__com_ibm_icu_icu4j_60_2.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: com.ibm.icu:icu4j:60.2">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/com/ibm/icu/icu4j/60.2/icu4j-60.2.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/com/ibm/icu/icu4j/60.2/icu4j-60.2-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/com/ibm/icu/icu4j/60.2/icu4j-60.2-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__com_dorkbox_ObjectPool_2_11.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__com_dorkbox_ObjectPool_2_11.xml b/.idea/libraries/Maven__com_dorkbox_ObjectPool_2_11.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__com_dorkbox_ObjectPool_2_11.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: com.dorkbox:ObjectPool:2.11">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/com/dorkbox/ObjectPool/2.11/ObjectPool-2.11.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/com/dorkbox/ObjectPool/2.11/ObjectPool-2.11-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/com/dorkbox/ObjectPool/2.11/ObjectPool-2.11-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/inspectionProfiles/Project_Default.xml
-===================================================================
-diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
-deleted file mode 100644
---- a/.idea/inspectionProfiles/Project_Default.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,250 +0,0 @@
--<component name="InspectionProjectProfileManager">
--  <profile version="1.0">
--    <option name="myName" value="Project Default" />
--    <inspection_tool class="AndroidElementNotAllowed" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintAcceptsUserCertificates" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintAdapterViewChildren" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintAddJavascriptInterface" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintAllCaps" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintAllowAllHostnameVerifier" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintAllowBackup" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintAlwaysShowAction" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintAndroidGradlePluginVersion" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintAnimatorKeep" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintAnnotationProcessorOnCompilePath" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintAppCompatMethod" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintAppIndexingService" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintAppLinksAutoVerifyWarning" enabled="false" level="ERROR" enabled_by_default="false" />
--    <inspection_tool class="AndroidLintApplySharedPref" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintAssert" enabled="false" level="ERROR" enabled_by_default="false" />
--    <inspection_tool class="AndroidLintAuthLeak" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintAutofill" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintBackButton" enabled="false" level="ERROR" enabled_by_default="false" />
--    <inspection_tool class="AndroidLintBadHostnameVerifier" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintBatteryLife" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintBrokenIterator" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintButtonCase" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintButtonOrder" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintButtonStyle" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintCanvasSize" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintCheckResult" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintClickableViewAccessibility" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintCommitPrefEdits" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintCommitTransaction" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintConstantLocale" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintContentDescription" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintConvertToWebp" enabled="false" level="ERROR" enabled_by_default="false" />
--    <inspection_tool class="AndroidLintCustomViewStyleable" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintCutPasteId" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintDataBindingWithoutKapt" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintDefaultLocale" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintDeprecated" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintDeprecatedProvider" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintDevModeObsolete" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintDeviceAdmin" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintDisableBaselineAlignment" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintDiscouragedPrivateApi" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintDrawAllocation" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintDuplicateDivider" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintDuplicateIncludedIds" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintDuplicateStrings" enabled="false" level="ERROR" enabled_by_default="false" />
--    <inspection_tool class="AndroidLintDuplicateUsesFeature" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintEasterEgg" enabled="false" level="ERROR" enabled_by_default="false" />
--    <inspection_tool class="AndroidLintEnqueueWork" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintExifInterface" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintExpensiveAssertion" enabled="false" level="ERROR" enabled_by_default="false" />
--    <inspection_tool class="AndroidLintExportedContentProvider" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintExportedPreferenceActivity" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintExportedReceiver" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintExportedService" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintExtraText" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintFindViewByIdCast" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintFontValidationWarning" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintGetInstance" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintGifUsage" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintGoogleAppIndexingApiWarning" enabled="false" level="ERROR" enabled_by_default="false" />
--    <inspection_tool class="AndroidLintGoogleAppIndexingWarning" enabled="false" level="ERROR" enabled_by_default="false" />
--    <inspection_tool class="AndroidLintGradleDependency" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintGradleDeprecated" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintGradleDeprecatedConfiguration" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintGradleDynamicVersion" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintGradleOverrides" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintGradlePath" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintGrantAllUris" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintHandlerLeak" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintHardcodedText" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintHardwareIds" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintIconColors" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintIconDensities" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintIconDipSize" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintIconDuplicates" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintIconDuplicatesConfig" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintIconExpectedSize" enabled="false" level="ERROR" enabled_by_default="false" />
--    <inspection_tool class="AndroidLintIconExtension" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintIconLauncherShape" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintIconLocation" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintIconMissingDensityFolder" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintIconMixedNinePatch" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintIconNoDpi" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintIconXmlAndPng" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintIgnoreWithoutReason" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintIllegalResourceRef" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintImplicitSamInstance" enabled="false" level="ERROR" enabled_by_default="false" />
--    <inspection_tool class="AndroidLintInOrMmUsage" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintIncompatibleMediaBrowserServiceCompatVersion" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintInconsistentArrays" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintInconsistentLayout" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintInefficientWeight" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintInflateParams" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintInlinedApi" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintInnerclassSeparator" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintInsecureBaseConfiguration" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintInstantApps" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintIntentReset" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintInvalidNavigation" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintJavaPluginLanguageLevel" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintJcenterRepositoryObsolete" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintJobSchedulerService" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintKeyboardInaccessibleWidget" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintKotlinPropertyAccess" enabled="false" level="ERROR" enabled_by_default="false" />
--    <inspection_tool class="AndroidLintKtxExtensionAvailable" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintLabelFor" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintLambdaLast" enabled="false" level="ERROR" enabled_by_default="false" />
--    <inspection_tool class="AndroidLintLifecycleAnnotationProcessorWithJava8" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintLocaleFolder" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintLockedOrientationActivity" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintLogConditional" enabled="false" level="ERROR" enabled_by_default="false" />
--    <inspection_tool class="AndroidLintManifestOrder" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintMergeRootFrame" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintMinSdkTooLow" enabled="false" level="ERROR" enabled_by_default="false" />
--    <inspection_tool class="AndroidLintMipmapIcons" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintMissingApplicationIcon" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintMissingBackupPin" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintMissingFirebaseInstanceTokenRefresh" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintMissingId" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintMissingVersion" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintMutatingSharedPrefs" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintNegativeMargin" enabled="false" level="ERROR" enabled_by_default="false" />
--    <inspection_tool class="AndroidLintNestedScrolling" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintNestedWeights" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintNewerVersionAvailable" enabled="false" level="ERROR" enabled_by_default="false" />
--    <inspection_tool class="AndroidLintNoHardKeywords" enabled="false" level="ERROR" enabled_by_default="false" />
--    <inspection_tool class="AndroidLintNonConstantResourceId" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintNonResizeableActivity" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintNotificationIconCompatibility" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintObsoleteLayoutParam" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintObsoleteSdkInt" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintOldTargetApi" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintOverdraw" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintPackageManagerGetSignatures" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintParcelClassLoader" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintPermissionImpliesUnsupportedHardware" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintPinSetExpiry" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintPluralsCandidate" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintPrivateApi" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintPrivateResource" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintProguardSplit" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintProxyPassword" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintPxUsage" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintQueryPermissionsNeeded" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintRecycle" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintRedundantNamespace" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintRegistered" enabled="false" level="ERROR" enabled_by_default="false" />
--    <inspection_tool class="AndroidLintRelativeOverlap" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintRequiresFeature" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintRtlEnabled" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintRtlHardcoded" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintRtlSymmetry" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintSQLiteString" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintSSLCertificateSocketFactoryCreateSocket" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintSSLCertificateSocketFactoryGetInsecure" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintScopedStorage" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintScrollViewCount" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintScrollViewSize" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintSdCardPath" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintSecureRandom" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintSelectableText" enabled="false" level="ERROR" enabled_by_default="false" />
--    <inspection_tool class="AndroidLintSetJavaScriptEnabled" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintSetTextI18n" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintSetWorldReadable" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintSetWorldWritable" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintShiftFlags" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintShortAlarm" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintShowToast" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintSignatureOrSystemPermissions" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintSimpleDateFormat" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintSlices" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintSmallSp" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintSourceLockedOrientationActivity" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintSpUsage" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintStateListReachable" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintStaticFieldLeak" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintStringFormatCount" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintSuspiciousImport" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintSwitchIntDef" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintSyntheticAccessor" enabled="false" level="ERROR" enabled_by_default="false" />
--    <inspection_tool class="AndroidLintTextFields" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintTextViewEdits" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintTooDeepLayout" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintTooManyViews" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintTranslucentOrientation" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintTrustAllX509TrustManager" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintTypographyDashes" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintTypographyEllipsis" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintTypographyFractions" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintTypographyOther" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintTypographyQuotes" enabled="false" level="ERROR" enabled_by_default="false" />
--    <inspection_tool class="AndroidLintTypos" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintUnknownIdInLayout" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintUnknownNullness" enabled="false" level="ERROR" enabled_by_default="false" />
--    <inspection_tool class="AndroidLintUnlocalizedSms" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintUnpackedNativeCode" enabled="false" level="ERROR" enabled_by_default="false" />
--    <inspection_tool class="AndroidLintUnprotectedSMSBroadcastReceiver" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintUnsafeDynamicallyLoadedCode" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintUnsafeNativeCodeLocation" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintUnsafeProtectedBroadcastReceiver" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintUnsupportedChromeOsCameraSystemFeature" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintUntranslatable" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintUnusedAttribute" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintUnusedIds" enabled="false" level="ERROR" enabled_by_default="false" />
--    <inspection_tool class="AndroidLintUnusedQuantity" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintUnusedResources" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintUsableSpace" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintUseAlpha2" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintUseCheckPermission" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintUseCompoundDrawables" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintUseOfBundledGooglePlayServices" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintUseSparseArrays" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintUseValueOf" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintUselessLeaf" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintUselessParent" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintUsesMinSdkAttributes" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintUsingHttp" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintVectorPath" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintVectorRaster" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintViewConstructor" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintViewHolder" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintViewTag" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintVisibleForTests" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintWakelockTimeout" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintWearStandaloneAppFlag" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintWebViewApiAvailability" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintWeekBasedYear" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintWifiManagerPotentialLeak" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintWorldReadableFiles" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintWorldWriteableFiles" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidLintWrongRegion" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidMissingOnClickHandler" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="AndroidUnknownAttribute" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="PermissionUsageInspection" enabled="false" level="ERROR" enabled_by_default="false" />
--    <inspection_tool class="PyUnresolvedReferencesInspection" enabled="true" level="WARNING" enabled_by_default="true">
--      <option name="ignoredIdentifiers">
--        <list>
--          <option value="pandas" />
--        </list>
--      </option>
--    </inspection_tool>
--    <inspection_tool class="R8IgnoredFlags" enabled="true" level="ERROR" enabled_by_default="true" />
--    <inspection_tool class="XmlWrongFileType" enabled="true" level="ERROR" enabled_by_default="true" />
--  </profile>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__com_eljavatar_SwingUtils_1_3_2.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__com_eljavatar_SwingUtils_1_3_2.xml b/.idea/libraries/Maven__com_eljavatar_SwingUtils_1_3_2.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__com_eljavatar_SwingUtils_1_3_2.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: com.eljavatar:SwingUtils:1.3.2">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/com/eljavatar/SwingUtils/1.3.2/SwingUtils-1.3.2.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/com/eljavatar/SwingUtils/1.3.2/SwingUtils-1.3.2-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/com/eljavatar/SwingUtils/1.3.2/SwingUtils-1.3.2-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_reactivestreams_reactive_streams_1_0_3.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_reactivestreams_reactive_streams_1_0_3.xml b/.idea/libraries/Maven__org_reactivestreams_reactive_streams_1_0_3.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_reactivestreams_reactive_streams_1_0_3.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.reactivestreams:reactive-streams:1.0.3">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/reactivestreams/reactive-streams/1.0.3/reactive-streams-1.0.3.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/reactivestreams/reactive-streams/1.0.3/reactive-streams-1.0.3-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/reactivestreams/reactive-streams/1.0.3/reactive-streams-1.0.3-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_openjfx_javafx_graphics_win_17_0_1.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_openjfx_javafx_graphics_win_17_0_1.xml b/.idea/libraries/Maven__org_openjfx_javafx_graphics_win_17_0_1.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_openjfx_javafx_graphics_win_17_0_1.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.openjfx:javafx-graphics:win:17.0.1">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-graphics/17.0.1/javafx-graphics-17.0.1-win.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-graphics/17.0.1/javafx-graphics-17.0.1-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-graphics/17.0.1/javafx-graphics-17.0.1-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_openjfx_javafx_fxml_17_ea_11.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_openjfx_javafx_fxml_17_ea_11.xml b/.idea/libraries/Maven__org_openjfx_javafx_fxml_17_ea_11.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_openjfx_javafx_fxml_17_ea_11.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.openjfx:javafx-fxml:17-ea+11">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-fxml/17-ea+11/javafx-fxml-17-ea+11.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-fxml/17-ea+11/javafx-fxml-17-ea+11-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-fxml/17-ea+11/javafx-fxml-17-ea+11-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__ch_qos_logback_logback_core_1_2_3.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__ch_qos_logback_logback_core_1_2_3.xml b/.idea/libraries/Maven__ch_qos_logback_logback_core_1_2_3.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__ch_qos_logback_logback_core_1_2_3.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: ch.qos.logback:logback-core:1.2.3">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/uiDesigner.xml
-===================================================================
-diff --git a/.idea/uiDesigner.xml b/.idea/uiDesigner.xml
-deleted file mode 100644
---- a/.idea/uiDesigner.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,124 +0,0 @@
--<?xml version="1.0" encoding="UTF-8"?>
--<project version="4">
--  <component name="Palette2">
--    <group name="Swing">
--      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
--        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
--      </item>
--      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
--        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
--      </item>
--      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.png" removable="false" auto-create-binding="false" can-attach-label="false">
--        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
--      </item>
--      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.png" removable="false" auto-create-binding="false" can-attach-label="true">
--        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
--      </item>
--      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.png" removable="false" auto-create-binding="true" can-attach-label="false">
--        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
--        <initial-values>
--          <property name="text" value="Button" />
--        </initial-values>
--      </item>
--      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.png" removable="false" auto-create-binding="true" can-attach-label="false">
--        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
--        <initial-values>
--          <property name="text" value="RadioButton" />
--        </initial-values>
--      </item>
--      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.png" removable="false" auto-create-binding="true" can-attach-label="false">
--        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
--        <initial-values>
--          <property name="text" value="CheckBox" />
--        </initial-values>
--      </item>
--      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.png" removable="false" auto-create-binding="false" can-attach-label="false">
--        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
--        <initial-values>
--          <property name="text" value="Label" />
--        </initial-values>
--      </item>
--      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.png" removable="false" auto-create-binding="true" can-attach-label="true">
--        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
--          <preferred-size width="150" height="-1" />
--        </default-constraints>
--      </item>
--      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.png" removable="false" auto-create-binding="true" can-attach-label="true">
--        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
--          <preferred-size width="150" height="-1" />
--        </default-constraints>
--      </item>
--      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.png" removable="false" auto-create-binding="true" can-attach-label="true">
--        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
--          <preferred-size width="150" height="-1" />
--        </default-constraints>
--      </item>
--      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.png" removable="false" auto-create-binding="true" can-attach-label="true">
--        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
--          <preferred-size width="150" height="50" />
--        </default-constraints>
--      </item>
--      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
--        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
--          <preferred-size width="150" height="50" />
--        </default-constraints>
--      </item>
--      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
--        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
--          <preferred-size width="150" height="50" />
--        </default-constraints>
--      </item>
--      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.png" removable="false" auto-create-binding="true" can-attach-label="true">
--        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
--      </item>
--      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.png" removable="false" auto-create-binding="true" can-attach-label="false">
--        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
--          <preferred-size width="150" height="50" />
--        </default-constraints>
--      </item>
--      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.png" removable="false" auto-create-binding="true" can-attach-label="false">
--        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
--          <preferred-size width="150" height="50" />
--        </default-constraints>
--      </item>
--      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.png" removable="false" auto-create-binding="true" can-attach-label="false">
--        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
--          <preferred-size width="150" height="50" />
--        </default-constraints>
--      </item>
--      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.png" removable="false" auto-create-binding="true" can-attach-label="false">
--        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
--          <preferred-size width="200" height="200" />
--        </default-constraints>
--      </item>
--      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.png" removable="false" auto-create-binding="false" can-attach-label="false">
--        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
--          <preferred-size width="200" height="200" />
--        </default-constraints>
--      </item>
--      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.png" removable="false" auto-create-binding="true" can-attach-label="true">
--        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
--      </item>
--      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.png" removable="false" auto-create-binding="true" can-attach-label="false">
--        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
--      </item>
--      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.png" removable="false" auto-create-binding="false" can-attach-label="false">
--        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
--      </item>
--      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
--        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
--      </item>
--      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.png" removable="false" auto-create-binding="false" can-attach-label="false">
--        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
--          <preferred-size width="-1" height="20" />
--        </default-constraints>
--      </item>
--      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.png" removable="false" auto-create-binding="false" can-attach-label="false">
--        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
--      </item>
--      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
--        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
--      </item>
--    </group>
--  </component>
--</project>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_openjfx_javafx_base_win_17_0_1.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_openjfx_javafx_base_win_17_0_1.xml b/.idea/libraries/Maven__org_openjfx_javafx_base_win_17_0_1.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_openjfx_javafx_base_win_17_0_1.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.openjfx:javafx-base:win:17.0.1">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-base/17.0.1/javafx-base-17.0.1-win.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-base/17.0.1/javafx-base-17.0.1-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-base/17.0.1/javafx-base-17.0.1-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__com_dorkbox_Notify_3_7.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__com_dorkbox_Notify_3_7.xml b/.idea/libraries/Maven__com_dorkbox_Notify_3_7.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__com_dorkbox_Notify_3_7.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: com.dorkbox:Notify:3.7">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/com/dorkbox/Notify/3.7/Notify-3.7.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/com/dorkbox/Notify/3.7/Notify-3.7-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/com/dorkbox/Notify/3.7/Notify-3.7-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__ch_qos_logback_logback_classic_1_2_3.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__ch_qos_logback_logback_classic_1_2_3.xml b/.idea/libraries/Maven__ch_qos_logback_logback_classic_1_2_3.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__ch_qos_logback_logback_classic_1_2_3.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: ch.qos.logback:logback-classic:1.2.3">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_mongodb_mongodb_driver_core_4_1_1.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_mongodb_mongodb_driver_core_4_1_1.xml b/.idea/libraries/Maven__org_mongodb_mongodb_driver_core_4_1_1.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_mongodb_mongodb_driver_core_4_1_1.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.mongodb:mongodb-driver-core:4.1.1">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/mongodb/mongodb-driver-core/4.1.1/mongodb-driver-core-4.1.1.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/mongodb/mongodb-driver-core/4.1.1/mongodb-driver-core-4.1.1-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/mongodb/mongodb-driver-core/4.1.1/mongodb-driver-core-4.1.1-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_8_1.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_8_1.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_8_1.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_8_1.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.junit.jupiter:junit-jupiter-api:5.8.1">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.8.1/junit-jupiter-api-5.8.1.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.8.1/junit-jupiter-api-5.8.1-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.8.1/junit-jupiter-api-5.8.1-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_8_2.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_8_2.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_8_2.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_8_2.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.junit.jupiter:junit-jupiter-params:5.8.2">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.8.2/junit-jupiter-params-5.8.2.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.8.2/junit-jupiter-params-5.8.2-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.8.2/junit-jupiter-params-5.8.2-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_slf4j_slf4j_api_1_7_25.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_slf4j_slf4j_api_1_7_25.xml b/.idea/libraries/Maven__org_slf4j_slf4j_api_1_7_25.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_slf4j_slf4j_api_1_7_25.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.slf4j:slf4j-api:1.7.25">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_8_1.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_8_1.xml b/.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_8_1.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_8_1.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.junit.platform:junit-platform-commons:1.8.1">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.8.1/junit-platform-commons-1.8.1.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.8.1/junit-platform-commons-1.8.1-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.8.1/junit-platform-commons-1.8.1-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_8_1.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_8_1.xml b/.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_8_1.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_8_1.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.junit.platform:junit-platform-engine:1.8.1">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.8.1/junit-platform-engine-1.8.1.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.8.1/junit-platform-engine-1.8.1-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.8.1/junit-platform-engine-1.8.1-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/modules.xml
-===================================================================
-diff --git a/.idea/modules.xml b/.idea/modules.xml
-deleted file mode 100644
---- a/.idea/modules.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,8 +0,0 @@
--<?xml version="1.0" encoding="UTF-8"?>
--<project version="4">
--  <component name="ProjectModuleManager">
--    <modules>
--      <module fileurl="file://$PROJECT_DIR$/Large-Scale-Project.iml" filepath="$PROJECT_DIR$/Large-Scale-Project.iml" />
--    </modules>
--  </component>
--</project>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_openjfx_javafx_base_17_0_1.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_openjfx_javafx_base_17_0_1.xml b/.idea/libraries/Maven__org_openjfx_javafx_base_17_0_1.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_openjfx_javafx_base_17_0_1.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.openjfx:javafx-base:17.0.1">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-base/17.0.1/javafx-base-17.0.1.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-base/17.0.1/javafx-base-17.0.1-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-base/17.0.1/javafx-base-17.0.1-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_openjfx_javafx_graphics_17_0_1.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_openjfx_javafx_graphics_17_0_1.xml b/.idea/libraries/Maven__org_openjfx_javafx_graphics_17_0_1.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_openjfx_javafx_graphics_17_0_1.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.openjfx:javafx-graphics:17.0.1">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-graphics/17.0.1/javafx-graphics-17.0.1.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-graphics/17.0.1/javafx-graphics-17.0.1-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-graphics/17.0.1/javafx-graphics-17.0.1-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_mongodb_mongodb_driver_sync_4_1_1.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_mongodb_mongodb_driver_sync_4_1_1.xml b/.idea/libraries/Maven__org_mongodb_mongodb_driver_sync_4_1_1.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_mongodb_mongodb_driver_sync_4_1_1.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.mongodb:mongodb-driver-sync:4.1.1">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/mongodb/mongodb-driver-sync/4.1.1/mongodb-driver-sync-4.1.1.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/mongodb/mongodb-driver-sync/4.1.1/mongodb-driver-sync-4.1.1-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/mongodb/mongodb-driver-sync/4.1.1/mongodb-driver-sync-4.1.1-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_mongodb_bson_4_1_1.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_mongodb_bson_4_1_1.xml b/.idea/libraries/Maven__org_mongodb_bson_4_1_1.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_mongodb_bson_4_1_1.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.mongodb:bson:4.1.1">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/mongodb/bson/4.1.1/bson-4.1.1.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/mongodb/bson/4.1.1/bson-4.1.1-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/mongodb/bson/4.1.1/bson-4.1.1-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__com_thesett_common_0_9_117.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__com_thesett_common_0_9_117.xml b/.idea/libraries/Maven__com_thesett_common_0_9_117.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__com_thesett_common_0_9_117.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: com.thesett:common:0.9.117">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/com/thesett/common/0.9.117/common-0.9.117.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/com/thesett/common/0.9.117/common-0.9.117-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/com/thesett/common/0.9.117/common-0.9.117-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: Large-Scale-Project.iml
-===================================================================
-diff --git a/Large-Scale-Project.iml b/Large-Scale-Project.iml
-deleted file mode 100644
---- a/Large-Scale-Project.iml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,53 +0,0 @@
--<?xml version="1.0" encoding="UTF-8"?>
--<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
--  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
--    <output url="file://$MODULE_DIR$/target/classes" />
--    <output-test url="file://$MODULE_DIR$/target/test-classes" />
--    <content url="file://$MODULE_DIR$">
--      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
--      <sourceFolder url="file://$MODULE_DIR$/test" isTestSource="true" />
--      <excludeFolder url="file://$MODULE_DIR$/target" />
--    </content>
--    <orderEntry type="inheritedJdk" />
--    <orderEntry type="sourceFolder" forTests="false" />
--    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
--    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
--    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.25" level="project" />
--    <orderEntry type="library" name="Maven: org.openjfx:javafx-swing:11-ea+24" level="project" />
--    <orderEntry type="library" name="Maven: org.openjfx:javafx-swing:win:11-ea+24" level="project" />
--    <orderEntry type="library" name="Maven: org.mongodb:mongodb-driver-sync:4.1.1" level="project" />
--    <orderEntry type="library" name="Maven: org.mongodb:bson:4.1.1" level="project" />
--    <orderEntry type="library" name="Maven: org.mongodb:mongodb-driver-core:4.1.1" level="project" />
--    <orderEntry type="library" name="Maven: org.openjfx:javafx-controls:17.0.1" level="project" />
--    <orderEntry type="library" name="Maven: org.openjfx:javafx-controls:win:17.0.1" level="project" />
--    <orderEntry type="library" name="Maven: org.openjfx:javafx-graphics:17.0.1" level="project" />
--    <orderEntry type="library" name="Maven: org.openjfx:javafx-graphics:win:17.0.1" level="project" />
--    <orderEntry type="library" name="Maven: org.openjfx:javafx-base:17.0.1" level="project" />
--    <orderEntry type="library" name="Maven: org.openjfx:javafx-base:win:17.0.1" level="project" />
--    <orderEntry type="library" name="Maven: org.mongodb:mongo-java-driver:3.8.0" level="project" />
--    <orderEntry type="library" name="Maven: org.neo4j.driver:neo4j-java-driver:4.1.1" level="project" />
--    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
--    <orderEntry type="library" scope="TEST" name="Maven: junit:junit:4.13.2" level="project" />
--    <orderEntry type="library" scope="TEST" name="Maven: org.hamcrest:hamcrest-core:1.3" level="project" />
--    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter:5.8.2" level="project" />
--    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-params:5.8.2" level="project" />
--    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-api:5.8.1" level="project" />
--    <orderEntry type="library" scope="TEST" name="Maven: org.opentest4j:opentest4j:1.2.0" level="project" />
--    <orderEntry type="library" scope="TEST" name="Maven: org.junit.platform:junit-platform-commons:1.8.1" level="project" />
--    <orderEntry type="library" scope="TEST" name="Maven: org.apiguardian:apiguardian-api:1.1.2" level="project" />
--    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-engine:5.8.1" level="project" />
--    <orderEntry type="library" scope="TEST" name="Maven: org.junit.platform:junit-platform-engine:1.8.1" level="project" />
--    <orderEntry type="library" name="Maven: org.openjfx:javafx-fxml:17-ea+11" level="project" />
--    <orderEntry type="library" name="Maven: org.openjfx:javafx-fxml:win:17-ea+11" level="project" />
--    <orderEntry type="library" name="Maven: com.eljavatar:SwingUtils:1.3.2" level="project" />
--    <orderEntry type="library" name="Maven: org.swinglabs.swingx:swingx-all:1.6.5-1" level="project" />
--    <orderEntry type="library" name="Maven: com.ibm.icu:icu4j:60.2" level="project" />
--    <orderEntry type="library" name="Maven: com.dorkbox:Notify:3.7" level="project" />
--    <orderEntry type="library" name="Maven: com.dorkbox:TweenEngine:8.3" level="project" />
--    <orderEntry type="library" name="Maven: com.dorkbox:ObjectPool:2.11" level="project" />
--    <orderEntry type="library" name="Maven: com.thesett:swing_utils:0.9.117" level="project" />
--    <orderEntry type="library" name="Maven: com.thesett:enhanced_text_model:0.9.117" level="project" />
--    <orderEntry type="library" name="Maven: com.thesett:text_model:0.9.117" level="project" />
--    <orderEntry type="library" name="Maven: com.thesett:common:0.9.117" level="project" />
--  </component>
--</module>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_8_1.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_8_1.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_8_1.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_8_1.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.junit.jupiter:junit-jupiter-engine:5.8.1">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.8.1/junit-jupiter-engine-5.8.1.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.8.1/junit-jupiter-engine-5.8.1-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.8.1/junit-jupiter-engine-5.8.1-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_openjfx_javafx_controls_win_17_0_1.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_openjfx_javafx_controls_win_17_0_1.xml b/.idea/libraries/Maven__org_openjfx_javafx_controls_win_17_0_1.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_openjfx_javafx_controls_win_17_0_1.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ /dev/null	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.openjfx:javafx-controls:win:17.0.1">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-controls/17.0.1/javafx-controls-17.0.1-win.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-controls/17.0.1/javafx-controls-17.0.1-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-controls/17.0.1/javafx-controls-17.0.1-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: src/main/java/it/unipi/dii/largescale/secondchance/entity/Insertion.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package main.java.it.unipi.dii.largescale.secondchance.entity;\r\n\r\nimport org.bson.Document;\r\nimport org.bson.types.ObjectId;\r\n\r\npublic class Insertion {\r\n\r\n    String id;\r\n    String category;\r\n    String description;\r\n    String gender;\r\n    double price;\r\n    int interested;\r\n    int views;\r\n    String status;\r\n    String color;\r\n    String size;\r\n    String brand;\r\n    String country;\r\n    String image_url;\r\n    String timestamp;\r\n    String seller;\r\n    public Insertion(){}\r\n\r\n    public Insertion(String id, String category, String description,\r\n                     String gender, double price, int interested,\r\n                     int views, String status, String color, String size,\r\n                     String brand, String country, String image_url,\r\n                     String timestamp, String seller){\r\n        this.id = id;\r\n        this.category = category;\r\n        this.description = description;\r\n        this.gender = gender;\r\n        this.price = price;\r\n        this.interested = interested;\r\n        this.views = views;\r\n        this.status = status;\r\n        this.color = color;\r\n        this.size = size;\r\n        this.brand = brand;\r\n        this.country = country;\r\n        this.image_url = image_url;\r\n        this.timestamp = timestamp;\r\n        this.seller = seller;\r\n    }\r\n\r\n    public static Insertion toInsertion(Document found) {\r\n\r\n        Insertion ins = new Insertion(found.get(\"_id\").toString(), found.getString(\"category\"), found.getString(\"description\"), found.getString(\"gender\"),\r\n                found.getDouble(\"price\"), found.getInteger(\"interested\"), found.getInteger(\"views\"), found.getString(\"status\"), found.getString(\"color\"),\r\n                found.getString(\"size\"), found.getString(\"brand\"), found.getString(\"country\"), found.getString(\"image_url\"), found.getString(\"timestamp\"),\r\n                found.getString(\"seller\"));\r\n\r\n        return ins;\r\n    }\r\n\r\n    public void setId(String id) {\r\n        this.id = id;\r\n    }\r\n\r\n    public void setCategory(String category) {\r\n        this.category = category;\r\n    }\r\n\r\n    public void setDescription(String description) {\r\n        this.description = description;\r\n    }\r\n\r\n    public void setGender(String gender) {\r\n        this.gender = gender;\r\n    }\r\n\r\n    public void setPrice(double price) {\r\n        this.price = price;\r\n    }\r\n\r\n    public void setInterested(int interested) {\r\n        this.interested = interested;\r\n    }\r\n\r\n    public void setViews(Integer views) {\r\n        this.views = views;\r\n    }\r\n\r\n    public void setStatus(String status) {\r\n        this.status = status;\r\n    }\r\n\r\n    public void setColor(String color) {\r\n        this.color = color;\r\n    }\r\n\r\n    public void setSize(String size) {\r\n        this.size = size;\r\n    }\r\n\r\n    public void setBrand(String brand) {\r\n        this.brand = brand;\r\n    }\r\n\r\n    public void setCountry(String country) {\r\n        this.country = country;\r\n    }\r\n\r\n    public void setImage_url(String image_url) {\r\n        this.image_url = image_url;\r\n    }\r\n\r\n    public void setTimestamp(String timestamp) {\r\n        this.timestamp = timestamp;\r\n    }\r\n\r\n    public void setSeller(String seller) {\r\n        this.seller = seller;\r\n    }\r\n\r\n    public String getCountry() {\r\n        return country;\r\n    }\r\n\r\n    public String getGender() {\r\n        return gender;\r\n    }\r\n\r\n    public Double getPrice() {\r\n        return price;\r\n    }\r\n\r\n    public Integer getInterested() {\r\n        return interested;\r\n    }\r\n\r\n    public Integer getViews() {\r\n        return views;\r\n    }\r\n\r\n    public String getBrand() {\r\n        return brand;\r\n    }\r\n\r\n    public String getCategory() {\r\n        return category;\r\n    }\r\n\r\n    public String getColor() {\r\n        return color;\r\n    }\r\n\r\n    public String getDescription() {\r\n        return description;\r\n    }\r\n\r\n    public String getId() {return id;}\r\n\r\n    public String getImage_url() {\r\n        return image_url;\r\n    }\r\n\r\n    public String getSeller() {\r\n        return seller;\r\n    }\r\n\r\n    public String getSize() {\r\n        return size;\r\n    }\r\n\r\n    public String getStatus() {\r\n        return status;\r\n    }\r\n\r\n    public String getTimestamp() {\r\n        return timestamp;\r\n    }\r\n\r\n    public static Document toDocument(Insertion insertion) {\r\n\r\n        Document ins = new Document()\r\n                .append(\"id\", new ObjectId(insertion.getId())).\r\n                append(\"category\", insertion.getCategory()).\r\n                append(\"description\", insertion.getDescription()).\r\n                append(\"gender\", insertion.getGender())\r\n                .append(\"price\", insertion.getPrice())\r\n                .append(\"interested\", insertion.getInterested())\r\n                .append(\"views\", insertion.getViews())\r\n                .append(\"status\", insertion.getStatus())\r\n                .append(\"color\", insertion.getColor())\r\n                .append(\"size\", insertion.getSize())\r\n                .append(\"country\", insertion.getCountry())\r\n                .append(\"image_url\", insertion.getImage_url())\r\n                .append(\"timestamp\", insertion.getTimestamp())\r\n                .append(\"seller\", insertion.getSeller());\r\n\r\n        return ins;\r\n\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"Insertion{\" +\r\n                \"id='\" + id + '\\'' +\r\n                \", category='\" + category + '\\'' +\r\n                \", description='\" + description + '\\'' +\r\n                \", gender=\" + gender +\r\n                \", price=\" + price +\r\n                \", interested=\" + interested +\r\n                \", views=\" + views +\r\n                \", status='\" + status + '\\'' +\r\n                \", color='\" + color + '\\'' +\r\n                \", size='\" + size + '\\'' +\r\n                \", brand='\" + brand + '\\'' +\r\n                \", country='\" + country + '\\'' +\r\n                \", image_url='\" + image_url + '\\'' +\r\n                \", timestamp='\" + timestamp + '\\'' +\r\n                \", seller='\" + seller + '\\'' +\r\n                '}';\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/it/unipi/dii/largescale/secondchance/entity/Insertion.java b/src/main/java/it/unipi/dii/largescale/secondchance/entity/Insertion.java
---- a/src/main/java/it/unipi/dii/largescale/secondchance/entity/Insertion.java	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ b/src/main/java/it/unipi/dii/largescale/secondchance/entity/Insertion.java	(date 1643915634000)
-@@ -20,6 +20,7 @@
-     String image_url;
-     String timestamp;
-     String seller;
-+
-     public Insertion(){}
- 
-     public Insertion(String id, String category, String description,
-Index: src/main/java/it/unipi/dii/largescale/secondchance/controller/SearchUserAdminController.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package main.java.it.unipi.dii.largescale.secondchance.controller;\r\n\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.scene.text.Text;\r\nimport javafx.scene.control.Button;\r\nimport javafx.stage.Stage;\r\nimport main.java.it.unipi.dii.largescale.secondchance.connection.ConnectionMongoDB;\r\nimport main.java.it.unipi.dii.largescale.secondchance.entity.User;\r\nimport main.java.it.unipi.dii.largescale.secondchance.utils.Session;\r\nimport main.java.it.unipi.dii.largescale.secondchance.utils.Utility;\r\nimport org.bson.Document;\r\n\r\nimport java.io.IOException;\r\nimport java.util.Objects;\r\n\r\npublic class SearchUserAdminController {\r\n\r\n    @FXML private TextField nameField;\r\n    @FXML private TextField usernameField;\r\n\r\n    @FXML private Text email;\r\n    @FXML private Text country;\r\n    @FXML private Text city;\r\n    @FXML private Text address;\r\n    @FXML private Text alertText;\r\n    @FXML private Text txtResult;\r\n\r\n    @FXML private Button btnLogout;\r\n    @FXML private Button btnSuspendUsr;\r\n    @FXML private Button btnUnsuspendUsr;\r\n\r\n    private String username;\r\n\r\n    private Session session;\r\n\r\n    public void initialize(){\r\n\r\n        btnSuspendUsr.setDisable(true);\r\n        btnUnsuspendUsr.setDisable(true);\r\n\r\n        nameField.textProperty().addListener((observable, oldValue, newValue) -> {\r\n            System.out.println(\"text changed from \" + oldValue + \" to \" + newValue);\r\n\r\n            if (!Objects.equals(newValue, \"\"))\r\n                usernameField.setText(\"\");\r\n        });\r\n\r\n        usernameField.textProperty().addListener((observable, oldValue, newValue) -> {\r\n            System.out.println(\"text changed from \" + oldValue + \" to \" + newValue);\r\n\r\n            if (!Objects.equals(newValue, \"\"))\r\n                nameField.setText(\"\");\r\n        });\r\n    }\r\n\r\n    public void searchUser(){\r\n\r\n        Document found;\r\n\r\n        username = usernameField.getText();\r\n        String name = nameField.getText();\r\n\r\n        if(name != null && !name.trim().isEmpty()) {\r\n\r\n            found = ConnectionMongoDB.connMongo.verifyUserInDB(name, false);\r\n\r\n            if (found == null) {\r\n                Utility.infoBox(\"The user is not present in the system. Please try again.\",\r\n                        \"Error!\",\r\n                        \"User not found!\");\r\n                return;\r\n            }\r\n\r\n            username = found.getString(\"username\");\r\n\r\n        }else {\r\n            found = ConnectionMongoDB.connMongo.verifyUserInDB(username, true);\r\n        }\r\n\r\n        if (found == null || ((name == null && name.trim().isEmpty()) &&\r\n                        (username != null && username.trim().isEmpty()))) {\r\n            Utility.infoBox(\"The user is not present in the system. Please try again.\",\r\n                            \"Error!\",\r\n                            \"User not found!\");\r\n        }else {\r\n\r\n            User usr = ConnectionMongoDB.connMongo.findUserDetails(username);\r\n\r\n            if (Objects.equals(usr.getSuspended(), \"Y\")) {\r\n                btnSuspendUsr.setDisable(true);\r\n                btnUnsuspendUsr.setDisable(false);\r\n            }else{\r\n                btnSuspendUsr.setDisable(false);\r\n                btnUnsuspendUsr.setDisable(true);\r\n            }\r\n\r\n            email.setText(usr.getEmail());\r\n            country.setText(usr.getCountry());\r\n            city.setText(usr.getCity());\r\n            address.setText(usr.getAddress());\r\n        }\r\n    }\r\n\r\n    public void suspendUser() {\r\n\r\n        ConnectionMongoDB.connMongo.suspendUser(username);\r\n\r\n        alertText.setText(\"User suspended!\");\r\n\r\n        btnSuspendUsr.setDisable(true);\r\n        btnUnsuspendUsr.setDisable(false);\r\n    }\r\n\r\n    public void unsuspendUser() {\r\n\r\n        ConnectionMongoDB.connMongo.unsuspendUser(username);\r\n\r\n        alertText.setText(\"User unsuspended!\");\r\n\r\n        btnSuspendUsr.setDisable(false);\r\n        btnUnsuspendUsr.setDisable(true);\r\n    }\r\n\r\n    public void logout() throws IOException {\r\n\r\n        session = Session.getInstance();\r\n        session.getLogoutUser();\r\n\r\n        // Closing current window\r\n        Stage stage = (Stage) btnLogout.getScene().getWindow();\r\n        stage.close();\r\n\r\n        // Open sign-in window\r\n        Stage primaryStage = new Stage();\r\n        primaryStage.setTitle(\"SecondChance\");\r\n        Utility.changePage(primaryStage, \"SignIn\");\r\n    }\r\n\r\n    public void generateCodes() throws IOException {\r\n\r\n        Process p = Runtime.getRuntime().exec(\"python randomCodesGenerator.py\");\r\n\r\n        txtResult.setText(\"  Codes generated successfully! \");\r\n\r\n        new java.util.Timer().schedule(\r\n                new java.util.TimerTask() {\r\n                    @Override\r\n                    public void run() {\r\n                        txtResult.setText(\"Here you can generated new codes!\");\r\n                    }\r\n                },\r\n                5000\r\n        );\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/it/unipi/dii/largescale/secondchance/controller/SearchUserAdminController.java b/src/main/java/it/unipi/dii/largescale/secondchance/controller/SearchUserAdminController.java
---- a/src/main/java/it/unipi/dii/largescale/secondchance/controller/SearchUserAdminController.java	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ b/src/main/java/it/unipi/dii/largescale/secondchance/controller/SearchUserAdminController.java	(date 1643914804000)
-@@ -87,7 +87,7 @@
- 
-             User usr = ConnectionMongoDB.connMongo.findUserDetails(username);
- 
--            if (Objects.equals(usr.getSuspended(), "Y")) {
-+            if (Objects.equals(usr.getSuspended(), true)) {
-                 btnSuspendUsr.setDisable(true);
-                 btnUnsuspendUsr.setDisable(false);
-             }else{
-Index: .idea/misc.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"17\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/target\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/misc.xml b/.idea/misc.xml
---- a/.idea/misc.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ b/.idea/misc.xml	(date 1643922654729)
-@@ -1,5 +1,6 @@
- <?xml version="1.0" encoding="UTF-8"?>
- <project version="4">
-+  <component name="ExternalStorageConfigurationManager" enabled="true" />
-   <component name="MavenProjectsManager">
-     <option name="originalFiles">
-       <list>
-@@ -7,7 +8,5 @@
-       </list>
-     </option>
-   </component>
--  <component name="ProjectRootManager" version="2" project-jdk-name="17" project-jdk-type="JavaSDK">
--    <output url="file://$PROJECT_DIR$/target" />
--  </component>
-+  <component name="ProjectRootManager" version="2" languageLevel="JDK_17_PREVIEW" project-jdk-name="corretto-1.8" project-jdk-type="JavaSDK" />
- </project>
-\ No newline at end of file
-Index: src/main/java/it/unipi/dii/largescale/secondchance/utils/Session.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package main.java.it.unipi.dii.largescale.secondchance.utils;\r\nimport main.java.it.unipi.dii.largescale.secondchance.entity.User;\r\nimport org.bson.Document;\r\n\r\npublic class Session{\r\n\r\n    private User logUser;\r\n    private static Session session = null;\r\n\r\n    public Session(){}\r\n\r\n    public static Session getInstance(){\r\n\r\n        if(session == null)\r\n            session = new Session();\r\n        return session;\r\n    }\r\n\r\n    public void setLogUser(Document user, Boolean isAdmin){\r\n\r\n        if(session == null)\r\n            throw new RuntimeException(\"Session not already active\");\r\n        else {\r\n            if(isAdmin)\r\n                session.logUser = User.fromDocumentAdmin(user);\r\n            else\r\n                session.logUser = User.fromDocument(user);\r\n        }\r\n    }\r\n\r\n    public static User getLogUser() {\r\n\r\n        if(session == null)\r\n            throw new RuntimeException(\"Session not already active\");\r\n        else\r\n            return session.logUser;\r\n    }\r\n\r\n    public User getLoggedUser() {\r\n        if(session == null)\r\n            throw new RuntimeException(\"Session is not active.\");\r\n        else\r\n            return session.logUser;\r\n    }\r\n\r\n    public void getLogoutUser() {\r\n\r\n        logUser = null;\r\n        session = null; // [1]\r\n    }\r\n\r\n}\r\n\r\n\r\n// [1]: After this, if there is no reference to the object\r\n//      it will be deleted by the garbage collector
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/it/unipi/dii/largescale/secondchance/utils/Session.java b/src/main/java/it/unipi/dii/largescale/secondchance/utils/Session.java
---- a/src/main/java/it/unipi/dii/largescale/secondchance/utils/Session.java	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ b/src/main/java/it/unipi/dii/largescale/secondchance/utils/Session.java	(date 1643917446000)
-@@ -1,10 +1,11 @@
- package main.java.it.unipi.dii.largescale.secondchance.utils;
--import main.java.it.unipi.dii.largescale.secondchance.entity.User;
-+import main.java.it.unipi.dii.largescale.secondchance.entity.GeneralUser;
-+import main.java.it.unipi.dii.largescale.secondchance.entity.*;
- import org.bson.Document;
- 
- public class Session{
- 
--    private User logUser;
-+    private GeneralUser logUser;
-     private static Session session = null;
- 
-     public Session(){}
-@@ -20,9 +21,9 @@
- 
-         if(session == null)
-             throw new RuntimeException("Session not already active");
--        else {
-+        else { //check
-             if(isAdmin)
--                session.logUser = User.fromDocumentAdmin(user);
-+                session.logUser = new Admin(user.getString("username"), null);
-             else
-                 session.logUser = User.fromDocument(user);
-         }
-@@ -33,14 +34,14 @@
-         if(session == null)
-             throw new RuntimeException("Session not already active");
-         else
--            return session.logUser;
-+            return (User) session.logUser;
-     }
- 
-     public User getLoggedUser() {
-         if(session == null)
-             throw new RuntimeException("Session is not active.");
-         else
--            return session.logUser;
-+            return (User) session.logUser;
-     }
- 
-     public void getLogoutUser() {
-Index: .idea/compiler.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <annotationProcessing>\r\n      <profile name=\"Maven default annotation processors profile\" enabled=\"true\">\r\n        <sourceOutputDir name=\"target/generated-sources/annotations\" />\r\n        <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />\r\n        <outputRelativeToContentRoot value=\"true\" />\r\n        <module name=\"Large-Scale-Project\" />\r\n      </profile>\r\n    </annotationProcessing>\r\n    <bytecodeTargetLevel>\r\n      <module name=\"Large-Scale-Project\" target=\"1.8\" />\r\n    </bytecodeTargetLevel>\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/compiler.xml b/.idea/compiler.xml
---- a/.idea/compiler.xml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ b/.idea/compiler.xml	(date 1643922504789)
-@@ -9,8 +9,5 @@
-         <module name="Large-Scale-Project" />
-       </profile>
-     </annotationProcessing>
--    <bytecodeTargetLevel>
--      <module name="Large-Scale-Project" target="1.8" />
--    </bytecodeTargetLevel>
-   </component>
- </project>
-\ No newline at end of file
-Index: target/classes/FXML/SignUp.fxml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import java.lang.*?>\r\n<?import javafx.scene.control.*?>\r\n<?import javafx.scene.layout.*?>\r\n<?import javafx.scene.text.*?>\r\n\r\n<?import javafx.collections.FXCollections?>\r\n<AnchorPane prefHeight=\"700.0\" prefWidth=\"900.0\" style=\"-fx-background-color: #EBEBEB;\" xmlns=\"http://javafx.com/javafx/8\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"main.java.it.unipi.dii.largescale.secondchance.controller.SignUpController\">\r\n   <children>\r\n      <Pane layoutX=\"352.0\" layoutY=\"145.0\" prefHeight=\"487.0\" prefWidth=\"526.0\" style=\"-fx-background-color: rgb(70,130,180);\">\r\n         <children>\r\n            <Label layoutX=\"102.0\" layoutY=\"101.0\" text=\"Username:\">\r\n               <font>\r\n                  <Font size=\"13.0\" />\r\n               </font>\r\n            </Label>\r\n            <TextField fx:id=\"us\" layoutX=\"67.0\" layoutY=\"125.0\" style=\"-fx-background-radius: 5;\" />\r\n            <Label layoutX=\"353.0\" layoutY=\"103.0\" text=\"Password:\">\r\n               <font>\r\n                  <Font size=\"13.0\" />\r\n               </font>\r\n            </Label>\r\n            <TextField fx:id=\"pw\" layoutX=\"314.0\" layoutY=\"125.0\" style=\"-fx-background-radius: 5;\" />\r\n            <Label layoutX=\"365.0\" layoutY=\"169.0\" text=\"Email:\">\r\n               <font>\r\n                  <Font size=\"13.0\" />\r\n               </font>\r\n            </Label>\r\n            <TextField fx:id=\"em\" layoutX=\"307.0\" layoutY=\"192.0\" prefHeight=\"17.0\" prefWidth=\"149.0\" style=\"-fx-background-radius: 5;\" />\r\n            <Label layoutX=\"83.0\" layoutY=\"168.0\" text=\"Name and Surname:\">\r\n               <font>\r\n                  <Font size=\"13.0\" />\r\n               </font>\r\n            </Label>\r\n            <TextField fx:id=\"nm\" layoutX=\"67.0\" layoutY=\"192.0\" prefHeight=\"17.0\" prefWidth=\"149.0\" style=\"-fx-background-radius: 5;\" />\r\n            <Label layoutX=\"117.0\" layoutY=\"241.0\" text=\"Country:\">\r\n               <font>\r\n                  <Font size=\"13.0\" />\r\n               </font>\r\n            </Label>\r\n            <Label layoutX=\"376.0\" layoutY=\"241.0\" text=\"City:\">\r\n               <font>\r\n                  <Font size=\"13.0\" />\r\n               </font>\r\n            </Label>\r\n            <TextField fx:id=\"ci\" layoutX=\"314.0\" layoutY=\"260.0\" prefHeight=\"17.0\" prefWidth=\"149.0\" style=\"-fx-background-radius: 5;\" />\r\n            <Label layoutX=\"234.0\" layoutY=\"299.0\" text=\"Address:\">\r\n               <font>\r\n                  <Font size=\"13.0\" />\r\n               </font>\r\n            </Label>\r\n            <TextField fx:id=\"ad\" layoutX=\"200.0\" layoutY=\"334.0\" prefHeight=\"17.0\" prefWidth=\"149.0\" style=\"-fx-background-radius: 5;\" />\r\n            <Button layoutX=\"155.0\" layoutY=\"405.0\" onAction=\"#registration\" prefHeight=\"25.0\" prefWidth=\"240.0\" style=\"-fx-background-radius: 5; -fx-background-color: rgb(220,220,220);\" text=\"Sign up\" />\r\n            <Text fill=\"WHITE\" layoutX=\"146.0\" layoutY=\"44.0\" text=\"Signup to join SecondChance!\">\r\n               <font>\r\n                  <Font size=\"18.0\" />\r\n               </font>\r\n            </Text>\r\n            <ComboBox fx:id=\"co\" layoutX=\"69.0\" layoutY=\"260.0\" prefHeight=\"22.0\" prefWidth=\"149.0\" promptText=\"Select your country\" >\r\n            <items>\r\n               <FXCollections fx:factory=\"observableArrayList\">\r\n                  <String fx:value=\"Italy\" />\r\n                  <String fx:value=\"Netherlands\" />\r\n                  <String fx:value=\"Spain\" />\r\n                  <String fx:value=\"Austria\" />\r\n                  <String fx:value=\"Poland\" />\r\n                  <String fx:value=\"Ireland\" />\r\n                  <String fx:value=\"France\" />\r\n                  <String fx:value=\"Canada\" />\r\n                  <String fx:value=\"United Kingdom (Great Britain)\" />\r\n                  <String fx:value=\"Brazil\" />\r\n               </FXCollections>\r\n            </items>\r\n            </ComboBox>\r\n         </children>\r\n      </Pane>\r\n      <Pane layoutX=\"35.0\" layoutY=\"145.0\" prefHeight=\"487.0\" prefWidth=\"317.0\" style=\"-fx-background-color: white;\">\r\n         <children>\r\n            <Text fx:id=\"SignIn\" fill=\"#2582bf\" layoutX=\"38.0\" layoutY=\"168.0\" text=\"Are you already registered?\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Text>\r\n            <Button fx:id=\"signInShower\" layoutX=\"39.0\" layoutY=\"261.0\" mnemonicParsing=\"false\" onMouseClicked=\"#ShowSignIn\" prefHeight=\"25.0\" prefWidth=\"240.0\" style=\"-fx-background-color: rgb(220,220,220);\" text=\"Click here\" textFill=\"#2582bf\" />\r\n            <Text fill=\"#2582bf\" layoutX=\"138.0\" layoutY=\"205.0\" text=\"Log In!\">\r\n               <font>\r\n                  <Font size=\"14.0\" />\r\n               </font>\r\n            </Text>\r\n         </children>\r\n      </Pane>\r\n   </children>\r\n</AnchorPane>\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/target/classes/FXML/SignUp.fxml b/target/classes/FXML/SignUp.fxml
---- a/target/classes/FXML/SignUp.fxml	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ b/target/classes/FXML/SignUp.fxml	(date 1643927683041)
-@@ -1,11 +1,12 @@
- <?xml version="1.0" encoding="UTF-8"?>
- 
-+<?import javafx.collections.*?>
- <?import java.lang.*?>
- <?import javafx.scene.control.*?>
- <?import javafx.scene.layout.*?>
- <?import javafx.scene.text.*?>
--
- <?import javafx.collections.FXCollections?>
-+
- <AnchorPane prefHeight="700.0" prefWidth="900.0" style="-fx-background-color: #EBEBEB;" xmlns="http://javafx.com/javafx/8" xmlns:fx="http://javafx.com/fxml/1" fx:controller="main.java.it.unipi.dii.largescale.secondchance.controller.SignUpController">
-    <children>
-       <Pane layoutX="352.0" layoutY="145.0" prefHeight="487.0" prefWidth="526.0" style="-fx-background-color: rgb(70,130,180);">
-@@ -45,19 +46,19 @@
-                </font>
-             </Label>
-             <TextField fx:id="ci" layoutX="314.0" layoutY="260.0" prefHeight="17.0" prefWidth="149.0" style="-fx-background-radius: 5;" />
--            <Label layoutX="234.0" layoutY="299.0" text="Address:">
-+            <Label layoutX="364.0" layoutY="308.0" text="Address:">
-                <font>
-                   <Font size="13.0" />
-                </font>
-             </Label>
--            <TextField fx:id="ad" layoutX="200.0" layoutY="334.0" prefHeight="17.0" prefWidth="149.0" style="-fx-background-radius: 5;" />
-+            <TextField fx:id="ad" layoutX="314.0" layoutY="333.0" prefHeight="17.0" prefWidth="149.0" style="-fx-background-radius: 5;" />
-             <Button layoutX="155.0" layoutY="405.0" onAction="#registration" prefHeight="25.0" prefWidth="240.0" style="-fx-background-radius: 5; -fx-background-color: rgb(220,220,220);" text="Sign up" />
-             <Text fill="WHITE" layoutX="146.0" layoutY="44.0" text="Signup to join SecondChance!">
-                <font>
-                   <Font size="18.0" />
-                </font>
-             </Text>
--            <ComboBox fx:id="co" layoutX="69.0" layoutY="260.0" prefHeight="22.0" prefWidth="149.0" promptText="Select your country" >
-+            <ComboBox fx:id="co" layoutX="69.0" layoutY="260.0" prefHeight="22.0" prefWidth="149.0" promptText="Select your country">
-             <items>
-                <FXCollections fx:factory="observableArrayList">
-                   <String fx:value="Italy" />
-@@ -73,6 +74,12 @@
-                </FXCollections>
-             </items>
-             </ComboBox>
-+            <TextField fx:id="image" layoutX="72.0" layoutY="333.0" style="-fx-background-radius: 5;"/>
-+            <Label layoutX="106.0" layoutY="308.0" text="Image profile:">
-+               <font>
-+                  <Font size="13.0" />
-+               </font>
-+            </Label>
-          </children>
-       </Pane>
-       <Pane layoutX="35.0" layoutY="145.0" prefHeight="487.0" prefWidth="317.0" style="-fx-background-color: white;">
-Index: src/main/java/it/unipi/dii/largescale/secondchance/entity/Order.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package main.java.it.unipi.dii.largescale.secondchance.entity;\r\n\r\npublic class Order {\r\n\r\n    String user;\r\n    String timestamp;\r\n    Insertion insertion;\r\n    boolean reviewed;\r\n\r\n    public Order(String user, String timestamp, Insertion insertion){\r\n\r\n        this.user = user;\r\n        this.timestamp = timestamp;\r\n        this.insertion = insertion;\r\n        this.reviewed = false;\r\n    }\r\n\r\n    public String getUser() {\r\n        return user;\r\n    }\r\n\r\n    public void setUser(String buyer) {\r\n        this.user = buyer;\r\n    }\r\n\r\n    public String getTimestamp() {\r\n        return timestamp;\r\n    }\r\n\r\n    public void setTimestamp(String timestamp) {\r\n        this.timestamp = timestamp;\r\n    }\r\n\r\n    public Insertion getInsertion() {\r\n        return insertion;\r\n    }\r\n\r\n    public void setInsertion(Insertion insertion) {\r\n        this.insertion = insertion;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"Order{\" +\r\n                \", buyer='\" + user + '\\'' +\r\n                \", timestamp='\" + timestamp + '\\'' +\r\n                \", insertion='\" + insertion + '\\'' +\r\n                '}';\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/it/unipi/dii/largescale/secondchance/entity/Order.java b/src/main/java/it/unipi/dii/largescale/secondchance/entity/Order.java
---- a/src/main/java/it/unipi/dii/largescale/secondchance/entity/Order.java	(revision b8b9c7f33e6a1d84ac6725955c0aedaa2664d6f9)
-+++ b/src/main/java/it/unipi/dii/largescale/secondchance/entity/Order.java	(date 1643915634000)
-@@ -19,8 +19,8 @@
-         return user;
-     }
- 
--    public void setUser(String buyer) {
--        this.user = buyer;
-+    public void setUser(String user) {
-+        this.user = user;
-     }
- 
-     public String getTimestamp() {
Index: target/classes/FXML/Stats.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.Button?>\r\n<?import javafx.scene.control.Label?>\r\n<?import javafx.scene.control.RadioButton?>\r\n<?import javafx.scene.control.TextField?>\r\n<?import javafx.scene.control.ToggleGroup?>\r\n<?import javafx.scene.layout.AnchorPane?>\r\n<?import javafx.scene.text.Font?>\r\n<?import javafx.scene.text.Text?>\r\n\r\n<?import javafx.scene.layout.HBox?>\r\n<?import javafx.scene.layout.VBox?>\r\n\r\n<AnchorPane prefHeight=\"400.0\" prefWidth=\"800.0\" style=\"-fx-background-color: rgb(230, 230, 255);\"\r\n            xmlns=\"http://javafx.com/javafx/17\" xmlns:fx=\"http://javafx.com/fxml/1\"\r\n            fx:controller=\"main.java.it.unipi.dii.largescale.secondchance.controller.StatsController\">\r\n   <!-- Page title -->\r\n   <Label layoutX=\"321.0\" layoutY=\"16.0\" text=\"Stats Section\" textAlignment=\"CENTER\" textFill=\"#b936e4\">\r\n   <font>\r\n      <Font size=\"24.0\"/>\r\n   </font>\r\n   </Label>\r\n   <!-- Content box -->\r\n   <VBox prefWidth=\"800.0\" translateX=\"80.0\" layoutY=\"50.0\" spacing=\"30.0\">\r\n      <Text strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" style=\"-fx-font-weight: bold;\" text=\"Specify the parameters:\"\r\n            underline=\"true\">\r\n         <font>\r\n            <Font size=\"16.0\"/>\r\n         </font>\r\n      </Text>\r\n      <HBox prefWidth=\"800.0\" spacing=\"50.0\" translateY=\"10.0\">   <!-- Set parameters -->\r\n         <VBox spacing=\"20.0\">\r\n            <Label text=\"Insert the Top K number:\"/>\r\n            <Label text=\"Insert the country you want:\"/>\r\n            <Label text=\"Please insert the country you want:\"/>\r\n         </VBox>\r\n         <VBox spacing=\"10.0\" translateY=\"-5.0\">\r\n            <TextField fx:id=\"boxKNumber\" alignment=\"CENTER\" prefHeight=\"26.0\" prefWidth=\"57.0\" promptText=\"K\"/>\r\n            <TextField fx:id=\"txtFieldCountry\" alignment=\"CENTER\" prefHeight=\"26.0\" prefWidth=\"114.0\"\r\n                       promptText=\"Country\"/>\r\n            <TextField fx:id=\"txtFieldCategory\" alignment=\"CENTER\" prefHeight=\"26.0\" prefWidth=\"114.0\"\r\n                       promptText=\"Category\"/>\r\n         </VBox>\r\n      </HBox>\r\n      <Label text=\"Select the query do you want to perform:\" style=\"-fx-font-weight: bold;\" underline=\"true\"\r\n             translateY=\"10.0\">\r\n         <font>\r\n            <Font size=\"15.0\"/>\r\n         </font>\r\n      </Label>\r\n      <HBox prefWidth=\"800.0\" spacing=\"20.0\">\r\n         <VBox spacing=\"10.0\">   <!-- MongoDB stats -->\r\n            <RadioButton fx:id=\"rBTopKRated\" mnemonicParsing=\"false\" text=\"Top K Rated User (by country) \"\r\n                         toggleGroup=\"$TopK\">\r\n               <toggleGroup>\r\n                  <ToggleGroup fx:id=\"TopK\"/>\r\n               </toggleGroup>\r\n            </RadioButton>\r\n            <RadioButton fx:id=\"rBPurch\" mnemonicParsing=\"false\" prefHeight=\"17.0\"\r\n                         text=\"Top k users with more purchased items\" toggleGroup=\"$TopK\"/>\r\n            <RadioButton fx:id=\"rBSold\" mnemonicParsing=\"false\" prefHeight=\"21.0\"\r\n                         text=\"Top k users with more sold items\" toggleGroup=\"$TopK\"/>\r\n         </VBox>\r\n         <VBox spacing=\"10.0\">   <!-- Neo4j stats -->\r\n            <RadioButton fx:id=\"rBTopKInterestingIns\" mnemonicParsing=\"false\"\r\n                         text=\"Top K interesting insertions (by category) \" toggleGroup=\"$TopK\"/>\r\n            <RadioButton fx:id=\"rBTopKViewedIns\" mnemonicParsing=\"false\" text=\"Top K viewed insertions (by category) \"\r\n                         toggleGroup=\"$TopK\"/>\r\n            <RadioButton fx:id=\"rBLikesPerCategory\" mnemonicParsing=\"false\" prefHeight=\"21.0\"\r\n                         text=\"Number of likes per category\" toggleGroup=\"$TopK\"/>\r\n         </VBox>\r\n      </HBox>\r\n      <!-- Process stats button -->\r\n      <Button fx:id=\"elaboraButton\" translateX=\"250.0\" mnemonicParsing=\"false\"\r\n              onMouseClicked=\"#redirectToStatFunction\"\r\n              style=\"-fx-background-color: rgb(206, 153, 255)rgb(206, 153, 255); -fx-background-radius: 50;\"\r\n              text=\"Process results\" textFill=\"#fffffff0\"/>\r\n   </VBox>\r\n</AnchorPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/FXML/Stats.fxml b/target/classes/FXML/Stats.fxml
--- a/target/classes/FXML/Stats.fxml	(revision a55fe6903047323a13ce66a8f8b4011972add4cd)
+++ b/target/classes/FXML/Stats.fxml	(date 1644659166630)
@@ -23,7 +23,7 @@
    </Label>
    <!-- Content box -->
    <VBox prefWidth="800.0" translateX="80.0" layoutY="50.0" spacing="30.0">
-      <Text strokeType="OUTSIDE" strokeWidth="0.0" style="-fx-font-weight: bold;" text="Specify the parameters:"
+      <Text strokeWidth="0.0" style="-fx-font-weight: bold;" text="Specify the parameters:"
             underline="true">
          <font>
             <Font size="16.0"/>
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"78096fe8-9952-45af-bf90-4f98cdf0dd02\" name=\"Changes\" comment=\"fix search in SearchUserController, add function for see insertion in common between users, unify pages of all insertionList pages into one, fix controls new insertion\" />\r\n    <list id=\"03123c90-a928-4e0a-bf69-e1d59086bd15\" name=\"Changes by adelmobrunelli\" comment=\"Changes by adelmobrunelli\" />\r\n    <list id=\"6bb4f2c0-83c9-4d43-b728-c7f57c05ff7b\" name=\"Changes by marti\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n        <option value=\"CSS File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitSEFilterConfiguration\">\r\n    <file-type-list>\r\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\r\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\r\n      <filtered-out-file-type name=\"TAG\" />\r\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\r\n    </file-type-list>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"24cGP07hMuydzouSsyqELUKrZS4\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"codeWithMe.voiceChat.enabledByDefault\" value=\"false\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/target/classes/FXML\" />\r\n    <property name=\"list.type.of.created.stylesheet\" value=\"CSS\" />\r\n    <property name=\"node.js.detected.package.eslint\" value=\"true\" />\r\n    <property name=\"node.js.selected.package.eslint\" value=\"(autodetect)\" />\r\n    <property name=\"node.js.selected.package.tslint\" value=\"(autodetect)\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Project\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.0\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.0\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"preferences.lookFeel\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\matre\\Desktop\\Large-Scale-Project\\target\\classes\\FXML\" />\r\n      <recent name=\"C:\\Users\\matre\\Desktop\\Large-Scale-Project\\target\\classes\" />\r\n      <recent name=\"C:\\Users\\matre\\Desktop\\Large-Scale-Project\\target\\classes\\img\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"SecondChanceGUI\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"main.java.it.unipi.dii.largescale.secondchance.SecondChanceGUI\" />\r\n      <module name=\"Large-Scale-Project\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"main.java.it.unipi.dii.largescale.secondchance.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.SecondChanceGUI\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"78096fe8-9952-45af-bf90-4f98cdf0dd02\" name=\"Changes\" comment=\"\" />\r\n      <created>1643922440258</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1643922440258</updated>\r\n      <workItem from=\"1643922443095\" duration=\"3073000\" />\r\n      <workItem from=\"1643983831619\" duration=\"15905000\" />\r\n      <workItem from=\"1644075264558\" duration=\"7403000\" />\r\n      <workItem from=\"1644146357420\" duration=\"406000\" />\r\n      <workItem from=\"1644147960802\" duration=\"711000\" />\r\n      <workItem from=\"1644152757678\" duration=\"123000\" />\r\n      <workItem from=\"1644162541952\" duration=\"6928000\" />\r\n      <workItem from=\"1644170803249\" duration=\"461000\" />\r\n      <workItem from=\"1644310037703\" duration=\"6467000\" />\r\n      <workItem from=\"1644347340303\" duration=\"8090000\" />\r\n      <workItem from=\"1644395849334\" duration=\"7625000\" />\r\n      <workItem from=\"1644572069243\" duration=\"11852000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Fix admin function, fix other problems\">\r\n      <created>1643993961652</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1643993961652</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Changes by adelmobrunelli\">\r\n      <created>1643993973632</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1643993973632</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Fix img_profile, fix followers and following show from profile page, fix registration user\">\r\n      <created>1644003160796</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1644003160796</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Fix do orders and update and put review, error message on clicking insertion after purchase, fix sign up\">\r\n      <created>1644082904622</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1644082904623</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"upadte commit\">\r\n      <created>1644152843260</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1644152843260</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"fix most active user into admin, fix searchinsertion arrows\">\r\n      <created>1644170714400</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1644170714400</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"New insertion with ObjectId\">\r\n      <created>1644228305719</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1644228305719</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Changes regarding new collection balance.\">\r\n      <created>1644255846996</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1644255846996</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"SearchInsertionController arrows fixed.\">\r\n      <created>1644272830774</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1644272830774</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"add new functions admin page\">\r\n      <created>1644334461819</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1644334461819</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"fix search in SearchUserController, add function for see insertion in common between users, unify pages of all insertionList pages into one, fix controls new insertion\">\r\n      <created>1644591555246</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1644591555246</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"12\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"fix\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Fix admin function, fix other problems\" />\r\n    <MESSAGE value=\"Changes by adelmobrunelli\" />\r\n    <MESSAGE value=\"Fix img_profile, fix followers and following show from profile page, fix registration user\" />\r\n    <MESSAGE value=\"Fix do orders and update and put review, error message on clicking insertion after purchase, fix sign up\" />\r\n    <MESSAGE value=\"upadte commit\" />\r\n    <MESSAGE value=\"fix most active user into admin, fix searchinsertion arrows\" />\r\n    <MESSAGE value=\"Merged the two files FollowersController.java and FollowingController.java. &#10;&#10;Merged the two files FollowersPage.fxml and FollowingPage.fxml.\" />\r\n    <MESSAGE value=\"add new functions admin page\" />\r\n    <MESSAGE value=\"fix search in SearchUserController, add function for see insertion in common between users, unify pages of all insertionList pages into one, fix controls new insertion\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"fix search in SearchUserController, add function for see insertion in common between users, unify pages of all insertionList pages into one, fix controls new insertion\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision a55fe6903047323a13ce66a8f8b4011972add4cd)
+++ b/.idea/workspace.xml	(date 1644856240427)
@@ -4,7 +4,17 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="78096fe8-9952-45af-bf90-4f98cdf0dd02" name="Changes" comment="fix search in SearchUserController, add function for see insertion in common between users, unify pages of all insertionList pages into one, fix controls new insertion" />
+    <list default="true" id="78096fe8-9952-45af-bf90-4f98cdf0dd02" name="Changes" comment="Delete unused functions, fixes">
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_04_02_2022_15_11_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_04_02_2022_15_11__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/it/unipi/dii/largescale/secondchance/connection/ConnectionMongoDB.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/unipi/dii/largescale/secondchance/connection/ConnectionMongoDB.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/it/unipi/dii/largescale/secondchance/connection/ConnectionNeo4jDB.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/unipi/dii/largescale/secondchance/connection/ConnectionNeo4jDB.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/it/unipi/dii/largescale/secondchance/controller/ProfileController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/unipi/dii/largescale/secondchance/controller/ProfileController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/it/unipi/dii/largescale/secondchance/controller/StatsController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/unipi/dii/largescale/secondchance/controller/StatsController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/FXML/Stats.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/FXML/Stats.fxml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/FXML/Stats.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/FXML/Stats.fxml" afterDir="false" />
+    </list>
     <list id="03123c90-a928-4e0a-bf69-e1d59086bd15" name="Changes by adelmobrunelli" comment="Changes by adelmobrunelli" />
     <list id="6bb4f2c0-83c9-4d43-b728-c7f57c05ff7b" name="Changes by marti" comment="" />
     <option name="SHOW_DIALOG" value="false" />
@@ -106,6 +116,13 @@
       <workItem from="1644347340303" duration="8090000" />
       <workItem from="1644395849334" duration="7625000" />
       <workItem from="1644572069243" duration="11852000" />
+      <workItem from="1644596565402" duration="4091000" />
+      <workItem from="1644656984416" duration="2955000" />
+      <workItem from="1644661650621" duration="2276000" />
+      <workItem from="1644688576597" duration="504000" />
+      <workItem from="1644764150675" duration="969000" />
+      <workItem from="1644776293904" duration="4097000" />
+      <workItem from="1644852191819" duration="3759000" />
     </task>
     <task id="LOCAL-00001" summary="Fix admin function, fix other problems">
       <created>1643993961652</created>
@@ -184,7 +201,14 @@
       <option name="project" value="LOCAL" />
       <updated>1644591555246</updated>
     </task>
-    <option name="localTasksCounter" value="12" />
+    <task id="LOCAL-00012" summary="Delete unused functions, fixes">
+      <created>1644591784154</created>
+      <option name="number" value="00012" />
+      <option name="presentableId" value="LOCAL-00012" />
+      <option name="project" value="LOCAL" />
+      <updated>1644591784154</updated>
+    </task>
+    <option name="localTasksCounter" value="13" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -224,6 +248,7 @@
     <MESSAGE value="Merged the two files FollowersController.java and FollowingController.java. &#10;&#10;Merged the two files FollowersPage.fxml and FollowingPage.fxml." />
     <MESSAGE value="add new functions admin page" />
     <MESSAGE value="fix search in SearchUserController, add function for see insertion in common between users, unify pages of all insertionList pages into one, fix controls new insertion" />
-    <option name="LAST_COMMIT_MESSAGE" value="fix search in SearchUserController, add function for see insertion in common between users, unify pages of all insertionList pages into one, fix controls new insertion" />
+    <MESSAGE value="Delete unused functions, fixes" />
+    <option name="LAST_COMMIT_MESSAGE" value="Delete unused functions, fixes" />
   </component>
 </project>
\ No newline at end of file
